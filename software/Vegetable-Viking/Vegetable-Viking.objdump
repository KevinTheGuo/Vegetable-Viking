
Vegetable-Viking.elf:     file format elf32-littlenios2
Vegetable-Viking.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1000022c

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x0000f954 memsz 0x0000f954 flags r-x
    LOAD off    0x00010974 vaddr 0x1000f974 paddr 0x10011460 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012f4c vaddr 0x10012f4c paddr 0x10012f4c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f394  1000022c  1000022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003b4  1000f5c0  1000f5c0  000105c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  1000f974  10011460  00010974  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10012f4c  10012f4c  00012f4c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00012460  2**0
                  CONTENTS
  7 .sdram        00000000  100130ac  100130ac  00012460  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012460  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000d50  00000000  00000000  00012488  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002476a  00000000  00000000  000131d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000929d  00000000  00000000  00037942  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b2c4  00000000  00000000  00040bdf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000020c4  00000000  00000000  0004bea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003734  00000000  00000000  0004df68  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00016dd4  00000000  00000000  0005169c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00068470  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001388  00000000  00000000  00068480  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006c9fd  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006ca00  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006ca0c  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006ca0d  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006ca0e  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006ca12  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006ca16  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0006ca1a  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0006ca25  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0006ca30  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000b  00000000  00000000  0006ca3b  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000001a  00000000  00000000  0006ca46  2**0
                  CONTENTS, READONLY
 30 .jdi          00004447  00000000  00000000  0006ca60  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000c5328  00000000  00000000  00070ea7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
1000022c l    d  .text	00000000 .text
1000f5c0 l    d  .rodata	00000000 .rodata
1000f974 l    d  .rwdata	00000000 .rwdata
10012f4c l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
100130ac l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Vegetable-Viking_bsp//obj/HAL/src/crt0.o
10000264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
10001898 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 impure.c
1000f974 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 timesr.c
00000000 l    df *ABS*	00000000 vfprintf.c
1000f7be l     O .rodata	00000010 zeroes.4181
1000f7ce l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10003e5c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10005a04 l     F .text	00000008 __fp_lock
10005a0c l     F .text	00000008 __fp_unlock
10005a20 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
1000fdb8 l     O .rwdata	00000020 lc_ctype_charset
1000fd98 l     O .rwdata	00000020 lc_message_charset
1000fdd8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1000f7fc l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
10008f50 l     F .text	000000fc __sprint_r.part.0
1000f930 l     O .rodata	00000010 blanks.4125
1000f920 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
1000cd90 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1000ceb8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1000cee4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1000cfec l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1000d0e8 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1000d1cc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1000d3b0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10011450 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
1000d634 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
1000d70c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1000d85c l     F .text	00000038 alt_dev_reg
100103c0 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1000db38 l     F .text	00000204 altera_avalon_jtag_uart_irq
1000dd3c l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1000e4b8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1000e950 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1000eaa8 l     F .text	00000050 alt_get_errno
1000eaf8 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10012f80 g     O .bss	00000004 alt_instruction_exception_handler
10008590 g     F .text	00000074 _mprec_log10
1000867c g     F .text	0000008c __any_on
1000a97c g     F .text	00000054 _isatty_r
1000f808 g     O .rodata	00000028 __mprec_tinytens
1000d2f8 g     F .text	00000078 alt_main
10001aa0 g     F .text	000000b8 _puts_r
10012fac g     O .bss	00000100 alt_irq
1000a9d0 g     F .text	0000005c _lseek_r
10011460 g       *ABS*	00000000 __flash_rwdata_start
1000c2f0 g     F .text	00000084 .hidden __eqdf2
100130ac g       *ABS*	00000000 __alt_heap_start
10001a64 g     F .text	0000003c printf
1000abf8 g     F .text	0000009c _wcrtomb_r
10008e48 g     F .text	0000005c __sseek
10005d68 g     F .text	00000010 __sinit
1000aa88 g     F .text	00000154 __swbuf_r
100067e0 g     F .text	0000007c _setlocale_r
10005bc0 g     F .text	00000078 __sfmoreglue
1000d390 g     F .text	00000020 __malloc_unlock
10007440 g     F .text	0000015c memmove
10005d50 g     F .text	00000018 _cleanup
100076c0 g     F .text	000000a8 _Balloc
10000d58 g     F .text	000000e0 .hidden __gtdf2
1000eee8 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
10000000 g     F .entry	0000000c __reset
1000d684 g     F .text	00000088 times
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000a924 g     F .text	00000058 _fstat_r
10012f64 g     O .bss	00000004 errno
10008dc4 g     F .text	00000008 __seofread
10012f6c g     O .bss	00000004 alt_argv
10019420 g       *ABS*	00000000 _gp
10010240 g     O .rwdata	00000180 alt_fd_list
1000ef08 g     F .text	00000090 alt_find_dev
10007308 g     F .text	00000138 memcpy
10001c04 g     F .text	00000008 _times_r
10005a14 g     F .text	0000000c _cleanup_r
1000ccc0 g     F .text	000000d0 .hidden __floatsidf
1000ea30 g     F .text	00000078 alt_io_redirect
1000c374 g     F .text	000000e0 .hidden __ltdf2
1000f5c0 g       *ABS*	00000000 __DTOR_END__
10001b58 g     F .text	00000014 puts
1000f180 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10008ca8 g     F .text	00000074 __fpclassifyd
100084ec g     F .text	000000a4 __ratio
1000a488 g     F .text	00000024 __vfiprintf_internal
1000df38 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
10001a38 g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
100019b4 g     F .text	00000008 .hidden __udivsi3
1000d03c g     F .text	000000ac isatty
1000f858 g     O .rodata	000000c8 __mprec_tens
1000685c g     F .text	0000000c __locale_charset
10000364 g     F .text	00000074 .hidden __fixunsdfsi
10012f60 g     O .bss	00000004 __malloc_top_pad
10011428 g     O .rwdata	00000004 __mb_cur_max
1000688c g     F .text	0000000c _localeconv_r
10007ae8 g     F .text	0000003c __i2b
100061cc g     F .text	000004a4 __sfvwrite_r
10008d1c g     F .text	00000054 _sbrk_r
1000aa2c g     F .text	0000005c _read_r
10011448 g     O .rwdata	00000004 alt_max_fd
1000a634 g     F .text	00000100 _fclose_r
100059d4 g     F .text	00000030 fflush
10012f5c g     O .bss	00000004 __malloc_max_sbrked_mem
1000ba54 g     F .text	0000089c .hidden __adddf3
10008294 g     F .text	0000011c __b2d
1000b438 g     F .text	0000061c .hidden __umoddi3
1000d21c g     F .text	000000dc lseek
10011420 g     O .rwdata	00000004 _global_impure_ptr
10008708 g     F .text	000005a0 _realloc_r
100130ac g       *ABS*	00000000 __bss_end
1000e860 g     F .text	000000f0 alt_iic_isr_register
1000ede4 g     F .text	00000104 alt_tick
1000adf8 g     F .text	00000640 .hidden __udivdi3
1000a748 g     F .text	00000184 _fputwc_r
1000f830 g     O .rodata	00000028 __mprec_bigtens
100078cc g     F .text	00000104 __s2b
10001790 g     F .text	000000a4 .hidden __floatunsidf
1000803c g     F .text	00000060 __mcmp
10005d88 g     F .text	00000018 __fp_lock_all
1000e814 g     F .text	0000004c alt_ic_irq_enabled
1000ed4c g     F .text	00000098 alt_alarm_stop
10012f74 g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d0 alt_irq_handler
10010218 g     O .rwdata	00000028 alt_dev_null
1000e49c g     F .text	0000001c alt_dcache_flush_all
100079d0 g     F .text	00000068 __hi0bits
10001708 g     F .text	00000088 .hidden __fixdfsi
10011460 g       *ABS*	00000000 __ram_rwdata_end
10011440 g     O .rwdata	00000008 alt_dev_list
1000d75c g     F .text	00000100 write
1000f974 g       *ABS*	00000000 __ram_rodata_end
1000cf34 g     F .text	000000b8 fstat
1000c374 g     F .text	000000e0 .hidden __ledf2
10007db4 g     F .text	00000140 __pow5mult
10009064 g     F .text	00001424 ___vfiprintf_internal_r
10012f54 g     O .bss	00000004 __nlocale_changed
100019bc g     F .text	00000008 .hidden __umodsi3
100130ac g       *ABS*	00000000 end
1000da74 g     F .text	000000c4 altera_avalon_jtag_uart_init
100001cc g     F .exceptions	00000060 alt_instruction_exception_entry
1000f5c0 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
10001834 g     F .text	00000064 .hidden __clzsi2
1000e144 g     F .text	00000218 altera_avalon_jtag_uart_write
10005d78 g     F .text	00000004 __sfp_lock_acquire
10007220 g     F .text	000000e8 memchr
10001c0c g     F .text	000020fc ___vfprintf_internal_r
10005edc g     F .text	000002f0 _free_r
10006868 g     F .text	00000010 __locale_mb_cur_max
1000f3f8 g     F .text	00000194 __call_exitprocs
10012f50 g     O .bss	00000004 __mlocale_changed
1001142c g     O .rwdata	00000004 __malloc_sbrk_base
1000022c g     F .text	0000003c _start
10012f78 g     O .bss	00000004 _alt_tick_rate
10007ef4 g     F .text	00000148 __lshift
10012f7c g     O .bss	00000004 _alt_nticks
1000d400 g     F .text	00000104 read
1000d8c8 g     F .text	00000048 alt_sys_init
1000f2e4 g     F .text	00000114 __register_exitproc
10007b24 g     F .text	00000290 __multiply
1000dde4 g     F .text	00000068 altera_avalon_jtag_uart_close
100019c4 g     F .text	00000028 .hidden __mulsi3
1000f974 g       *ABS*	00000000 __ram_rwdata_start
1000f5c0 g       *ABS*	00000000 __ram_rodata_start
10012f84 g     O .bss	00000028 __malloc_current_mallinfo
100083b0 g     F .text	0000013c __d2b
1000d910 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1000f0ac g     F .text	000000d4 alt_get_fd
1000a508 g     F .text	00000054 _close_r
1000f268 g     F .text	0000007c memcmp
1000d9d0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
100130ac g       *ABS*	00000000 __alt_stack_base
1000da20 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10003d2c g     F .text	00000130 __swsetup_r
100003d8 g     F .text	00000980 .hidden __divdf3
10005c38 g     F .text	00000118 __sfp
10008604 g     F .text	00000078 __copybits
1000fe10 g     O .rwdata	00000408 __malloc_av_
10005d84 g     F .text	00000004 __sinit_lock_release
1000c454 g     F .text	0000086c .hidden __muldf3
10008d70 g     F .text	00000054 __sread
1000ef98 g     F .text	00000114 alt_find_file
1000e508 g     F .text	000000a4 alt_dev_llist_insert
1000d370 g     F .text	00000020 __malloc_lock
1000d584 g     F .text	000000b0 sbrk
100057ac g     F .text	00000228 _fflush_r
1000a55c g     F .text	000000d8 _calloc_r
10012f4c g       *ABS*	00000000 __bss_start
1000759c g     F .text	00000124 memset
10000268 g     F .text	000000fc main
10012f70 g     O .bss	00000004 alt_envp
10012f58 g     O .bss	00000004 __malloc_max_total_mem
1000d970 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1000abdc g     F .text	0000001c __swbuf
10008ea4 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000a734 g     F .text	00000014 fclose
10004084 g     F .text	00001728 _dtoa_r
10006a78 g     F .text	000007a8 _malloc_r
1000ad6c g     F .text	00000030 __ascii_wctomb
1001144c g     O .rwdata	00000004 alt_errno
10006670 g     F .text	000000b8 _fwalk
10001904 g     F .text	00000054 .hidden __divsi3
10005db8 g     F .text	00000124 _malloc_trim_r
1000f5c0 g       *ABS*	00000000 __CTOR_END__
10008eac g     F .text	000000a4 strcmp
1000f5c0 g       *ABS*	00000000 __flash_rodata_start
1000f5c0 g       *ABS*	00000000 __DTOR_LIST__
1000c2f0 g     F .text	00000084 .hidden __nedf2
1000d894 g     F .text	00000034 alt_irq_init
1000d504 g     F .text	00000080 alt_release_fd
1000f674 g     O .rodata	00000100 .hidden __clz_tab
10012f4c g     O .bss	00000004 _PathLocale
1000f21c g     F .text	00000014 atexit
1000a4ac g     F .text	0000005c _write_r
10006898 g     F .text	0000001c setlocale
10011424 g     O .rwdata	00000004 _impure_ptr
10012f68 g     O .bss	00000004 alt_argc
1000e608 g     F .text	0000005c _do_dtors
10006884 g     F .text	00000008 __locale_cjk_lang
10000020 g       .exceptions	00000000 alt_irq_entry
10008234 g     F .text	00000060 __ulp
10005da0 g     F .text	00000018 __fp_unlock_all
10011438 g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
100068b4 g     F .text	0000000c localeconv
1000e680 g     F .text	00000050 alt_ic_isr_register
10011460 g       *ABS*	00000000 _edata
100130ac g       *ABS*	00000000 _end
1000022c g       *ABS*	00000000 __ram_exceptions_end
1000de4c g     F .text	000000ec altera_avalon_jtag_uart_ioctl
1000e770 g     F .text	000000a4 alt_ic_irq_disable
10008dcc g     F .text	0000007c __swrite
10011430 g     O .rwdata	00000004 __malloc_trim_threshold
10006878 g     F .text	0000000c __locale_msgcharset
1000f230 g     F .text	00000038 exit
10006728 g     F .text	000000b8 _fwalk_reent
1000809c g     F .text	00000198 __mdiff
10001958 g     F .text	0000005c .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10005d7c g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
1000f58c g     F .text	00000034 _exit
1000e35c g     F .text	00000140 alt_alarm_start
100068c0 g     F .text	000001b8 __smakebuf_r
10001b6c g     F .text	00000098 strlen
1000ebec g     F .text	00000160 open
10000d58 g     F .text	000000e0 .hidden __gedf2
100019ec g     F .text	0000004c clock
10011434 g     O .rwdata	00000004 __wctomb
1000904c g     F .text	00000018 __sprint_r
1000e664 g     F .text	0000001c alt_icache_flush_all
10011454 g     O .rwdata	00000004 alt_priority_mask
1000e6d0 g     F .text	000000a0 alt_ic_irq_enable
10003d08 g     F .text	00000024 __vfprintf_internal
1000ad9c g     F .text	0000005c _wctomb_r
10000e38 g     F .text	000008d0 .hidden __subdf3
10007a38 g     F .text	000000b0 __lo0bits
10011458 g     O .rwdata	00000008 alt_alarm_list
1000e5ac g     F .text	0000005c _do_ctors
1000ac94 g     F .text	000000d8 wcrtomb
1000cde0 g     F .text	000000d8 close
1000d14c g     F .text	00000080 alt_load
1000a8cc g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
10005d80 g     F .text	00000004 __sinit_lock_acquire
10007790 g     F .text	0000013c __multadd
10007768 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408b14 	ori	at,at,556
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
1000008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001cc0 	call	100001cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	00840074 	movhi	r2,4097
10000140:	108beb04 	addi	r2,r2,12204
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	00840074 	movhi	r2,4097
10000158:	108beb04 	addi	r2,r2,12204
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	e037883a 	mov	sp,fp
100001bc:	dfc00117 	ldw	ra,4(sp)
100001c0:	df000017 	ldw	fp,0(sp)
100001c4:	dec00204 	addi	sp,sp,8
100001c8:	f800283a 	ret

100001cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001cc:	defffb04 	addi	sp,sp,-20
100001d0:	dfc00415 	stw	ra,16(sp)
100001d4:	df000315 	stw	fp,12(sp)
100001d8:	df000304 	addi	fp,sp,12
100001dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e0:	00bfffc4 	movi	r2,-1
100001e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001ec:	d0a6d817 	ldw	r2,-25760(gp)
100001f0:	10000726 	beq	r2,zero,10000210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f4:	d0a6d817 	ldw	r2,-25760(gp)
100001f8:	e0fffd17 	ldw	r3,-12(fp)
100001fc:	1809883a 	mov	r4,r3
10000200:	e17fff17 	ldw	r5,-4(fp)
10000204:	e1bffe17 	ldw	r6,-8(fp)
10000208:	103ee83a 	callr	r2
1000020c:	00000206 	br	10000218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000214:	0005883a 	mov	r2,zero
}
10000218:	e037883a 	mov	sp,fp
1000021c:	dfc00117 	ldw	ra,4(sp)
10000220:	df000017 	ldw	fp,0(sp)
10000224:	dec00204 	addi	sp,sp,8
10000228:	f800283a 	ret

Disassembly of section .text:

1000022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
1000022c:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000230:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000234:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
10000238:	d6a50814 	ori	gp,gp,37920
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
1000023c:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000240:	108bd314 	ori	r2,r2,12108

    movhi r3, %hi(__bss_end)
10000244:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
10000248:	18cc2b14 	ori	r3,r3,12460

    beq r2, r3, 1f
1000024c:	10c00326 	beq	r2,r3,1000025c <_start+0x30>

0:
    stw zero, (r2)
10000250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10000258:	10fffd36 	bltu	r2,r3,10000250 <__alt_data_end+0xf8000250>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
1000025c:	000d14c0 	call	1000d14c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000260:	000d2f80 	call	1000d2f8 <alt_main>

10000264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000264:	003fff06 	br	10000264 <__alt_data_end+0xf8000264>

10000268 <main>:
#include <time.h>
#include <stdio.h>

int main()
{
10000268:	defffa04 	addi	sp,sp,-24
1000026c:	dfc00515 	stw	ra,20(sp)
10000270:	df000415 	stw	fp,16(sp)
10000274:	df000404 	addi	fp,sp,16
   clock_t start_t, end_t, total_t;
   int i;

   start_t = clock();
10000278:	00019ec0 	call	100019ec <clock>
1000027c:	e0bffd15 	stw	r2,-12(fp)
   printf("Starting of the program, start_t = %ld\n", start_t);
10000280:	01040074 	movhi	r4,4097
10000284:	213d7004 	addi	r4,r4,-2624
10000288:	e17ffd17 	ldw	r5,-12(fp)
1000028c:	0001a640 	call	10001a64 <printf>

   printf("Going to scan a big loop, start_t = %ld\n", start_t);
10000290:	01040074 	movhi	r4,4097
10000294:	213d7a04 	addi	r4,r4,-2584
10000298:	e17ffd17 	ldw	r5,-12(fp)
1000029c:	0001a640 	call	10001a64 <printf>
   for(i=0; i< 10000000; i++)
100002a0:	e03ffc15 	stw	zero,-16(fp)
100002a4:	00000306 	br	100002b4 <main+0x4c>
100002a8:	e0bffc17 	ldw	r2,-16(fp)
100002ac:	10800044 	addi	r2,r2,1
100002b0:	e0bffc15 	stw	r2,-16(fp)
100002b4:	e0fffc17 	ldw	r3,-16(fp)
100002b8:	00802674 	movhi	r2,153
100002bc:	10a59fc4 	addi	r2,r2,-27009
100002c0:	10fff90e 	bge	r2,r3,100002a8 <__alt_data_end+0xf80002a8>
   {
   }
   end_t = clock();
100002c4:	00019ec0 	call	100019ec <clock>
100002c8:	e0bffe15 	stw	r2,-8(fp)
   printf("End of the big loop, end_t = %ld\n", end_t);
100002cc:	01040074 	movhi	r4,4097
100002d0:	213d8504 	addi	r4,r4,-2540
100002d4:	e17ffe17 	ldw	r5,-8(fp)
100002d8:	0001a640 	call	10001a64 <printf>

   total_t = (double)(end_t - start_t) / CLOCKS_PER_SEC;
100002dc:	e0fffe17 	ldw	r3,-8(fp)
100002e0:	e0bffd17 	ldw	r2,-12(fp)
100002e4:	1885c83a 	sub	r2,r3,r2
100002e8:	1009883a 	mov	r4,r2
100002ec:	00017900 	call	10001790 <__floatunsidf>
100002f0:	100b883a 	mov	r5,r2
100002f4:	180d883a 	mov	r6,r3
100002f8:	2809883a 	mov	r4,r5
100002fc:	300b883a 	mov	r5,r6
10000300:	000d883a 	mov	r6,zero
10000304:	01d023f4 	movhi	r7,16527
10000308:	39d00004 	addi	r7,r7,16384
1000030c:	00003d80 	call	100003d8 <__divdf3>
10000310:	1009883a 	mov	r4,r2
10000314:	180b883a 	mov	r5,r3
10000318:	2005883a 	mov	r2,r4
1000031c:	2807883a 	mov	r3,r5
10000320:	1009883a 	mov	r4,r2
10000324:	180b883a 	mov	r5,r3
10000328:	00003640 	call	10000364 <__fixunsdfsi>
1000032c:	e0bfff15 	stw	r2,-4(fp)
   printf("Total time taken by CPU: %f\n", total_t  );
10000330:	01040074 	movhi	r4,4097
10000334:	213d8e04 	addi	r4,r4,-2504
10000338:	e17fff17 	ldw	r5,-4(fp)
1000033c:	0001a640 	call	10001a64 <printf>
   printf("Exiting of the program...\n");
10000340:	01040074 	movhi	r4,4097
10000344:	213d9604 	addi	r4,r4,-2472
10000348:	0001b580 	call	10001b58 <puts>

   return(0);
1000034c:	0005883a 	mov	r2,zero
}
10000350:	e037883a 	mov	sp,fp
10000354:	dfc00117 	ldw	ra,4(sp)
10000358:	df000017 	ldw	fp,0(sp)
1000035c:	dec00204 	addi	sp,sp,8
10000360:	f800283a 	ret

10000364 <__fixunsdfsi>:
10000364:	defffd04 	addi	sp,sp,-12
10000368:	000d883a 	mov	r6,zero
1000036c:	01d07834 	movhi	r7,16864
10000370:	dc400115 	stw	r17,4(sp)
10000374:	dc000015 	stw	r16,0(sp)
10000378:	dfc00215 	stw	ra,8(sp)
1000037c:	2023883a 	mov	r17,r4
10000380:	2821883a 	mov	r16,r5
10000384:	0000d580 	call	10000d58 <__gedf2>
10000388:	1000080e 	bge	r2,zero,100003ac <__fixunsdfsi+0x48>
1000038c:	8809883a 	mov	r4,r17
10000390:	800b883a 	mov	r5,r16
10000394:	00017080 	call	10001708 <__fixdfsi>
10000398:	dfc00217 	ldw	ra,8(sp)
1000039c:	dc400117 	ldw	r17,4(sp)
100003a0:	dc000017 	ldw	r16,0(sp)
100003a4:	dec00304 	addi	sp,sp,12
100003a8:	f800283a 	ret
100003ac:	000d883a 	mov	r6,zero
100003b0:	01d07834 	movhi	r7,16864
100003b4:	8809883a 	mov	r4,r17
100003b8:	800b883a 	mov	r5,r16
100003bc:	0000e380 	call	10000e38 <__subdf3>
100003c0:	180b883a 	mov	r5,r3
100003c4:	1009883a 	mov	r4,r2
100003c8:	00017080 	call	10001708 <__fixdfsi>
100003cc:	00e00034 	movhi	r3,32768
100003d0:	10c5883a 	add	r2,r2,r3
100003d4:	003ff006 	br	10000398 <__alt_data_end+0xf8000398>

100003d8 <__divdf3>:
100003d8:	defff004 	addi	sp,sp,-64
100003dc:	dc800815 	stw	r18,32(sp)
100003e0:	2824d53a 	srli	r18,r5,20
100003e4:	dd800c15 	stw	r22,48(sp)
100003e8:	282cd7fa 	srli	r22,r5,31
100003ec:	dc000615 	stw	r16,24(sp)
100003f0:	04000434 	movhi	r16,16
100003f4:	df000e15 	stw	fp,56(sp)
100003f8:	dd000a15 	stw	r20,40(sp)
100003fc:	dcc00915 	stw	r19,36(sp)
10000400:	dc400715 	stw	r17,28(sp)
10000404:	843fffc4 	addi	r16,r16,-1
10000408:	dfc00f15 	stw	ra,60(sp)
1000040c:	ddc00d15 	stw	r23,52(sp)
10000410:	dd400b15 	stw	r21,44(sp)
10000414:	9481ffcc 	andi	r18,r18,2047
10000418:	2029883a 	mov	r20,r4
1000041c:	2027883a 	mov	r19,r4
10000420:	2c22703a 	and	r17,r5,r16
10000424:	b7003fcc 	andi	fp,r22,255
10000428:	90005e26 	beq	r18,zero,100005a4 <__divdf3+0x1cc>
1000042c:	0081ffc4 	movi	r2,2047
10000430:	90803526 	beq	r18,r2,10000508 <__divdf3+0x130>
10000434:	8c000434 	orhi	r16,r17,16
10000438:	2004d77a 	srli	r2,r4,29
1000043c:	802090fa 	slli	r16,r16,3
10000440:	202690fa 	slli	r19,r4,3
10000444:	94bf0044 	addi	r18,r18,-1023
10000448:	80a2b03a 	or	r17,r16,r2
1000044c:	0029883a 	mov	r20,zero
10000450:	0011883a 	mov	r8,zero
10000454:	380ad53a 	srli	r5,r7,20
10000458:	382ed7fa 	srli	r23,r7,31
1000045c:	04000434 	movhi	r16,16
10000460:	843fffc4 	addi	r16,r16,-1
10000464:	2941ffcc 	andi	r5,r5,2047
10000468:	302b883a 	mov	r21,r6
1000046c:	3c20703a 	and	r16,r7,r16
10000470:	ba403fcc 	andi	r9,r23,255
10000474:	28006726 	beq	r5,zero,10000614 <__divdf3+0x23c>
10000478:	0081ffc4 	movi	r2,2047
1000047c:	28805f26 	beq	r5,r2,100005fc <__divdf3+0x224>
10000480:	84000434 	orhi	r16,r16,16
10000484:	3004d77a 	srli	r2,r6,29
10000488:	802090fa 	slli	r16,r16,3
1000048c:	302a90fa 	slli	r21,r6,3
10000490:	297f0044 	addi	r5,r5,-1023
10000494:	80a0b03a 	or	r16,r16,r2
10000498:	000f883a 	mov	r7,zero
1000049c:	3d06b03a 	or	r3,r7,r20
100004a0:	180690ba 	slli	r3,r3,2
100004a4:	00840034 	movhi	r2,4096
100004a8:	10813204 	addi	r2,r2,1224
100004ac:	1885883a 	add	r2,r3,r2
100004b0:	10800017 	ldw	r2,0(r2)
100004b4:	b5c8f03a 	xor	r4,r22,r23
100004b8:	200d883a 	mov	r6,r4
100004bc:	25003fcc 	andi	r20,r4,255
100004c0:	9165c83a 	sub	r18,r18,r5
100004c4:	1000683a 	jmp	r2
100004c8:	10000710 	cmplti	zero,r2,28
100004cc:	10000540 	call	11000054 <_gp+0xfe6c34>
100004d0:	100006d4 	ori	zero,r2,27
100004d4:	10000524 	muli	zero,r2,20
100004d8:	100006d4 	ori	zero,r2,27
100004dc:	100006a8 	cmpgeui	zero,r2,26
100004e0:	100006d4 	ori	zero,r2,27
100004e4:	10000524 	muli	zero,r2,20
100004e8:	10000540 	call	11000054 <_gp+0xfe6c34>
100004ec:	10000540 	call	11000054 <_gp+0xfe6c34>
100004f0:	100006a8 	cmpgeui	zero,r2,26
100004f4:	10000524 	muli	zero,r2,20
100004f8:	10000534 	orhi	zero,r2,20
100004fc:	10000534 	orhi	zero,r2,20
10000500:	10000534 	orhi	zero,r2,20
10000504:	100006e4 	muli	zero,r2,27
10000508:	8904b03a 	or	r2,r17,r4
1000050c:	1000631e 	bne	r2,zero,1000069c <__divdf3+0x2c4>
10000510:	05000204 	movi	r20,8
10000514:	0023883a 	mov	r17,zero
10000518:	0027883a 	mov	r19,zero
1000051c:	02000084 	movi	r8,2
10000520:	003fcc06 	br	10000454 <__alt_data_end+0xf8000454>
10000524:	8023883a 	mov	r17,r16
10000528:	a827883a 	mov	r19,r21
1000052c:	4839883a 	mov	fp,r9
10000530:	3811883a 	mov	r8,r7
10000534:	00800084 	movi	r2,2
10000538:	4081531e 	bne	r8,r2,10000a88 <__divdf3+0x6b0>
1000053c:	e029883a 	mov	r20,fp
10000540:	a180004c 	andi	r6,r20,1
10000544:	0201ffc4 	movi	r8,2047
10000548:	000b883a 	mov	r5,zero
1000054c:	0027883a 	mov	r19,zero
10000550:	4010953a 	slli	r8,r8,20
10000554:	30c03fcc 	andi	r3,r6,255
10000558:	04000434 	movhi	r16,16
1000055c:	180697fa 	slli	r3,r3,31
10000560:	843fffc4 	addi	r16,r16,-1
10000564:	2c20703a 	and	r16,r5,r16
10000568:	8220b03a 	or	r16,r16,r8
1000056c:	80c6b03a 	or	r3,r16,r3
10000570:	9805883a 	mov	r2,r19
10000574:	dfc00f17 	ldw	ra,60(sp)
10000578:	df000e17 	ldw	fp,56(sp)
1000057c:	ddc00d17 	ldw	r23,52(sp)
10000580:	dd800c17 	ldw	r22,48(sp)
10000584:	dd400b17 	ldw	r21,44(sp)
10000588:	dd000a17 	ldw	r20,40(sp)
1000058c:	dcc00917 	ldw	r19,36(sp)
10000590:	dc800817 	ldw	r18,32(sp)
10000594:	dc400717 	ldw	r17,28(sp)
10000598:	dc000617 	ldw	r16,24(sp)
1000059c:	dec01004 	addi	sp,sp,64
100005a0:	f800283a 	ret
100005a4:	8904b03a 	or	r2,r17,r4
100005a8:	10003726 	beq	r2,zero,10000688 <__divdf3+0x2b0>
100005ac:	88014d26 	beq	r17,zero,10000ae4 <__divdf3+0x70c>
100005b0:	8809883a 	mov	r4,r17
100005b4:	d9800215 	stw	r6,8(sp)
100005b8:	d9c00515 	stw	r7,20(sp)
100005bc:	00018340 	call	10001834 <__clzsi2>
100005c0:	d9800217 	ldw	r6,8(sp)
100005c4:	d9c00517 	ldw	r7,20(sp)
100005c8:	1007883a 	mov	r3,r2
100005cc:	01000a04 	movi	r4,40
100005d0:	1cfffe04 	addi	r19,r3,-8
100005d4:	20c9c83a 	sub	r4,r4,r3
100005d8:	8cca983a 	sll	r5,r17,r19
100005dc:	a108d83a 	srl	r4,r20,r4
100005e0:	a4e6983a 	sll	r19,r20,r19
100005e4:	2162b03a 	or	r17,r4,r5
100005e8:	04bf0344 	movi	r18,-1011
100005ec:	90e5c83a 	sub	r18,r18,r3
100005f0:	0029883a 	mov	r20,zero
100005f4:	0011883a 	mov	r8,zero
100005f8:	003f9606 	br	10000454 <__alt_data_end+0xf8000454>
100005fc:	8184b03a 	or	r2,r16,r6
10000600:	10001f1e 	bne	r2,zero,10000680 <__divdf3+0x2a8>
10000604:	0021883a 	mov	r16,zero
10000608:	002b883a 	mov	r21,zero
1000060c:	01c00084 	movi	r7,2
10000610:	003fa206 	br	1000049c <__alt_data_end+0xf800049c>
10000614:	8184b03a 	or	r2,r16,r6
10000618:	10001526 	beq	r2,zero,10000670 <__divdf3+0x298>
1000061c:	80013d26 	beq	r16,zero,10000b14 <__divdf3+0x73c>
10000620:	8009883a 	mov	r4,r16
10000624:	d9800215 	stw	r6,8(sp)
10000628:	da000315 	stw	r8,12(sp)
1000062c:	da400415 	stw	r9,16(sp)
10000630:	00018340 	call	10001834 <__clzsi2>
10000634:	d9800217 	ldw	r6,8(sp)
10000638:	da000317 	ldw	r8,12(sp)
1000063c:	da400417 	ldw	r9,16(sp)
10000640:	1007883a 	mov	r3,r2
10000644:	01000a04 	movi	r4,40
10000648:	1d7ffe04 	addi	r21,r3,-8
1000064c:	20c9c83a 	sub	r4,r4,r3
10000650:	8560983a 	sll	r16,r16,r21
10000654:	3108d83a 	srl	r4,r6,r4
10000658:	356a983a 	sll	r21,r6,r21
1000065c:	2420b03a 	or	r16,r4,r16
10000660:	017f0344 	movi	r5,-1011
10000664:	28cbc83a 	sub	r5,r5,r3
10000668:	000f883a 	mov	r7,zero
1000066c:	003f8b06 	br	1000049c <__alt_data_end+0xf800049c>
10000670:	0021883a 	mov	r16,zero
10000674:	002b883a 	mov	r21,zero
10000678:	01c00044 	movi	r7,1
1000067c:	003f8706 	br	1000049c <__alt_data_end+0xf800049c>
10000680:	01c000c4 	movi	r7,3
10000684:	003f8506 	br	1000049c <__alt_data_end+0xf800049c>
10000688:	05000104 	movi	r20,4
1000068c:	0023883a 	mov	r17,zero
10000690:	0027883a 	mov	r19,zero
10000694:	02000044 	movi	r8,1
10000698:	003f6e06 	br	10000454 <__alt_data_end+0xf8000454>
1000069c:	05000304 	movi	r20,12
100006a0:	020000c4 	movi	r8,3
100006a4:	003f6b06 	br	10000454 <__alt_data_end+0xf8000454>
100006a8:	01400434 	movhi	r5,16
100006ac:	000d883a 	mov	r6,zero
100006b0:	297fffc4 	addi	r5,r5,-1
100006b4:	04ffffc4 	movi	r19,-1
100006b8:	0201ffc4 	movi	r8,2047
100006bc:	003fa406 	br	10000550 <__alt_data_end+0xf8000550>
100006c0:	043f0084 	movi	r16,-1022
100006c4:	84a1c83a 	sub	r16,r16,r18
100006c8:	00800e04 	movi	r2,56
100006cc:	14014d0e 	bge	r2,r16,10000c04 <__divdf3+0x82c>
100006d0:	a180004c 	andi	r6,r20,1
100006d4:	0011883a 	mov	r8,zero
100006d8:	000b883a 	mov	r5,zero
100006dc:	0027883a 	mov	r19,zero
100006e0:	003f9b06 	br	10000550 <__alt_data_end+0xf8000550>
100006e4:	8880022c 	andhi	r2,r17,8
100006e8:	1000f026 	beq	r2,zero,10000aac <__divdf3+0x6d4>
100006ec:	8080022c 	andhi	r2,r16,8
100006f0:	1000ee1e 	bne	r2,zero,10000aac <__divdf3+0x6d4>
100006f4:	00800434 	movhi	r2,16
100006f8:	81400234 	orhi	r5,r16,8
100006fc:	10bfffc4 	addi	r2,r2,-1
10000700:	b80d883a 	mov	r6,r23
10000704:	288a703a 	and	r5,r5,r2
10000708:	a827883a 	mov	r19,r21
1000070c:	003fea06 	br	100006b8 <__alt_data_end+0xf80006b8>
10000710:	84411c36 	bltu	r16,r17,10000b84 <__divdf3+0x7ac>
10000714:	8c011a26 	beq	r17,r16,10000b80 <__divdf3+0x7a8>
10000718:	94bfffc4 	addi	r18,r18,-1
1000071c:	dcc00015 	stw	r19,0(sp)
10000720:	8811883a 	mov	r8,r17
10000724:	002d883a 	mov	r22,zero
10000728:	a80cd63a 	srli	r6,r21,24
1000072c:	8020923a 	slli	r16,r16,8
10000730:	a82a923a 	slli	r21,r21,8
10000734:	4009883a 	mov	r4,r8
10000738:	342eb03a 	or	r23,r6,r16
1000073c:	dd400115 	stw	r21,4(sp)
10000740:	b82ad43a 	srli	r21,r23,16
10000744:	da000315 	stw	r8,12(sp)
10000748:	bcffffcc 	andi	r19,r23,65535
1000074c:	a80b883a 	mov	r5,r21
10000750:	00019b40 	call	100019b4 <__udivsi3>
10000754:	1009883a 	mov	r4,r2
10000758:	980b883a 	mov	r5,r19
1000075c:	1023883a 	mov	r17,r2
10000760:	00019c40 	call	100019c4 <__mulsi3>
10000764:	da000317 	ldw	r8,12(sp)
10000768:	a80b883a 	mov	r5,r21
1000076c:	1039883a 	mov	fp,r2
10000770:	4009883a 	mov	r4,r8
10000774:	00019bc0 	call	100019bc <__umodsi3>
10000778:	d8c00017 	ldw	r3,0(sp)
1000077c:	1004943a 	slli	r2,r2,16
10000780:	1810d43a 	srli	r8,r3,16
10000784:	120eb03a 	or	r7,r2,r8
10000788:	3f00062e 	bgeu	r7,fp,100007a4 <__divdf3+0x3cc>
1000078c:	3dcf883a 	add	r7,r7,r23
10000790:	88bfffc4 	addi	r2,r17,-1
10000794:	3dc10a36 	bltu	r7,r23,10000bc0 <__divdf3+0x7e8>
10000798:	3f01092e 	bgeu	r7,fp,10000bc0 <__divdf3+0x7e8>
1000079c:	8c7fff84 	addi	r17,r17,-2
100007a0:	3dcf883a 	add	r7,r7,r23
100007a4:	3f39c83a 	sub	fp,r7,fp
100007a8:	e009883a 	mov	r4,fp
100007ac:	a80b883a 	mov	r5,r21
100007b0:	00019b40 	call	100019b4 <__udivsi3>
100007b4:	1009883a 	mov	r4,r2
100007b8:	980b883a 	mov	r5,r19
100007bc:	1021883a 	mov	r16,r2
100007c0:	00019c40 	call	100019c4 <__mulsi3>
100007c4:	e009883a 	mov	r4,fp
100007c8:	a80b883a 	mov	r5,r21
100007cc:	d8800315 	stw	r2,12(sp)
100007d0:	00019bc0 	call	100019bc <__umodsi3>
100007d4:	d9000017 	ldw	r4,0(sp)
100007d8:	1004943a 	slli	r2,r2,16
100007dc:	da000317 	ldw	r8,12(sp)
100007e0:	20ffffcc 	andi	r3,r4,65535
100007e4:	10ceb03a 	or	r7,r2,r3
100007e8:	3a00062e 	bgeu	r7,r8,10000804 <__divdf3+0x42c>
100007ec:	3dcf883a 	add	r7,r7,r23
100007f0:	80bfffc4 	addi	r2,r16,-1
100007f4:	3dc0f036 	bltu	r7,r23,10000bb8 <__divdf3+0x7e0>
100007f8:	3a00ef2e 	bgeu	r7,r8,10000bb8 <__divdf3+0x7e0>
100007fc:	843fff84 	addi	r16,r16,-2
10000800:	3dcf883a 	add	r7,r7,r23
10000804:	d8c00117 	ldw	r3,4(sp)
10000808:	8822943a 	slli	r17,r17,16
1000080c:	3a0fc83a 	sub	r7,r7,r8
10000810:	1806d43a 	srli	r3,r3,16
10000814:	8462b03a 	or	r17,r16,r17
10000818:	8affffcc 	andi	r11,r17,65535
1000081c:	d8c00015 	stw	r3,0(sp)
10000820:	d8c00117 	ldw	r3,4(sp)
10000824:	8820d43a 	srli	r16,r17,16
10000828:	5809883a 	mov	r4,r11
1000082c:	1f3fffcc 	andi	fp,r3,65535
10000830:	e00b883a 	mov	r5,fp
10000834:	d9c00515 	stw	r7,20(sp)
10000838:	dac00215 	stw	r11,8(sp)
1000083c:	00019c40 	call	100019c4 <__mulsi3>
10000840:	8009883a 	mov	r4,r16
10000844:	e00b883a 	mov	r5,fp
10000848:	d8800415 	stw	r2,16(sp)
1000084c:	00019c40 	call	100019c4 <__mulsi3>
10000850:	d9400017 	ldw	r5,0(sp)
10000854:	8009883a 	mov	r4,r16
10000858:	d8800315 	stw	r2,12(sp)
1000085c:	00019c40 	call	100019c4 <__mulsi3>
10000860:	dac00217 	ldw	r11,8(sp)
10000864:	d9400017 	ldw	r5,0(sp)
10000868:	d8800215 	stw	r2,8(sp)
1000086c:	5809883a 	mov	r4,r11
10000870:	00019c40 	call	100019c4 <__mulsi3>
10000874:	da400417 	ldw	r9,16(sp)
10000878:	da800317 	ldw	r10,12(sp)
1000087c:	d9c00517 	ldw	r7,20(sp)
10000880:	480ad43a 	srli	r5,r9,16
10000884:	5085883a 	add	r2,r10,r2
10000888:	db000217 	ldw	r12,8(sp)
1000088c:	1151883a 	add	r8,r2,r5
10000890:	4280022e 	bgeu	r8,r10,1000089c <__divdf3+0x4c4>
10000894:	00800074 	movhi	r2,1
10000898:	6099883a 	add	r12,r12,r2
1000089c:	400ad43a 	srli	r5,r8,16
100008a0:	4010943a 	slli	r8,r8,16
100008a4:	4c3fffcc 	andi	r16,r9,65535
100008a8:	6149883a 	add	r4,r12,r5
100008ac:	4411883a 	add	r8,r8,r16
100008b0:	3900a736 	bltu	r7,r4,10000b50 <__divdf3+0x778>
100008b4:	3900c426 	beq	r7,r4,10000bc8 <__divdf3+0x7f0>
100008b8:	3909c83a 	sub	r4,r7,r4
100008bc:	b221c83a 	sub	r16,r22,r8
100008c0:	b42d803a 	cmpltu	r22,r22,r16
100008c4:	25adc83a 	sub	r22,r4,r22
100008c8:	b5c0c626 	beq	r22,r23,10000be4 <__divdf3+0x80c>
100008cc:	b009883a 	mov	r4,r22
100008d0:	a80b883a 	mov	r5,r21
100008d4:	00019b40 	call	100019b4 <__udivsi3>
100008d8:	1009883a 	mov	r4,r2
100008dc:	980b883a 	mov	r5,r19
100008e0:	d8800315 	stw	r2,12(sp)
100008e4:	00019c40 	call	100019c4 <__mulsi3>
100008e8:	a80b883a 	mov	r5,r21
100008ec:	b009883a 	mov	r4,r22
100008f0:	d8800415 	stw	r2,16(sp)
100008f4:	00019bc0 	call	100019bc <__umodsi3>
100008f8:	1004943a 	slli	r2,r2,16
100008fc:	800ed43a 	srli	r7,r16,16
10000900:	da400417 	ldw	r9,16(sp)
10000904:	da000317 	ldw	r8,12(sp)
10000908:	11cab03a 	or	r5,r2,r7
1000090c:	2a40062e 	bgeu	r5,r9,10000928 <__divdf3+0x550>
10000910:	2dcb883a 	add	r5,r5,r23
10000914:	40bfffc4 	addi	r2,r8,-1
10000918:	2dc0b436 	bltu	r5,r23,10000bec <__divdf3+0x814>
1000091c:	2a40b32e 	bgeu	r5,r9,10000bec <__divdf3+0x814>
10000920:	423fff84 	addi	r8,r8,-2
10000924:	2dcb883a 	add	r5,r5,r23
10000928:	2a6dc83a 	sub	r22,r5,r9
1000092c:	b009883a 	mov	r4,r22
10000930:	a80b883a 	mov	r5,r21
10000934:	da000315 	stw	r8,12(sp)
10000938:	00019b40 	call	100019b4 <__udivsi3>
1000093c:	980b883a 	mov	r5,r19
10000940:	1009883a 	mov	r4,r2
10000944:	d8800415 	stw	r2,16(sp)
10000948:	00019c40 	call	100019c4 <__mulsi3>
1000094c:	b009883a 	mov	r4,r22
10000950:	a80b883a 	mov	r5,r21
10000954:	1027883a 	mov	r19,r2
10000958:	00019bc0 	call	100019bc <__umodsi3>
1000095c:	1004943a 	slli	r2,r2,16
10000960:	843fffcc 	andi	r16,r16,65535
10000964:	da000317 	ldw	r8,12(sp)
10000968:	140eb03a 	or	r7,r2,r16
1000096c:	da400417 	ldw	r9,16(sp)
10000970:	3cc0062e 	bgeu	r7,r19,1000098c <__divdf3+0x5b4>
10000974:	3dcf883a 	add	r7,r7,r23
10000978:	48bfffc4 	addi	r2,r9,-1
1000097c:	3dc09d36 	bltu	r7,r23,10000bf4 <__divdf3+0x81c>
10000980:	3cc09c2e 	bgeu	r7,r19,10000bf4 <__divdf3+0x81c>
10000984:	4a7fff84 	addi	r9,r9,-2
10000988:	3dcf883a 	add	r7,r7,r23
1000098c:	4010943a 	slli	r8,r8,16
10000990:	3cebc83a 	sub	r21,r7,r19
10000994:	e00b883a 	mov	r5,fp
10000998:	4a26b03a 	or	r19,r9,r8
1000099c:	99ffffcc 	andi	r7,r19,65535
100009a0:	9820d43a 	srli	r16,r19,16
100009a4:	3809883a 	mov	r4,r7
100009a8:	d9c00515 	stw	r7,20(sp)
100009ac:	00019c40 	call	100019c4 <__mulsi3>
100009b0:	8009883a 	mov	r4,r16
100009b4:	e00b883a 	mov	r5,fp
100009b8:	102d883a 	mov	r22,r2
100009bc:	00019c40 	call	100019c4 <__mulsi3>
100009c0:	d9400017 	ldw	r5,0(sp)
100009c4:	8009883a 	mov	r4,r16
100009c8:	1039883a 	mov	fp,r2
100009cc:	00019c40 	call	100019c4 <__mulsi3>
100009d0:	d9c00517 	ldw	r7,20(sp)
100009d4:	d9400017 	ldw	r5,0(sp)
100009d8:	1021883a 	mov	r16,r2
100009dc:	3809883a 	mov	r4,r7
100009e0:	00019c40 	call	100019c4 <__mulsi3>
100009e4:	b008d43a 	srli	r4,r22,16
100009e8:	e085883a 	add	r2,fp,r2
100009ec:	1109883a 	add	r4,r2,r4
100009f0:	2700022e 	bgeu	r4,fp,100009fc <__divdf3+0x624>
100009f4:	00800074 	movhi	r2,1
100009f8:	80a1883a 	add	r16,r16,r2
100009fc:	200ad43a 	srli	r5,r4,16
10000a00:	2008943a 	slli	r4,r4,16
10000a04:	b5bfffcc 	andi	r22,r22,65535
10000a08:	8145883a 	add	r2,r16,r5
10000a0c:	2589883a 	add	r4,r4,r22
10000a10:	a8802c36 	bltu	r21,r2,10000ac4 <__divdf3+0x6ec>
10000a14:	a880a426 	beq	r21,r2,10000ca8 <__divdf3+0x8d0>
10000a18:	9cc00054 	ori	r19,r19,1
10000a1c:	9200ffc4 	addi	r8,r18,1023
10000a20:	023f270e 	bge	zero,r8,100006c0 <__alt_data_end+0xf80006c0>
10000a24:	988001cc 	andi	r2,r19,7
10000a28:	10000726 	beq	r2,zero,10000a48 <__divdf3+0x670>
10000a2c:	990003cc 	andi	r4,r19,15
10000a30:	00800104 	movi	r2,4
10000a34:	20800426 	beq	r4,r2,10000a48 <__divdf3+0x670>
10000a38:	9885883a 	add	r2,r19,r2
10000a3c:	14e7803a 	cmpltu	r19,r2,r19
10000a40:	8ce3883a 	add	r17,r17,r19
10000a44:	1027883a 	mov	r19,r2
10000a48:	8880402c 	andhi	r2,r17,256
10000a4c:	10000426 	beq	r2,zero,10000a60 <__divdf3+0x688>
10000a50:	00bfc034 	movhi	r2,65280
10000a54:	10bfffc4 	addi	r2,r2,-1
10000a58:	92010004 	addi	r8,r18,1024
10000a5c:	88a2703a 	and	r17,r17,r2
10000a60:	0081ff84 	movi	r2,2046
10000a64:	123eb616 	blt	r2,r8,10000540 <__alt_data_end+0xf8000540>
10000a68:	9826d0fa 	srli	r19,r19,3
10000a6c:	8804977a 	slli	r2,r17,29
10000a70:	8820927a 	slli	r16,r17,9
10000a74:	4201ffcc 	andi	r8,r8,2047
10000a78:	14e6b03a 	or	r19,r2,r19
10000a7c:	800ad33a 	srli	r5,r16,12
10000a80:	a180004c 	andi	r6,r20,1
10000a84:	003eb206 	br	10000550 <__alt_data_end+0xf8000550>
10000a88:	008000c4 	movi	r2,3
10000a8c:	4080ac26 	beq	r8,r2,10000d40 <__divdf3+0x968>
10000a90:	00800044 	movi	r2,1
10000a94:	4080591e 	bne	r8,r2,10000bfc <__divdf3+0x824>
10000a98:	e00d883a 	mov	r6,fp
10000a9c:	0011883a 	mov	r8,zero
10000aa0:	000b883a 	mov	r5,zero
10000aa4:	0027883a 	mov	r19,zero
10000aa8:	003ea906 	br	10000550 <__alt_data_end+0xf8000550>
10000aac:	00800434 	movhi	r2,16
10000ab0:	89400234 	orhi	r5,r17,8
10000ab4:	10bfffc4 	addi	r2,r2,-1
10000ab8:	b00d883a 	mov	r6,r22
10000abc:	288a703a 	and	r5,r5,r2
10000ac0:	003efd06 	br	100006b8 <__alt_data_end+0xf80006b8>
10000ac4:	adcf883a 	add	r7,r21,r23
10000ac8:	997fffc4 	addi	r5,r19,-1
10000acc:	3dc0412e 	bgeu	r7,r23,10000bd4 <__divdf3+0x7fc>
10000ad0:	2827883a 	mov	r19,r5
10000ad4:	38bfd01e 	bne	r7,r2,10000a18 <__alt_data_end+0xf8000a18>
10000ad8:	d8c00117 	ldw	r3,4(sp)
10000adc:	193fce1e 	bne	r3,r4,10000a18 <__alt_data_end+0xf8000a18>
10000ae0:	003fce06 	br	10000a1c <__alt_data_end+0xf8000a1c>
10000ae4:	d9800215 	stw	r6,8(sp)
10000ae8:	d9c00515 	stw	r7,20(sp)
10000aec:	00018340 	call	10001834 <__clzsi2>
10000af0:	10c00804 	addi	r3,r2,32
10000af4:	010009c4 	movi	r4,39
10000af8:	d9800217 	ldw	r6,8(sp)
10000afc:	d9c00517 	ldw	r7,20(sp)
10000b00:	20feb20e 	bge	r4,r3,100005cc <__alt_data_end+0xf80005cc>
10000b04:	117ffe04 	addi	r5,r2,-8
10000b08:	a162983a 	sll	r17,r20,r5
10000b0c:	0027883a 	mov	r19,zero
10000b10:	003eb506 	br	100005e8 <__alt_data_end+0xf80005e8>
10000b14:	3009883a 	mov	r4,r6
10000b18:	d9800215 	stw	r6,8(sp)
10000b1c:	da000315 	stw	r8,12(sp)
10000b20:	da400415 	stw	r9,16(sp)
10000b24:	00018340 	call	10001834 <__clzsi2>
10000b28:	10c00804 	addi	r3,r2,32
10000b2c:	010009c4 	movi	r4,39
10000b30:	d9800217 	ldw	r6,8(sp)
10000b34:	da000317 	ldw	r8,12(sp)
10000b38:	da400417 	ldw	r9,16(sp)
10000b3c:	20fec10e 	bge	r4,r3,10000644 <__alt_data_end+0xf8000644>
10000b40:	10bffe04 	addi	r2,r2,-8
10000b44:	a8a0983a 	sll	r16,r21,r2
10000b48:	002b883a 	mov	r21,zero
10000b4c:	003ec406 	br	10000660 <__alt_data_end+0xf8000660>
10000b50:	d8c00117 	ldw	r3,4(sp)
10000b54:	b0ed883a 	add	r22,r22,r3
10000b58:	b0c5803a 	cmpltu	r2,r22,r3
10000b5c:	15c5883a 	add	r2,r2,r23
10000b60:	11cf883a 	add	r7,r2,r7
10000b64:	88bfffc4 	addi	r2,r17,-1
10000b68:	b9c00d2e 	bgeu	r23,r7,10000ba0 <__divdf3+0x7c8>
10000b6c:	39003f36 	bltu	r7,r4,10000c6c <__divdf3+0x894>
10000b70:	21c06a26 	beq	r4,r7,10000d1c <__divdf3+0x944>
10000b74:	3909c83a 	sub	r4,r7,r4
10000b78:	1023883a 	mov	r17,r2
10000b7c:	003f4f06 	br	100008bc <__alt_data_end+0xf80008bc>
10000b80:	9d7ee536 	bltu	r19,r21,10000718 <__alt_data_end+0xf8000718>
10000b84:	982ed07a 	srli	r23,r19,1
10000b88:	880497fa 	slli	r2,r17,31
10000b8c:	8810d07a 	srli	r8,r17,1
10000b90:	982c97fa 	slli	r22,r19,31
10000b94:	b884b03a 	or	r2,r23,r2
10000b98:	d8800015 	stw	r2,0(sp)
10000b9c:	003ee206 	br	10000728 <__alt_data_end+0xf8000728>
10000ba0:	3dfff41e 	bne	r7,r23,10000b74 <__alt_data_end+0xf8000b74>
10000ba4:	d8c00117 	ldw	r3,4(sp)
10000ba8:	b0fff02e 	bgeu	r22,r3,10000b6c <__alt_data_end+0xf8000b6c>
10000bac:	b909c83a 	sub	r4,r23,r4
10000bb0:	1023883a 	mov	r17,r2
10000bb4:	003f4106 	br	100008bc <__alt_data_end+0xf80008bc>
10000bb8:	1021883a 	mov	r16,r2
10000bbc:	003f1106 	br	10000804 <__alt_data_end+0xf8000804>
10000bc0:	1023883a 	mov	r17,r2
10000bc4:	003ef706 	br	100007a4 <__alt_data_end+0xf80007a4>
10000bc8:	b23fe136 	bltu	r22,r8,10000b50 <__alt_data_end+0xf8000b50>
10000bcc:	0009883a 	mov	r4,zero
10000bd0:	003f3a06 	br	100008bc <__alt_data_end+0xf80008bc>
10000bd4:	38802c36 	bltu	r7,r2,10000c88 <__divdf3+0x8b0>
10000bd8:	11c05326 	beq	r2,r7,10000d28 <__divdf3+0x950>
10000bdc:	2827883a 	mov	r19,r5
10000be0:	003f8d06 	br	10000a18 <__alt_data_end+0xf8000a18>
10000be4:	04ffffc4 	movi	r19,-1
10000be8:	003f8c06 	br	10000a1c <__alt_data_end+0xf8000a1c>
10000bec:	1011883a 	mov	r8,r2
10000bf0:	003f4d06 	br	10000928 <__alt_data_end+0xf8000928>
10000bf4:	1013883a 	mov	r9,r2
10000bf8:	003f6406 	br	1000098c <__alt_data_end+0xf800098c>
10000bfc:	e029883a 	mov	r20,fp
10000c00:	003f8606 	br	10000a1c <__alt_data_end+0xf8000a1c>
10000c04:	008007c4 	movi	r2,31
10000c08:	14002a16 	blt	r2,r16,10000cb4 <__divdf3+0x8dc>
10000c0c:	91410784 	addi	r5,r18,1054
10000c10:	9c0cd83a 	srl	r6,r19,r16
10000c14:	8948983a 	sll	r4,r17,r5
10000c18:	9944983a 	sll	r2,r19,r5
10000c1c:	8c20d83a 	srl	r16,r17,r16
10000c20:	3108b03a 	or	r4,r6,r4
10000c24:	1004c03a 	cmpne	r2,r2,zero
10000c28:	2084b03a 	or	r2,r4,r2
10000c2c:	110001cc 	andi	r4,r2,7
10000c30:	20000726 	beq	r4,zero,10000c50 <__divdf3+0x878>
10000c34:	114003cc 	andi	r5,r2,15
10000c38:	01000104 	movi	r4,4
10000c3c:	29000426 	beq	r5,r4,10000c50 <__divdf3+0x878>
10000c40:	11000104 	addi	r4,r2,4
10000c44:	2085803a 	cmpltu	r2,r4,r2
10000c48:	80a1883a 	add	r16,r16,r2
10000c4c:	2005883a 	mov	r2,r4
10000c50:	8100202c 	andhi	r4,r16,128
10000c54:	20002d26 	beq	r4,zero,10000d0c <__divdf3+0x934>
10000c58:	a180004c 	andi	r6,r20,1
10000c5c:	02000044 	movi	r8,1
10000c60:	000b883a 	mov	r5,zero
10000c64:	0027883a 	mov	r19,zero
10000c68:	003e3906 	br	10000550 <__alt_data_end+0xf8000550>
10000c6c:	d8c00117 	ldw	r3,4(sp)
10000c70:	8c7fff84 	addi	r17,r17,-2
10000c74:	b0ed883a 	add	r22,r22,r3
10000c78:	b0c5803a 	cmpltu	r2,r22,r3
10000c7c:	15c5883a 	add	r2,r2,r23
10000c80:	11cf883a 	add	r7,r2,r7
10000c84:	003f0c06 	br	100008b8 <__alt_data_end+0xf80008b8>
10000c88:	d8c00117 	ldw	r3,4(sp)
10000c8c:	997fff84 	addi	r5,r19,-2
10000c90:	18d1883a 	add	r8,r3,r3
10000c94:	40c7803a 	cmpltu	r3,r8,r3
10000c98:	1dcd883a 	add	r6,r3,r23
10000c9c:	398f883a 	add	r7,r7,r6
10000ca0:	da000115 	stw	r8,4(sp)
10000ca4:	003f8a06 	br	10000ad0 <__alt_data_end+0xf8000ad0>
10000ca8:	203f861e 	bne	r4,zero,10000ac4 <__alt_data_end+0xf8000ac4>
10000cac:	d8000115 	stw	zero,4(sp)
10000cb0:	003f8906 	br	10000ad8 <__alt_data_end+0xf8000ad8>
10000cb4:	00bef884 	movi	r2,-1054
10000cb8:	1485c83a 	sub	r2,r2,r18
10000cbc:	01000804 	movi	r4,32
10000cc0:	8884d83a 	srl	r2,r17,r2
10000cc4:	81001c26 	beq	r16,r4,10000d38 <__divdf3+0x960>
10000cc8:	91010f84 	addi	r4,r18,1086
10000ccc:	8908983a 	sll	r4,r17,r4
10000cd0:	24c8b03a 	or	r4,r4,r19
10000cd4:	2008c03a 	cmpne	r4,r4,zero
10000cd8:	2084b03a 	or	r2,r4,r2
10000cdc:	140001cc 	andi	r16,r2,7
10000ce0:	8000061e 	bne	r16,zero,10000cfc <__divdf3+0x924>
10000ce4:	000b883a 	mov	r5,zero
10000ce8:	1004d0fa 	srli	r2,r2,3
10000cec:	a180004c 	andi	r6,r20,1
10000cf0:	0011883a 	mov	r8,zero
10000cf4:	1426b03a 	or	r19,r2,r16
10000cf8:	003e1506 	br	10000550 <__alt_data_end+0xf8000550>
10000cfc:	114003cc 	andi	r5,r2,15
10000d00:	01000104 	movi	r4,4
10000d04:	0021883a 	mov	r16,zero
10000d08:	293fcd1e 	bne	r5,r4,10000c40 <__alt_data_end+0xf8000c40>
10000d0c:	800a927a 	slli	r5,r16,9
10000d10:	8020977a 	slli	r16,r16,29
10000d14:	280ad33a 	srli	r5,r5,12
10000d18:	003ff306 	br	10000ce8 <__alt_data_end+0xf8000ce8>
10000d1c:	b23fd336 	bltu	r22,r8,10000c6c <__alt_data_end+0xf8000c6c>
10000d20:	1023883a 	mov	r17,r2
10000d24:	003fa906 	br	10000bcc <__alt_data_end+0xf8000bcc>
10000d28:	d8c00117 	ldw	r3,4(sp)
10000d2c:	193fd636 	bltu	r3,r4,10000c88 <__alt_data_end+0xf8000c88>
10000d30:	2827883a 	mov	r19,r5
10000d34:	003f6806 	br	10000ad8 <__alt_data_end+0xf8000ad8>
10000d38:	0009883a 	mov	r4,zero
10000d3c:	003fe406 	br	10000cd0 <__alt_data_end+0xf8000cd0>
10000d40:	00800434 	movhi	r2,16
10000d44:	89400234 	orhi	r5,r17,8
10000d48:	10bfffc4 	addi	r2,r2,-1
10000d4c:	e00d883a 	mov	r6,fp
10000d50:	288a703a 	and	r5,r5,r2
10000d54:	003e5806 	br	100006b8 <__alt_data_end+0xf80006b8>

10000d58 <__gedf2>:
10000d58:	2804d53a 	srli	r2,r5,20
10000d5c:	3806d53a 	srli	r3,r7,20
10000d60:	02000434 	movhi	r8,16
10000d64:	423fffc4 	addi	r8,r8,-1
10000d68:	0241ffc4 	movi	r9,2047
10000d6c:	1081ffcc 	andi	r2,r2,2047
10000d70:	2a14703a 	and	r10,r5,r8
10000d74:	1a46703a 	and	r3,r3,r9
10000d78:	3a10703a 	and	r8,r7,r8
10000d7c:	280ad7fa 	srli	r5,r5,31
10000d80:	380ed7fa 	srli	r7,r7,31
10000d84:	12400b26 	beq	r2,r9,10000db4 <__gedf2+0x5c>
10000d88:	1a401626 	beq	r3,r9,10000de4 <__gedf2+0x8c>
10000d8c:	10000c1e 	bne	r2,zero,10000dc0 <__gedf2+0x68>
10000d90:	5112b03a 	or	r9,r10,r4
10000d94:	4813003a 	cmpeq	r9,r9,zero
10000d98:	4817883a 	mov	r11,r9
10000d9c:	18000c1e 	bne	r3,zero,10000dd0 <__gedf2+0x78>
10000da0:	4198b03a 	or	r12,r8,r6
10000da4:	60000a1e 	bne	r12,zero,10000dd0 <__gedf2+0x78>
10000da8:	48001326 	beq	r9,zero,10000df8 <__gedf2+0xa0>
10000dac:	0005883a 	mov	r2,zero
10000db0:	f800283a 	ret
10000db4:	5112b03a 	or	r9,r10,r4
10000db8:	4800191e 	bne	r9,zero,10000e20 <__gedf2+0xc8>
10000dbc:	18800926 	beq	r3,r2,10000de4 <__gedf2+0x8c>
10000dc0:	18000b1e 	bne	r3,zero,10000df0 <__gedf2+0x98>
10000dc4:	4192b03a 	or	r9,r8,r6
10000dc8:	0017883a 	mov	r11,zero
10000dcc:	48000a26 	beq	r9,zero,10000df8 <__gedf2+0xa0>
10000dd0:	39c03fcc 	andi	r7,r7,255
10000dd4:	58000726 	beq	r11,zero,10000df4 <__gedf2+0x9c>
10000dd8:	3800081e 	bne	r7,zero,10000dfc <__gedf2+0xa4>
10000ddc:	00bfffc4 	movi	r2,-1
10000de0:	f800283a 	ret
10000de4:	4192b03a 	or	r9,r8,r6
10000de8:	48000d1e 	bne	r9,zero,10000e20 <__gedf2+0xc8>
10000dec:	103fe826 	beq	r2,zero,10000d90 <__alt_data_end+0xf8000d90>
10000df0:	39c03fcc 	andi	r7,r7,255
10000df4:	29c00326 	beq	r5,r7,10000e04 <__gedf2+0xac>
10000df8:	283ff81e 	bne	r5,zero,10000ddc <__alt_data_end+0xf8000ddc>
10000dfc:	00800044 	movi	r2,1
10000e00:	f800283a 	ret
10000e04:	18bffc16 	blt	r3,r2,10000df8 <__alt_data_end+0xf8000df8>
10000e08:	10c00316 	blt	r2,r3,10000e18 <__gedf2+0xc0>
10000e0c:	42bffa36 	bltu	r8,r10,10000df8 <__alt_data_end+0xf8000df8>
10000e10:	52000526 	beq	r10,r8,10000e28 <__gedf2+0xd0>
10000e14:	523fe52e 	bgeu	r10,r8,10000dac <__alt_data_end+0xf8000dac>
10000e18:	283ff026 	beq	r5,zero,10000ddc <__alt_data_end+0xf8000ddc>
10000e1c:	003ff706 	br	10000dfc <__alt_data_end+0xf8000dfc>
10000e20:	00bfff84 	movi	r2,-2
10000e24:	f800283a 	ret
10000e28:	313ff336 	bltu	r6,r4,10000df8 <__alt_data_end+0xf8000df8>
10000e2c:	21bfdf2e 	bgeu	r4,r6,10000dac <__alt_data_end+0xf8000dac>
10000e30:	283fea26 	beq	r5,zero,10000ddc <__alt_data_end+0xf8000ddc>
10000e34:	003ff106 	br	10000dfc <__alt_data_end+0xf8000dfc>

10000e38 <__subdf3>:
10000e38:	00c00434 	movhi	r3,16
10000e3c:	18ffffc4 	addi	r3,r3,-1
10000e40:	defffb04 	addi	sp,sp,-20
10000e44:	28d2703a 	and	r9,r5,r3
10000e48:	3814d53a 	srli	r10,r7,20
10000e4c:	38c6703a 	and	r3,r7,r3
10000e50:	3004d77a 	srli	r2,r6,29
10000e54:	dc800215 	stw	r18,8(sp)
10000e58:	dc000015 	stw	r16,0(sp)
10000e5c:	2824d7fa 	srli	r18,r5,31
10000e60:	2820d53a 	srli	r16,r5,20
10000e64:	481290fa 	slli	r9,r9,3
10000e68:	200ad77a 	srli	r5,r4,29
10000e6c:	180690fa 	slli	r3,r3,3
10000e70:	dc400115 	stw	r17,4(sp)
10000e74:	dfc00415 	stw	ra,16(sp)
10000e78:	202290fa 	slli	r17,r4,3
10000e7c:	dcc00315 	stw	r19,12(sp)
10000e80:	5281ffcc 	andi	r10,r10,2047
10000e84:	0101ffc4 	movi	r4,2047
10000e88:	9011883a 	mov	r8,r18
10000e8c:	8401ffcc 	andi	r16,r16,2047
10000e90:	94803fcc 	andi	r18,r18,255
10000e94:	494ab03a 	or	r5,r9,r5
10000e98:	380ed7fa 	srli	r7,r7,31
10000e9c:	1886b03a 	or	r3,r3,r2
10000ea0:	300c90fa 	slli	r6,r6,3
10000ea4:	51009026 	beq	r10,r4,100010e8 <__subdf3+0x2b0>
10000ea8:	39c0005c 	xori	r7,r7,1
10000eac:	8285c83a 	sub	r2,r16,r10
10000eb0:	91c06f26 	beq	r18,r7,10001070 <__subdf3+0x238>
10000eb4:	0080b10e 	bge	zero,r2,1000117c <__subdf3+0x344>
10000eb8:	50002a1e 	bne	r10,zero,10000f64 <__subdf3+0x12c>
10000ebc:	1988b03a 	or	r4,r3,r6
10000ec0:	2000941e 	bne	r4,zero,10001114 <__subdf3+0x2dc>
10000ec4:	888001cc 	andi	r2,r17,7
10000ec8:	10005b26 	beq	r2,zero,10001038 <__subdf3+0x200>
10000ecc:	88c003cc 	andi	r3,r17,15
10000ed0:	00800104 	movi	r2,4
10000ed4:	18805826 	beq	r3,r2,10001038 <__subdf3+0x200>
10000ed8:	88c00104 	addi	r3,r17,4
10000edc:	1c63803a 	cmpltu	r17,r3,r17
10000ee0:	2c4b883a 	add	r5,r5,r17
10000ee4:	2880202c 	andhi	r2,r5,128
10000ee8:	9200004c 	andi	r8,r18,1
10000eec:	1823883a 	mov	r17,r3
10000ef0:	10005426 	beq	r2,zero,10001044 <__subdf3+0x20c>
10000ef4:	84000044 	addi	r16,r16,1
10000ef8:	0081ffc4 	movi	r2,2047
10000efc:	8080bf26 	beq	r16,r2,100011fc <__subdf3+0x3c4>
10000f00:	013fe034 	movhi	r4,65408
10000f04:	213fffc4 	addi	r4,r4,-1
10000f08:	290a703a 	and	r5,r5,r4
10000f0c:	2804977a 	slli	r2,r5,29
10000f10:	280a927a 	slli	r5,r5,9
10000f14:	8822d0fa 	srli	r17,r17,3
10000f18:	8401ffcc 	andi	r16,r16,2047
10000f1c:	2808d33a 	srli	r4,r5,12
10000f20:	1444b03a 	or	r2,r2,r17
10000f24:	8401ffcc 	andi	r16,r16,2047
10000f28:	800a953a 	slli	r5,r16,20
10000f2c:	40c03fcc 	andi	r3,r8,255
10000f30:	04000434 	movhi	r16,16
10000f34:	180697fa 	slli	r3,r3,31
10000f38:	843fffc4 	addi	r16,r16,-1
10000f3c:	2420703a 	and	r16,r4,r16
10000f40:	8160b03a 	or	r16,r16,r5
10000f44:	80c6b03a 	or	r3,r16,r3
10000f48:	dfc00417 	ldw	ra,16(sp)
10000f4c:	dcc00317 	ldw	r19,12(sp)
10000f50:	dc800217 	ldw	r18,8(sp)
10000f54:	dc400117 	ldw	r17,4(sp)
10000f58:	dc000017 	ldw	r16,0(sp)
10000f5c:	dec00504 	addi	sp,sp,20
10000f60:	f800283a 	ret
10000f64:	0101ffc4 	movi	r4,2047
10000f68:	813fd626 	beq	r16,r4,10000ec4 <__alt_data_end+0xf8000ec4>
10000f6c:	18c02034 	orhi	r3,r3,128
10000f70:	01000e04 	movi	r4,56
10000f74:	2080a416 	blt	r4,r2,10001208 <__subdf3+0x3d0>
10000f78:	010007c4 	movi	r4,31
10000f7c:	2080c716 	blt	r4,r2,1000129c <__subdf3+0x464>
10000f80:	01000804 	movi	r4,32
10000f84:	2089c83a 	sub	r4,r4,r2
10000f88:	1910983a 	sll	r8,r3,r4
10000f8c:	308ed83a 	srl	r7,r6,r2
10000f90:	3108983a 	sll	r4,r6,r4
10000f94:	1884d83a 	srl	r2,r3,r2
10000f98:	41ccb03a 	or	r6,r8,r7
10000f9c:	2008c03a 	cmpne	r4,r4,zero
10000fa0:	310cb03a 	or	r6,r6,r4
10000fa4:	898dc83a 	sub	r6,r17,r6
10000fa8:	89a3803a 	cmpltu	r17,r17,r6
10000fac:	288bc83a 	sub	r5,r5,r2
10000fb0:	2c4bc83a 	sub	r5,r5,r17
10000fb4:	3023883a 	mov	r17,r6
10000fb8:	2880202c 	andhi	r2,r5,128
10000fbc:	10006b26 	beq	r2,zero,1000116c <__subdf3+0x334>
10000fc0:	04c02034 	movhi	r19,128
10000fc4:	9cffffc4 	addi	r19,r19,-1
10000fc8:	2ce6703a 	and	r19,r5,r19
10000fcc:	98007c26 	beq	r19,zero,100011c0 <__subdf3+0x388>
10000fd0:	9809883a 	mov	r4,r19
10000fd4:	00018340 	call	10001834 <__clzsi2>
10000fd8:	10fffe04 	addi	r3,r2,-8
10000fdc:	010007c4 	movi	r4,31
10000fe0:	20c07d16 	blt	r4,r3,100011d8 <__subdf3+0x3a0>
10000fe4:	01400a04 	movi	r5,40
10000fe8:	2885c83a 	sub	r2,r5,r2
10000fec:	888ad83a 	srl	r5,r17,r2
10000ff0:	98e6983a 	sll	r19,r19,r3
10000ff4:	88e2983a 	sll	r17,r17,r3
10000ff8:	2ce6b03a 	or	r19,r5,r19
10000ffc:	1c007a16 	blt	r3,r16,100011e8 <__subdf3+0x3b0>
10001000:	1c21c83a 	sub	r16,r3,r16
10001004:	81400044 	addi	r5,r16,1
10001008:	00c007c4 	movi	r3,31
1000100c:	19409616 	blt	r3,r5,10001268 <__subdf3+0x430>
10001010:	1c21c83a 	sub	r16,r3,r16
10001014:	8c08983a 	sll	r4,r17,r16
10001018:	8946d83a 	srl	r3,r17,r5
1000101c:	9c20983a 	sll	r16,r19,r16
10001020:	2008c03a 	cmpne	r4,r4,zero
10001024:	994ad83a 	srl	r5,r19,r5
10001028:	1c06b03a 	or	r3,r3,r16
1000102c:	1922b03a 	or	r17,r3,r4
10001030:	0021883a 	mov	r16,zero
10001034:	003fa306 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001038:	2880202c 	andhi	r2,r5,128
1000103c:	9200004c 	andi	r8,r18,1
10001040:	103fac1e 	bne	r2,zero,10000ef4 <__alt_data_end+0xf8000ef4>
10001044:	2804977a 	slli	r2,r5,29
10001048:	8822d0fa 	srli	r17,r17,3
1000104c:	00c1ffc4 	movi	r3,2047
10001050:	280ad0fa 	srli	r5,r5,3
10001054:	1444b03a 	or	r2,r2,r17
10001058:	80c02726 	beq	r16,r3,100010f8 <__subdf3+0x2c0>
1000105c:	01000434 	movhi	r4,16
10001060:	213fffc4 	addi	r4,r4,-1
10001064:	80e0703a 	and	r16,r16,r3
10001068:	2908703a 	and	r4,r5,r4
1000106c:	003fad06 	br	10000f24 <__alt_data_end+0xf8000f24>
10001070:	0080690e 	bge	zero,r2,10001218 <__subdf3+0x3e0>
10001074:	50002f26 	beq	r10,zero,10001134 <__subdf3+0x2fc>
10001078:	0101ffc4 	movi	r4,2047
1000107c:	813f9126 	beq	r16,r4,10000ec4 <__alt_data_end+0xf8000ec4>
10001080:	18c02034 	orhi	r3,r3,128
10001084:	01000e04 	movi	r4,56
10001088:	2080b00e 	bge	r4,r2,1000134c <__subdf3+0x514>
1000108c:	198cb03a 	or	r6,r3,r6
10001090:	300ec03a 	cmpne	r7,r6,zero
10001094:	0005883a 	mov	r2,zero
10001098:	3c4f883a 	add	r7,r7,r17
1000109c:	3c63803a 	cmpltu	r17,r7,r17
100010a0:	114b883a 	add	r5,r2,r5
100010a4:	2c4b883a 	add	r5,r5,r17
100010a8:	3823883a 	mov	r17,r7
100010ac:	2880202c 	andhi	r2,r5,128
100010b0:	10002e26 	beq	r2,zero,1000116c <__subdf3+0x334>
100010b4:	84000044 	addi	r16,r16,1
100010b8:	0081ffc4 	movi	r2,2047
100010bc:	8080de26 	beq	r16,r2,10001438 <__subdf3+0x600>
100010c0:	00bfe034 	movhi	r2,65408
100010c4:	10bfffc4 	addi	r2,r2,-1
100010c8:	288a703a 	and	r5,r5,r2
100010cc:	880cd07a 	srli	r6,r17,1
100010d0:	280897fa 	slli	r4,r5,31
100010d4:	88c0004c 	andi	r3,r17,1
100010d8:	30e2b03a 	or	r17,r6,r3
100010dc:	280ad07a 	srli	r5,r5,1
100010e0:	8922b03a 	or	r17,r17,r4
100010e4:	003f7706 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100010e8:	1984b03a 	or	r2,r3,r6
100010ec:	103f6e26 	beq	r2,zero,10000ea8 <__alt_data_end+0xf8000ea8>
100010f0:	39c03fcc 	andi	r7,r7,255
100010f4:	003f6d06 	br	10000eac <__alt_data_end+0xf8000eac>
100010f8:	1146b03a 	or	r3,r2,r5
100010fc:	18003f26 	beq	r3,zero,100011fc <__subdf3+0x3c4>
10001100:	00c00434 	movhi	r3,16
10001104:	29000234 	orhi	r4,r5,8
10001108:	18ffffc4 	addi	r3,r3,-1
1000110c:	20c8703a 	and	r4,r4,r3
10001110:	003f8406 	br	10000f24 <__alt_data_end+0xf8000f24>
10001114:	10bfffc4 	addi	r2,r2,-1
10001118:	1000501e 	bne	r2,zero,1000125c <__subdf3+0x424>
1000111c:	898fc83a 	sub	r7,r17,r6
10001120:	89e3803a 	cmpltu	r17,r17,r7
10001124:	28cbc83a 	sub	r5,r5,r3
10001128:	2c4bc83a 	sub	r5,r5,r17
1000112c:	3823883a 	mov	r17,r7
10001130:	003fa106 	br	10000fb8 <__alt_data_end+0xf8000fb8>
10001134:	1988b03a 	or	r4,r3,r6
10001138:	203f6226 	beq	r4,zero,10000ec4 <__alt_data_end+0xf8000ec4>
1000113c:	10bfffc4 	addi	r2,r2,-1
10001140:	10009b1e 	bne	r2,zero,100013b0 <__subdf3+0x578>
10001144:	344d883a 	add	r6,r6,r17
10001148:	3463803a 	cmpltu	r17,r6,r17
1000114c:	194b883a 	add	r5,r3,r5
10001150:	2c4b883a 	add	r5,r5,r17
10001154:	3023883a 	mov	r17,r6
10001158:	003fd406 	br	100010ac <__alt_data_end+0xf80010ac>
1000115c:	1106b03a 	or	r3,r2,r4
10001160:	1800b426 	beq	r3,zero,10001434 <__subdf3+0x5fc>
10001164:	100b883a 	mov	r5,r2
10001168:	2023883a 	mov	r17,r4
1000116c:	888001cc 	andi	r2,r17,7
10001170:	103f561e 	bne	r2,zero,10000ecc <__alt_data_end+0xf8000ecc>
10001174:	9200004c 	andi	r8,r18,1
10001178:	003fb206 	br	10001044 <__alt_data_end+0xf8001044>
1000117c:	1000531e 	bne	r2,zero,100012cc <__subdf3+0x494>
10001180:	80800044 	addi	r2,r16,1
10001184:	1081ffcc 	andi	r2,r2,2047
10001188:	01000044 	movi	r4,1
1000118c:	2080a00e 	bge	r4,r2,10001410 <__subdf3+0x5d8>
10001190:	8985c83a 	sub	r2,r17,r6
10001194:	8889803a 	cmpltu	r4,r17,r2
10001198:	28e7c83a 	sub	r19,r5,r3
1000119c:	9927c83a 	sub	r19,r19,r4
100011a0:	9900202c 	andhi	r4,r19,128
100011a4:	20006226 	beq	r4,zero,10001330 <__subdf3+0x4f8>
100011a8:	3463c83a 	sub	r17,r6,r17
100011ac:	194bc83a 	sub	r5,r3,r5
100011b0:	344d803a 	cmpltu	r6,r6,r17
100011b4:	29a7c83a 	sub	r19,r5,r6
100011b8:	3825883a 	mov	r18,r7
100011bc:	983f841e 	bne	r19,zero,10000fd0 <__alt_data_end+0xf8000fd0>
100011c0:	8809883a 	mov	r4,r17
100011c4:	00018340 	call	10001834 <__clzsi2>
100011c8:	10800804 	addi	r2,r2,32
100011cc:	10fffe04 	addi	r3,r2,-8
100011d0:	010007c4 	movi	r4,31
100011d4:	20ff830e 	bge	r4,r3,10000fe4 <__alt_data_end+0xf8000fe4>
100011d8:	14fff604 	addi	r19,r2,-40
100011dc:	8ce6983a 	sll	r19,r17,r19
100011e0:	0023883a 	mov	r17,zero
100011e4:	1c3f860e 	bge	r3,r16,10001000 <__alt_data_end+0xf8001000>
100011e8:	017fe034 	movhi	r5,65408
100011ec:	297fffc4 	addi	r5,r5,-1
100011f0:	80e1c83a 	sub	r16,r16,r3
100011f4:	994a703a 	and	r5,r19,r5
100011f8:	003f3206 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100011fc:	0009883a 	mov	r4,zero
10001200:	0005883a 	mov	r2,zero
10001204:	003f4706 	br	10000f24 <__alt_data_end+0xf8000f24>
10001208:	198cb03a 	or	r6,r3,r6
1000120c:	300cc03a 	cmpne	r6,r6,zero
10001210:	0005883a 	mov	r2,zero
10001214:	003f6306 	br	10000fa4 <__alt_data_end+0xf8000fa4>
10001218:	10009d1e 	bne	r2,zero,10001490 <__subdf3+0x658>
1000121c:	81c00044 	addi	r7,r16,1
10001220:	3881ffcc 	andi	r2,r7,2047
10001224:	02400044 	movi	r9,1
10001228:	4880680e 	bge	r9,r2,100013cc <__subdf3+0x594>
1000122c:	0081ffc4 	movi	r2,2047
10001230:	3880ae26 	beq	r7,r2,100014ec <__subdf3+0x6b4>
10001234:	344d883a 	add	r6,r6,r17
10001238:	3463803a 	cmpltu	r17,r6,r17
1000123c:	194b883a 	add	r5,r3,r5
10001240:	2c4b883a 	add	r5,r5,r17
10001244:	282297fa 	slli	r17,r5,31
10001248:	300cd07a 	srli	r6,r6,1
1000124c:	280ad07a 	srli	r5,r5,1
10001250:	3821883a 	mov	r16,r7
10001254:	89a2b03a 	or	r17,r17,r6
10001258:	003f1a06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
1000125c:	0101ffc4 	movi	r4,2047
10001260:	813f431e 	bne	r16,r4,10000f70 <__alt_data_end+0xf8000f70>
10001264:	003f1706 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001268:	80bff844 	addi	r2,r16,-31
1000126c:	00c00804 	movi	r3,32
10001270:	9884d83a 	srl	r2,r19,r2
10001274:	28c05126 	beq	r5,r3,100013bc <__subdf3+0x584>
10001278:	00c00fc4 	movi	r3,63
1000127c:	1c21c83a 	sub	r16,r3,r16
10001280:	9c26983a 	sll	r19,r19,r16
10001284:	9c62b03a 	or	r17,r19,r17
10001288:	8822c03a 	cmpne	r17,r17,zero
1000128c:	88a2b03a 	or	r17,r17,r2
10001290:	000b883a 	mov	r5,zero
10001294:	0021883a 	mov	r16,zero
10001298:	003fb406 	br	1000116c <__alt_data_end+0xf800116c>
1000129c:	113ff804 	addi	r4,r2,-32
100012a0:	01c00804 	movi	r7,32
100012a4:	1908d83a 	srl	r4,r3,r4
100012a8:	11c04626 	beq	r2,r7,100013c4 <__subdf3+0x58c>
100012ac:	01c01004 	movi	r7,64
100012b0:	3885c83a 	sub	r2,r7,r2
100012b4:	1884983a 	sll	r2,r3,r2
100012b8:	118cb03a 	or	r6,r2,r6
100012bc:	300cc03a 	cmpne	r6,r6,zero
100012c0:	310cb03a 	or	r6,r6,r4
100012c4:	0005883a 	mov	r2,zero
100012c8:	003f3606 	br	10000fa4 <__alt_data_end+0xf8000fa4>
100012cc:	80002b26 	beq	r16,zero,1000137c <__subdf3+0x544>
100012d0:	0101ffc4 	movi	r4,2047
100012d4:	51006926 	beq	r10,r4,1000147c <__subdf3+0x644>
100012d8:	0085c83a 	sub	r2,zero,r2
100012dc:	29402034 	orhi	r5,r5,128
100012e0:	01000e04 	movi	r4,56
100012e4:	20807d16 	blt	r4,r2,100014dc <__subdf3+0x6a4>
100012e8:	010007c4 	movi	r4,31
100012ec:	2080d916 	blt	r4,r2,10001654 <__subdf3+0x81c>
100012f0:	01000804 	movi	r4,32
100012f4:	2089c83a 	sub	r4,r4,r2
100012f8:	2912983a 	sll	r9,r5,r4
100012fc:	8890d83a 	srl	r8,r17,r2
10001300:	8908983a 	sll	r4,r17,r4
10001304:	2884d83a 	srl	r2,r5,r2
10001308:	4a22b03a 	or	r17,r9,r8
1000130c:	2008c03a 	cmpne	r4,r4,zero
10001310:	8922b03a 	or	r17,r17,r4
10001314:	3463c83a 	sub	r17,r6,r17
10001318:	1885c83a 	sub	r2,r3,r2
1000131c:	344d803a 	cmpltu	r6,r6,r17
10001320:	118bc83a 	sub	r5,r2,r6
10001324:	5021883a 	mov	r16,r10
10001328:	3825883a 	mov	r18,r7
1000132c:	003f2206 	br	10000fb8 <__alt_data_end+0xf8000fb8>
10001330:	9886b03a 	or	r3,r19,r2
10001334:	18001c1e 	bne	r3,zero,100013a8 <__subdf3+0x570>
10001338:	0011883a 	mov	r8,zero
1000133c:	000b883a 	mov	r5,zero
10001340:	0023883a 	mov	r17,zero
10001344:	0021883a 	mov	r16,zero
10001348:	003f3e06 	br	10001044 <__alt_data_end+0xf8001044>
1000134c:	010007c4 	movi	r4,31
10001350:	20803c16 	blt	r4,r2,10001444 <__subdf3+0x60c>
10001354:	01000804 	movi	r4,32
10001358:	2089c83a 	sub	r4,r4,r2
1000135c:	1912983a 	sll	r9,r3,r4
10001360:	308ed83a 	srl	r7,r6,r2
10001364:	3108983a 	sll	r4,r6,r4
10001368:	1884d83a 	srl	r2,r3,r2
1000136c:	49ceb03a 	or	r7,r9,r7
10001370:	2008c03a 	cmpne	r4,r4,zero
10001374:	390eb03a 	or	r7,r7,r4
10001378:	003f4706 	br	10001098 <__alt_data_end+0xf8001098>
1000137c:	2c48b03a 	or	r4,r5,r17
10001380:	20003e26 	beq	r4,zero,1000147c <__subdf3+0x644>
10001384:	0084303a 	nor	r2,zero,r2
10001388:	10003a1e 	bne	r2,zero,10001474 <__subdf3+0x63c>
1000138c:	3463c83a 	sub	r17,r6,r17
10001390:	194bc83a 	sub	r5,r3,r5
10001394:	344d803a 	cmpltu	r6,r6,r17
10001398:	298bc83a 	sub	r5,r5,r6
1000139c:	5021883a 	mov	r16,r10
100013a0:	3825883a 	mov	r18,r7
100013a4:	003f0406 	br	10000fb8 <__alt_data_end+0xf8000fb8>
100013a8:	1023883a 	mov	r17,r2
100013ac:	003f0706 	br	10000fcc <__alt_data_end+0xf8000fcc>
100013b0:	0101ffc4 	movi	r4,2047
100013b4:	813f331e 	bne	r16,r4,10001084 <__alt_data_end+0xf8001084>
100013b8:	003ec206 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100013bc:	0027883a 	mov	r19,zero
100013c0:	003fb006 	br	10001284 <__alt_data_end+0xf8001284>
100013c4:	0005883a 	mov	r2,zero
100013c8:	003fbb06 	br	100012b8 <__alt_data_end+0xf80012b8>
100013cc:	2c44b03a 	or	r2,r5,r17
100013d0:	80008b1e 	bne	r16,zero,10001600 <__subdf3+0x7c8>
100013d4:	1000b526 	beq	r2,zero,100016ac <__subdf3+0x874>
100013d8:	1984b03a 	or	r2,r3,r6
100013dc:	103eb926 	beq	r2,zero,10000ec4 <__alt_data_end+0xf8000ec4>
100013e0:	3449883a 	add	r4,r6,r17
100013e4:	2463803a 	cmpltu	r17,r4,r17
100013e8:	194b883a 	add	r5,r3,r5
100013ec:	2c4b883a 	add	r5,r5,r17
100013f0:	2880202c 	andhi	r2,r5,128
100013f4:	2023883a 	mov	r17,r4
100013f8:	103f5c26 	beq	r2,zero,1000116c <__alt_data_end+0xf800116c>
100013fc:	00bfe034 	movhi	r2,65408
10001400:	10bfffc4 	addi	r2,r2,-1
10001404:	4821883a 	mov	r16,r9
10001408:	288a703a 	and	r5,r5,r2
1000140c:	003ead06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001410:	2c44b03a 	or	r2,r5,r17
10001414:	8000291e 	bne	r16,zero,100014bc <__subdf3+0x684>
10001418:	10004f1e 	bne	r2,zero,10001558 <__subdf3+0x720>
1000141c:	1984b03a 	or	r2,r3,r6
10001420:	10000426 	beq	r2,zero,10001434 <__subdf3+0x5fc>
10001424:	180b883a 	mov	r5,r3
10001428:	3023883a 	mov	r17,r6
1000142c:	3825883a 	mov	r18,r7
10001430:	003ea406 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001434:	0011883a 	mov	r8,zero
10001438:	000b883a 	mov	r5,zero
1000143c:	0023883a 	mov	r17,zero
10001440:	003f0006 	br	10001044 <__alt_data_end+0xf8001044>
10001444:	11fff804 	addi	r7,r2,-32
10001448:	19c8d83a 	srl	r4,r3,r7
1000144c:	01c00804 	movi	r7,32
10001450:	11c07e26 	beq	r2,r7,1000164c <__subdf3+0x814>
10001454:	01c01004 	movi	r7,64
10001458:	3885c83a 	sub	r2,r7,r2
1000145c:	1884983a 	sll	r2,r3,r2
10001460:	118cb03a 	or	r6,r2,r6
10001464:	300ec03a 	cmpne	r7,r6,zero
10001468:	390eb03a 	or	r7,r7,r4
1000146c:	0005883a 	mov	r2,zero
10001470:	003f0906 	br	10001098 <__alt_data_end+0xf8001098>
10001474:	0101ffc4 	movi	r4,2047
10001478:	513f991e 	bne	r10,r4,100012e0 <__alt_data_end+0xf80012e0>
1000147c:	180b883a 	mov	r5,r3
10001480:	3023883a 	mov	r17,r6
10001484:	5021883a 	mov	r16,r10
10001488:	3825883a 	mov	r18,r7
1000148c:	003e8d06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001490:	80001a1e 	bne	r16,zero,100014fc <__subdf3+0x6c4>
10001494:	2c48b03a 	or	r4,r5,r17
10001498:	20005526 	beq	r4,zero,100015f0 <__subdf3+0x7b8>
1000149c:	0084303a 	nor	r2,zero,r2
100014a0:	1000511e 	bne	r2,zero,100015e8 <__subdf3+0x7b0>
100014a4:	89a3883a 	add	r17,r17,r6
100014a8:	194b883a 	add	r5,r3,r5
100014ac:	898d803a 	cmpltu	r6,r17,r6
100014b0:	298b883a 	add	r5,r5,r6
100014b4:	5021883a 	mov	r16,r10
100014b8:	003efc06 	br	100010ac <__alt_data_end+0xf80010ac>
100014bc:	1000341e 	bne	r2,zero,10001590 <__subdf3+0x758>
100014c0:	1984b03a 	or	r2,r3,r6
100014c4:	10006f26 	beq	r2,zero,10001684 <__subdf3+0x84c>
100014c8:	180b883a 	mov	r5,r3
100014cc:	3023883a 	mov	r17,r6
100014d0:	3825883a 	mov	r18,r7
100014d4:	0401ffc4 	movi	r16,2047
100014d8:	003e7a06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100014dc:	2c62b03a 	or	r17,r5,r17
100014e0:	8822c03a 	cmpne	r17,r17,zero
100014e4:	0005883a 	mov	r2,zero
100014e8:	003f8a06 	br	10001314 <__alt_data_end+0xf8001314>
100014ec:	3821883a 	mov	r16,r7
100014f0:	000b883a 	mov	r5,zero
100014f4:	0023883a 	mov	r17,zero
100014f8:	003ed206 	br	10001044 <__alt_data_end+0xf8001044>
100014fc:	0101ffc4 	movi	r4,2047
10001500:	51003b26 	beq	r10,r4,100015f0 <__subdf3+0x7b8>
10001504:	0085c83a 	sub	r2,zero,r2
10001508:	29402034 	orhi	r5,r5,128
1000150c:	01000e04 	movi	r4,56
10001510:	20806216 	blt	r4,r2,1000169c <__subdf3+0x864>
10001514:	010007c4 	movi	r4,31
10001518:	20806b16 	blt	r4,r2,100016c8 <__subdf3+0x890>
1000151c:	01000804 	movi	r4,32
10001520:	2089c83a 	sub	r4,r4,r2
10001524:	2912983a 	sll	r9,r5,r4
10001528:	888ed83a 	srl	r7,r17,r2
1000152c:	8908983a 	sll	r4,r17,r4
10001530:	2884d83a 	srl	r2,r5,r2
10001534:	49e2b03a 	or	r17,r9,r7
10001538:	2008c03a 	cmpne	r4,r4,zero
1000153c:	8922b03a 	or	r17,r17,r4
10001540:	89a3883a 	add	r17,r17,r6
10001544:	10c5883a 	add	r2,r2,r3
10001548:	898d803a 	cmpltu	r6,r17,r6
1000154c:	118b883a 	add	r5,r2,r6
10001550:	5021883a 	mov	r16,r10
10001554:	003ed506 	br	100010ac <__alt_data_end+0xf80010ac>
10001558:	1984b03a 	or	r2,r3,r6
1000155c:	103e5926 	beq	r2,zero,10000ec4 <__alt_data_end+0xf8000ec4>
10001560:	8989c83a 	sub	r4,r17,r6
10001564:	8911803a 	cmpltu	r8,r17,r4
10001568:	28c5c83a 	sub	r2,r5,r3
1000156c:	1205c83a 	sub	r2,r2,r8
10001570:	1200202c 	andhi	r8,r2,128
10001574:	403ef926 	beq	r8,zero,1000115c <__alt_data_end+0xf800115c>
10001578:	3463c83a 	sub	r17,r6,r17
1000157c:	194bc83a 	sub	r5,r3,r5
10001580:	344d803a 	cmpltu	r6,r6,r17
10001584:	298bc83a 	sub	r5,r5,r6
10001588:	3825883a 	mov	r18,r7
1000158c:	003e4d06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001590:	1984b03a 	or	r2,r3,r6
10001594:	10002b26 	beq	r2,zero,10001644 <__subdf3+0x80c>
10001598:	2808d0fa 	srli	r4,r5,3
1000159c:	8822d0fa 	srli	r17,r17,3
100015a0:	280a977a 	slli	r5,r5,29
100015a4:	2080022c 	andhi	r2,r4,8
100015a8:	2c62b03a 	or	r17,r5,r17
100015ac:	10000826 	beq	r2,zero,100015d0 <__subdf3+0x798>
100015b0:	1810d0fa 	srli	r8,r3,3
100015b4:	4080022c 	andhi	r2,r8,8
100015b8:	1000051e 	bne	r2,zero,100015d0 <__subdf3+0x798>
100015bc:	300cd0fa 	srli	r6,r6,3
100015c0:	1804977a 	slli	r2,r3,29
100015c4:	4009883a 	mov	r4,r8
100015c8:	3825883a 	mov	r18,r7
100015cc:	11a2b03a 	or	r17,r2,r6
100015d0:	880ad77a 	srli	r5,r17,29
100015d4:	200890fa 	slli	r4,r4,3
100015d8:	882290fa 	slli	r17,r17,3
100015dc:	0401ffc4 	movi	r16,2047
100015e0:	290ab03a 	or	r5,r5,r4
100015e4:	003e3706 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100015e8:	0101ffc4 	movi	r4,2047
100015ec:	513fc71e 	bne	r10,r4,1000150c <__alt_data_end+0xf800150c>
100015f0:	180b883a 	mov	r5,r3
100015f4:	3023883a 	mov	r17,r6
100015f8:	5021883a 	mov	r16,r10
100015fc:	003e3106 	br	10000ec4 <__alt_data_end+0xf8000ec4>
10001600:	10002d26 	beq	r2,zero,100016b8 <__subdf3+0x880>
10001604:	1984b03a 	or	r2,r3,r6
10001608:	10000e26 	beq	r2,zero,10001644 <__subdf3+0x80c>
1000160c:	2808d0fa 	srli	r4,r5,3
10001610:	8822d0fa 	srli	r17,r17,3
10001614:	280a977a 	slli	r5,r5,29
10001618:	2080022c 	andhi	r2,r4,8
1000161c:	2c62b03a 	or	r17,r5,r17
10001620:	103feb26 	beq	r2,zero,100015d0 <__alt_data_end+0xf80015d0>
10001624:	180ed0fa 	srli	r7,r3,3
10001628:	3880022c 	andhi	r2,r7,8
1000162c:	103fe81e 	bne	r2,zero,100015d0 <__alt_data_end+0xf80015d0>
10001630:	300cd0fa 	srli	r6,r6,3
10001634:	1804977a 	slli	r2,r3,29
10001638:	3809883a 	mov	r4,r7
1000163c:	11a2b03a 	or	r17,r2,r6
10001640:	003fe306 	br	100015d0 <__alt_data_end+0xf80015d0>
10001644:	0401ffc4 	movi	r16,2047
10001648:	003e1e06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
1000164c:	0005883a 	mov	r2,zero
10001650:	003f8306 	br	10001460 <__alt_data_end+0xf8001460>
10001654:	113ff804 	addi	r4,r2,-32
10001658:	02000804 	movi	r8,32
1000165c:	2908d83a 	srl	r4,r5,r4
10001660:	12002526 	beq	r2,r8,100016f8 <__subdf3+0x8c0>
10001664:	02001004 	movi	r8,64
10001668:	4085c83a 	sub	r2,r8,r2
1000166c:	288a983a 	sll	r5,r5,r2
10001670:	2c62b03a 	or	r17,r5,r17
10001674:	8822c03a 	cmpne	r17,r17,zero
10001678:	8922b03a 	or	r17,r17,r4
1000167c:	0005883a 	mov	r2,zero
10001680:	003f2406 	br	10001314 <__alt_data_end+0xf8001314>
10001684:	01402034 	movhi	r5,128
10001688:	0011883a 	mov	r8,zero
1000168c:	297fffc4 	addi	r5,r5,-1
10001690:	047ffe04 	movi	r17,-8
10001694:	0401ffc4 	movi	r16,2047
10001698:	003e6a06 	br	10001044 <__alt_data_end+0xf8001044>
1000169c:	2c62b03a 	or	r17,r5,r17
100016a0:	8822c03a 	cmpne	r17,r17,zero
100016a4:	0005883a 	mov	r2,zero
100016a8:	003fa506 	br	10001540 <__alt_data_end+0xf8001540>
100016ac:	180b883a 	mov	r5,r3
100016b0:	3023883a 	mov	r17,r6
100016b4:	003e0306 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100016b8:	180b883a 	mov	r5,r3
100016bc:	3023883a 	mov	r17,r6
100016c0:	0401ffc4 	movi	r16,2047
100016c4:	003dff06 	br	10000ec4 <__alt_data_end+0xf8000ec4>
100016c8:	113ff804 	addi	r4,r2,-32
100016cc:	01c00804 	movi	r7,32
100016d0:	2908d83a 	srl	r4,r5,r4
100016d4:	11c00a26 	beq	r2,r7,10001700 <__subdf3+0x8c8>
100016d8:	01c01004 	movi	r7,64
100016dc:	3885c83a 	sub	r2,r7,r2
100016e0:	288a983a 	sll	r5,r5,r2
100016e4:	2c62b03a 	or	r17,r5,r17
100016e8:	8822c03a 	cmpne	r17,r17,zero
100016ec:	8922b03a 	or	r17,r17,r4
100016f0:	0005883a 	mov	r2,zero
100016f4:	003f9206 	br	10001540 <__alt_data_end+0xf8001540>
100016f8:	000b883a 	mov	r5,zero
100016fc:	003fdc06 	br	10001670 <__alt_data_end+0xf8001670>
10001700:	000b883a 	mov	r5,zero
10001704:	003ff706 	br	100016e4 <__alt_data_end+0xf80016e4>

10001708 <__fixdfsi>:
10001708:	2806d53a 	srli	r3,r5,20
1000170c:	00800434 	movhi	r2,16
10001710:	10bfffc4 	addi	r2,r2,-1
10001714:	18c1ffcc 	andi	r3,r3,2047
10001718:	0180ff84 	movi	r6,1022
1000171c:	2884703a 	and	r2,r5,r2
10001720:	280ad7fa 	srli	r5,r5,31
10001724:	30c0130e 	bge	r6,r3,10001774 <__fixdfsi+0x6c>
10001728:	01810744 	movi	r6,1053
1000172c:	30c00d16 	blt	r6,r3,10001764 <__fixdfsi+0x5c>
10001730:	01810cc4 	movi	r6,1075
10001734:	30cdc83a 	sub	r6,r6,r3
10001738:	01c007c4 	movi	r7,31
1000173c:	10800434 	orhi	r2,r2,16
10001740:	39800e0e 	bge	r7,r6,1000177c <__fixdfsi+0x74>
10001744:	010104c4 	movi	r4,1043
10001748:	20c7c83a 	sub	r3,r4,r3
1000174c:	10c6d83a 	srl	r3,r2,r3
10001750:	29403fcc 	andi	r5,r5,255
10001754:	0145c83a 	sub	r2,zero,r5
10001758:	1884f03a 	xor	r2,r3,r2
1000175c:	1145883a 	add	r2,r2,r5
10001760:	f800283a 	ret
10001764:	00a00034 	movhi	r2,32768
10001768:	10bfffc4 	addi	r2,r2,-1
1000176c:	2885883a 	add	r2,r5,r2
10001770:	f800283a 	ret
10001774:	0005883a 	mov	r2,zero
10001778:	f800283a 	ret
1000177c:	18fefb44 	addi	r3,r3,-1043
10001780:	2188d83a 	srl	r4,r4,r6
10001784:	10c6983a 	sll	r3,r2,r3
10001788:	20c6b03a 	or	r3,r4,r3
1000178c:	003ff006 	br	10001750 <__alt_data_end+0xf8001750>

10001790 <__floatunsidf>:
10001790:	defffe04 	addi	sp,sp,-8
10001794:	dc000015 	stw	r16,0(sp)
10001798:	dfc00115 	stw	ra,4(sp)
1000179c:	2021883a 	mov	r16,r4
100017a0:	20001026 	beq	r4,zero,100017e4 <__floatunsidf+0x54>
100017a4:	00018340 	call	10001834 <__clzsi2>
100017a8:	01410784 	movi	r5,1054
100017ac:	100d883a 	mov	r6,r2
100017b0:	288bc83a 	sub	r5,r5,r2
100017b4:	00800284 	movi	r2,10
100017b8:	11801616 	blt	r2,r6,10001814 <__floatunsidf+0x84>
100017bc:	008002c4 	movi	r2,11
100017c0:	1185c83a 	sub	r2,r2,r6
100017c4:	8084d83a 	srl	r2,r16,r2
100017c8:	00c00434 	movhi	r3,16
100017cc:	31c00544 	addi	r7,r6,21
100017d0:	18ffffc4 	addi	r3,r3,-1
100017d4:	81e0983a 	sll	r16,r16,r7
100017d8:	10cc703a 	and	r6,r2,r3
100017dc:	2941ffcc 	andi	r5,r5,2047
100017e0:	00000206 	br	100017ec <__floatunsidf+0x5c>
100017e4:	000b883a 	mov	r5,zero
100017e8:	000d883a 	mov	r6,zero
100017ec:	280a953a 	slli	r5,r5,20
100017f0:	00c00434 	movhi	r3,16
100017f4:	18ffffc4 	addi	r3,r3,-1
100017f8:	30c6703a 	and	r3,r6,r3
100017fc:	8005883a 	mov	r2,r16
10001800:	1946b03a 	or	r3,r3,r5
10001804:	dfc00117 	ldw	ra,4(sp)
10001808:	dc000017 	ldw	r16,0(sp)
1000180c:	dec00204 	addi	sp,sp,8
10001810:	f800283a 	ret
10001814:	31bffd44 	addi	r6,r6,-11
10001818:	818c983a 	sll	r6,r16,r6
1000181c:	00800434 	movhi	r2,16
10001820:	10bfffc4 	addi	r2,r2,-1
10001824:	2941ffcc 	andi	r5,r5,2047
10001828:	0021883a 	mov	r16,zero
1000182c:	308c703a 	and	r6,r6,r2
10001830:	003fee06 	br	100017ec <__alt_data_end+0xf80017ec>

10001834 <__clzsi2>:
10001834:	00bfffd4 	movui	r2,65535
10001838:	11000b36 	bltu	r2,r4,10001868 <__clzsi2+0x34>
1000183c:	00803fc4 	movi	r2,255
10001840:	1100122e 	bgeu	r2,r4,1000188c <__clzsi2+0x58>
10001844:	00c00204 	movi	r3,8
10001848:	01400604 	movi	r5,24
1000184c:	20c8d83a 	srl	r4,r4,r3
10001850:	00840074 	movhi	r2,4097
10001854:	10bd9d04 	addi	r2,r2,-2444
10001858:	1109883a 	add	r4,r2,r4
1000185c:	20800003 	ldbu	r2,0(r4)
10001860:	2885c83a 	sub	r2,r5,r2
10001864:	f800283a 	ret
10001868:	00804034 	movhi	r2,256
1000186c:	10bfffc4 	addi	r2,r2,-1
10001870:	11000336 	bltu	r2,r4,10001880 <__clzsi2+0x4c>
10001874:	00c00404 	movi	r3,16
10001878:	180b883a 	mov	r5,r3
1000187c:	003ff306 	br	1000184c <__alt_data_end+0xf800184c>
10001880:	00c00604 	movi	r3,24
10001884:	01400204 	movi	r5,8
10001888:	003ff006 	br	1000184c <__alt_data_end+0xf800184c>
1000188c:	0007883a 	mov	r3,zero
10001890:	01400804 	movi	r5,32
10001894:	003fed06 	br	1000184c <__alt_data_end+0xf800184c>

10001898 <udivmodsi4>:
10001898:	2900182e 	bgeu	r5,r4,100018fc <udivmodsi4+0x64>
1000189c:	28001716 	blt	r5,zero,100018fc <udivmodsi4+0x64>
100018a0:	00800804 	movi	r2,32
100018a4:	00c00044 	movi	r3,1
100018a8:	00000206 	br	100018b4 <udivmodsi4+0x1c>
100018ac:	10001126 	beq	r2,zero,100018f4 <udivmodsi4+0x5c>
100018b0:	28000516 	blt	r5,zero,100018c8 <udivmodsi4+0x30>
100018b4:	294b883a 	add	r5,r5,r5
100018b8:	10bfffc4 	addi	r2,r2,-1
100018bc:	18c7883a 	add	r3,r3,r3
100018c0:	293ffa36 	bltu	r5,r4,100018ac <__alt_data_end+0xf80018ac>
100018c4:	18000b26 	beq	r3,zero,100018f4 <udivmodsi4+0x5c>
100018c8:	0005883a 	mov	r2,zero
100018cc:	21400236 	bltu	r4,r5,100018d8 <udivmodsi4+0x40>
100018d0:	2149c83a 	sub	r4,r4,r5
100018d4:	10c4b03a 	or	r2,r2,r3
100018d8:	1806d07a 	srli	r3,r3,1
100018dc:	280ad07a 	srli	r5,r5,1
100018e0:	183ffa1e 	bne	r3,zero,100018cc <__alt_data_end+0xf80018cc>
100018e4:	3000011e 	bne	r6,zero,100018ec <udivmodsi4+0x54>
100018e8:	f800283a 	ret
100018ec:	2005883a 	mov	r2,r4
100018f0:	f800283a 	ret
100018f4:	0005883a 	mov	r2,zero
100018f8:	003ffa06 	br	100018e4 <__alt_data_end+0xf80018e4>
100018fc:	00c00044 	movi	r3,1
10001900:	003ff106 	br	100018c8 <__alt_data_end+0xf80018c8>

10001904 <__divsi3>:
10001904:	defffe04 	addi	sp,sp,-8
10001908:	dfc00115 	stw	ra,4(sp)
1000190c:	dc000015 	stw	r16,0(sp)
10001910:	20000b16 	blt	r4,zero,10001940 <__divsi3+0x3c>
10001914:	0021883a 	mov	r16,zero
10001918:	28000c16 	blt	r5,zero,1000194c <__divsi3+0x48>
1000191c:	000d883a 	mov	r6,zero
10001920:	00018980 	call	10001898 <udivmodsi4>
10001924:	0407c83a 	sub	r3,zero,r16
10001928:	1884f03a 	xor	r2,r3,r2
1000192c:	1405883a 	add	r2,r2,r16
10001930:	dfc00117 	ldw	ra,4(sp)
10001934:	dc000017 	ldw	r16,0(sp)
10001938:	dec00204 	addi	sp,sp,8
1000193c:	f800283a 	ret
10001940:	0109c83a 	sub	r4,zero,r4
10001944:	04000044 	movi	r16,1
10001948:	283ff40e 	bge	r5,zero,1000191c <__alt_data_end+0xf800191c>
1000194c:	014bc83a 	sub	r5,zero,r5
10001950:	8400005c 	xori	r16,r16,1
10001954:	003ff106 	br	1000191c <__alt_data_end+0xf800191c>

10001958 <__modsi3>:
10001958:	defffd04 	addi	sp,sp,-12
1000195c:	dfc00215 	stw	ra,8(sp)
10001960:	dc400115 	stw	r17,4(sp)
10001964:	dc000015 	stw	r16,0(sp)
10001968:	20000c16 	blt	r4,zero,1000199c <__modsi3+0x44>
1000196c:	0023883a 	mov	r17,zero
10001970:	0021883a 	mov	r16,zero
10001974:	28000d16 	blt	r5,zero,100019ac <__modsi3+0x54>
10001978:	01800044 	movi	r6,1
1000197c:	00018980 	call	10001898 <udivmodsi4>
10001980:	1404f03a 	xor	r2,r2,r16
10001984:	8885883a 	add	r2,r17,r2
10001988:	dfc00217 	ldw	ra,8(sp)
1000198c:	dc400117 	ldw	r17,4(sp)
10001990:	dc000017 	ldw	r16,0(sp)
10001994:	dec00304 	addi	sp,sp,12
10001998:	f800283a 	ret
1000199c:	0109c83a 	sub	r4,zero,r4
100019a0:	04400044 	movi	r17,1
100019a4:	043fffc4 	movi	r16,-1
100019a8:	283ff30e 	bge	r5,zero,10001978 <__alt_data_end+0xf8001978>
100019ac:	014bc83a 	sub	r5,zero,r5
100019b0:	003ff106 	br	10001978 <__alt_data_end+0xf8001978>

100019b4 <__udivsi3>:
100019b4:	000d883a 	mov	r6,zero
100019b8:	00018981 	jmpi	10001898 <udivmodsi4>

100019bc <__umodsi3>:
100019bc:	01800044 	movi	r6,1
100019c0:	00018981 	jmpi	10001898 <udivmodsi4>

100019c4 <__mulsi3>:
100019c4:	0005883a 	mov	r2,zero
100019c8:	20000726 	beq	r4,zero,100019e8 <__mulsi3+0x24>
100019cc:	20c0004c 	andi	r3,r4,1
100019d0:	2008d07a 	srli	r4,r4,1
100019d4:	18000126 	beq	r3,zero,100019dc <__mulsi3+0x18>
100019d8:	1145883a 	add	r2,r2,r5
100019dc:	294b883a 	add	r5,r5,r5
100019e0:	203ffa1e 	bne	r4,zero,100019cc <__alt_data_end+0xf80019cc>
100019e4:	f800283a 	ret
100019e8:	f800283a 	ret

100019ec <clock>:
100019ec:	00840074 	movhi	r2,4097
100019f0:	10850904 	addi	r2,r2,5156
100019f4:	11000017 	ldw	r4,0(r2)
100019f8:	defffb04 	addi	sp,sp,-20
100019fc:	d80b883a 	mov	r5,sp
10001a00:	dfc00415 	stw	ra,16(sp)
10001a04:	0001c040 	call	10001c04 <_times_r>
10001a08:	00ffffc4 	movi	r3,-1
10001a0c:	10c00726 	beq	r2,r3,10001a2c <clock+0x40>
10001a10:	d8c00117 	ldw	r3,4(sp)
10001a14:	d8800017 	ldw	r2,0(sp)
10001a18:	1885883a 	add	r2,r3,r2
10001a1c:	d8c00217 	ldw	r3,8(sp)
10001a20:	10c7883a 	add	r3,r2,r3
10001a24:	d8800317 	ldw	r2,12(sp)
10001a28:	1885883a 	add	r2,r3,r2
10001a2c:	dfc00417 	ldw	ra,16(sp)
10001a30:	dec00504 	addi	sp,sp,20
10001a34:	f800283a 	ret

10001a38 <_printf_r>:
10001a38:	defffd04 	addi	sp,sp,-12
10001a3c:	dfc00015 	stw	ra,0(sp)
10001a40:	d9800115 	stw	r6,4(sp)
10001a44:	d9c00215 	stw	r7,8(sp)
10001a48:	280d883a 	mov	r6,r5
10001a4c:	21400217 	ldw	r5,8(r4)
10001a50:	d9c00104 	addi	r7,sp,4
10001a54:	0001c0c0 	call	10001c0c <___vfprintf_internal_r>
10001a58:	dfc00017 	ldw	ra,0(sp)
10001a5c:	dec00304 	addi	sp,sp,12
10001a60:	f800283a 	ret

10001a64 <printf>:
10001a64:	defffc04 	addi	sp,sp,-16
10001a68:	dfc00015 	stw	ra,0(sp)
10001a6c:	d9400115 	stw	r5,4(sp)
10001a70:	d9800215 	stw	r6,8(sp)
10001a74:	d9c00315 	stw	r7,12(sp)
10001a78:	00840074 	movhi	r2,4097
10001a7c:	10850904 	addi	r2,r2,5156
10001a80:	10800017 	ldw	r2,0(r2)
10001a84:	200b883a 	mov	r5,r4
10001a88:	d9800104 	addi	r6,sp,4
10001a8c:	11000217 	ldw	r4,8(r2)
10001a90:	0003d080 	call	10003d08 <__vfprintf_internal>
10001a94:	dfc00017 	ldw	ra,0(sp)
10001a98:	dec00404 	addi	sp,sp,16
10001a9c:	f800283a 	ret

10001aa0 <_puts_r>:
10001aa0:	defff604 	addi	sp,sp,-40
10001aa4:	dc000715 	stw	r16,28(sp)
10001aa8:	2021883a 	mov	r16,r4
10001aac:	2809883a 	mov	r4,r5
10001ab0:	dc400815 	stw	r17,32(sp)
10001ab4:	dfc00915 	stw	ra,36(sp)
10001ab8:	2823883a 	mov	r17,r5
10001abc:	0001b6c0 	call	10001b6c <strlen>
10001ac0:	00c40074 	movhi	r3,4097
10001ac4:	18c50904 	addi	r3,r3,5156
10001ac8:	18c00017 	ldw	r3,0(r3)
10001acc:	11000044 	addi	r4,r2,1
10001ad0:	d8800115 	stw	r2,4(sp)
10001ad4:	18c00217 	ldw	r3,8(r3)
10001ad8:	01440074 	movhi	r5,4097
10001adc:	297dde04 	addi	r5,r5,-2184
10001ae0:	1880030b 	ldhu	r2,12(r3)
10001ae4:	d9400215 	stw	r5,8(sp)
10001ae8:	d9000615 	stw	r4,24(sp)
10001aec:	01400044 	movi	r5,1
10001af0:	01000084 	movi	r4,2
10001af4:	d9000515 	stw	r4,20(sp)
10001af8:	dc400015 	stw	r17,0(sp)
10001afc:	d9400315 	stw	r5,12(sp)
10001b00:	dec00415 	stw	sp,16(sp)
10001b04:	1108000c 	andi	r4,r2,8192
10001b08:	2000061e 	bne	r4,zero,10001b24 <_puts_r+0x84>
10001b0c:	19401917 	ldw	r5,100(r3)
10001b10:	0137ffc4 	movi	r4,-8193
10001b14:	10880014 	ori	r2,r2,8192
10001b18:	2908703a 	and	r4,r5,r4
10001b1c:	1880030d 	sth	r2,12(r3)
10001b20:	19001915 	stw	r4,100(r3)
10001b24:	81400217 	ldw	r5,8(r16)
10001b28:	8009883a 	mov	r4,r16
10001b2c:	d9800404 	addi	r6,sp,16
10001b30:	00061cc0 	call	100061cc <__sfvwrite_r>
10001b34:	1000061e 	bne	r2,zero,10001b50 <_puts_r+0xb0>
10001b38:	00800284 	movi	r2,10
10001b3c:	dfc00917 	ldw	ra,36(sp)
10001b40:	dc400817 	ldw	r17,32(sp)
10001b44:	dc000717 	ldw	r16,28(sp)
10001b48:	dec00a04 	addi	sp,sp,40
10001b4c:	f800283a 	ret
10001b50:	00bfffc4 	movi	r2,-1
10001b54:	003ff906 	br	10001b3c <__alt_data_end+0xf8001b3c>

10001b58 <puts>:
10001b58:	00840074 	movhi	r2,4097
10001b5c:	10850904 	addi	r2,r2,5156
10001b60:	200b883a 	mov	r5,r4
10001b64:	11000017 	ldw	r4,0(r2)
10001b68:	0001aa01 	jmpi	10001aa0 <_puts_r>

10001b6c <strlen>:
10001b6c:	208000cc 	andi	r2,r4,3
10001b70:	10002026 	beq	r2,zero,10001bf4 <strlen+0x88>
10001b74:	20800007 	ldb	r2,0(r4)
10001b78:	10002026 	beq	r2,zero,10001bfc <strlen+0x90>
10001b7c:	2005883a 	mov	r2,r4
10001b80:	00000206 	br	10001b8c <strlen+0x20>
10001b84:	10c00007 	ldb	r3,0(r2)
10001b88:	18001826 	beq	r3,zero,10001bec <strlen+0x80>
10001b8c:	10800044 	addi	r2,r2,1
10001b90:	10c000cc 	andi	r3,r2,3
10001b94:	183ffb1e 	bne	r3,zero,10001b84 <__alt_data_end+0xf8001b84>
10001b98:	10c00017 	ldw	r3,0(r2)
10001b9c:	01ffbff4 	movhi	r7,65279
10001ba0:	39ffbfc4 	addi	r7,r7,-257
10001ba4:	00ca303a 	nor	r5,zero,r3
10001ba8:	01a02074 	movhi	r6,32897
10001bac:	19c7883a 	add	r3,r3,r7
10001bb0:	31a02004 	addi	r6,r6,-32640
10001bb4:	1946703a 	and	r3,r3,r5
10001bb8:	1986703a 	and	r3,r3,r6
10001bbc:	1800091e 	bne	r3,zero,10001be4 <strlen+0x78>
10001bc0:	10800104 	addi	r2,r2,4
10001bc4:	10c00017 	ldw	r3,0(r2)
10001bc8:	19cb883a 	add	r5,r3,r7
10001bcc:	00c6303a 	nor	r3,zero,r3
10001bd0:	28c6703a 	and	r3,r5,r3
10001bd4:	1986703a 	and	r3,r3,r6
10001bd8:	183ff926 	beq	r3,zero,10001bc0 <__alt_data_end+0xf8001bc0>
10001bdc:	00000106 	br	10001be4 <strlen+0x78>
10001be0:	10800044 	addi	r2,r2,1
10001be4:	10c00007 	ldb	r3,0(r2)
10001be8:	183ffd1e 	bne	r3,zero,10001be0 <__alt_data_end+0xf8001be0>
10001bec:	1105c83a 	sub	r2,r2,r4
10001bf0:	f800283a 	ret
10001bf4:	2005883a 	mov	r2,r4
10001bf8:	003fe706 	br	10001b98 <__alt_data_end+0xf8001b98>
10001bfc:	0005883a 	mov	r2,zero
10001c00:	f800283a 	ret

10001c04 <_times_r>:
10001c04:	2809883a 	mov	r4,r5
10001c08:	000d6841 	jmpi	1000d684 <times>

10001c0c <___vfprintf_internal_r>:
10001c0c:	defeb604 	addi	sp,sp,-1320
10001c10:	dfc14915 	stw	ra,1316(sp)
10001c14:	ddc14715 	stw	r23,1308(sp)
10001c18:	dd814615 	stw	r22,1304(sp)
10001c1c:	202f883a 	mov	r23,r4
10001c20:	282d883a 	mov	r22,r5
10001c24:	d9812a15 	stw	r6,1192(sp)
10001c28:	d9c12d15 	stw	r7,1204(sp)
10001c2c:	df014815 	stw	fp,1312(sp)
10001c30:	dd414515 	stw	r21,1300(sp)
10001c34:	dd014415 	stw	r20,1296(sp)
10001c38:	dcc14315 	stw	r19,1292(sp)
10001c3c:	dc814215 	stw	r18,1288(sp)
10001c40:	dc414115 	stw	r17,1284(sp)
10001c44:	dc014015 	stw	r16,1280(sp)
10001c48:	000688c0 	call	1000688c <_localeconv_r>
10001c4c:	10800017 	ldw	r2,0(r2)
10001c50:	1009883a 	mov	r4,r2
10001c54:	d8813515 	stw	r2,1236(sp)
10001c58:	0001b6c0 	call	10001b6c <strlen>
10001c5c:	d8813815 	stw	r2,1248(sp)
10001c60:	b8000226 	beq	r23,zero,10001c6c <___vfprintf_internal_r+0x60>
10001c64:	b8800e17 	ldw	r2,56(r23)
10001c68:	10010526 	beq	r2,zero,10002080 <___vfprintf_internal_r+0x474>
10001c6c:	b0c0030b 	ldhu	r3,12(r22)
10001c70:	1908000c 	andi	r4,r3,8192
10001c74:	1805883a 	mov	r2,r3
10001c78:	2000071e 	bne	r4,zero,10001c98 <___vfprintf_internal_r+0x8c>
10001c7c:	b1001917 	ldw	r4,100(r22)
10001c80:	18880014 	ori	r2,r3,8192
10001c84:	00f7ffc4 	movi	r3,-8193
10001c88:	20c8703a 	and	r4,r4,r3
10001c8c:	b080030d 	sth	r2,12(r22)
10001c90:	1007883a 	mov	r3,r2
10001c94:	b1001915 	stw	r4,100(r22)
10001c98:	1100020c 	andi	r4,r2,8
10001c9c:	2000a826 	beq	r4,zero,10001f40 <___vfprintf_internal_r+0x334>
10001ca0:	b1000417 	ldw	r4,16(r22)
10001ca4:	2000a626 	beq	r4,zero,10001f40 <___vfprintf_internal_r+0x334>
10001ca8:	1080068c 	andi	r2,r2,26
10001cac:	01000284 	movi	r4,10
10001cb0:	1100ac26 	beq	r2,r4,10001f64 <___vfprintf_internal_r+0x358>
10001cb4:	d8c10e04 	addi	r3,sp,1080
10001cb8:	d9010dc4 	addi	r4,sp,1079
10001cbc:	d9400404 	addi	r5,sp,16
10001cc0:	05040074 	movhi	r20,4097
10001cc4:	1905c83a 	sub	r2,r3,r4
10001cc8:	a53def84 	addi	r20,r20,-2114
10001ccc:	d8c12815 	stw	r3,1184(sp)
10001cd0:	d9012915 	stw	r4,1188(sp)
10001cd4:	d9411e15 	stw	r5,1144(sp)
10001cd8:	d8012015 	stw	zero,1152(sp)
10001cdc:	d8011f15 	stw	zero,1148(sp)
10001ce0:	d8013315 	stw	zero,1228(sp)
10001ce4:	d8013715 	stw	zero,1244(sp)
10001ce8:	d8013915 	stw	zero,1252(sp)
10001cec:	d8013b15 	stw	zero,1260(sp)
10001cf0:	d8013a15 	stw	zero,1256(sp)
10001cf4:	d8012f15 	stw	zero,1212(sp)
10001cf8:	2811883a 	mov	r8,r5
10001cfc:	d8813c15 	stw	r2,1264(sp)
10001d00:	d8c12a17 	ldw	r3,1192(sp)
10001d04:	18800007 	ldb	r2,0(r3)
10001d08:	10021326 	beq	r2,zero,10002558 <___vfprintf_internal_r+0x94c>
10001d0c:	00c00944 	movi	r3,37
10001d10:	dc012a17 	ldw	r16,1192(sp)
10001d14:	10c0021e 	bne	r2,r3,10001d20 <___vfprintf_internal_r+0x114>
10001d18:	00001606 	br	10001d74 <___vfprintf_internal_r+0x168>
10001d1c:	10c08526 	beq	r2,r3,10001f34 <___vfprintf_internal_r+0x328>
10001d20:	84000044 	addi	r16,r16,1
10001d24:	80800007 	ldb	r2,0(r16)
10001d28:	103ffc1e 	bne	r2,zero,10001d1c <__alt_data_end+0xf8001d1c>
10001d2c:	d9012a17 	ldw	r4,1192(sp)
10001d30:	8123c83a 	sub	r17,r16,r4
10001d34:	88000f26 	beq	r17,zero,10001d74 <___vfprintf_internal_r+0x168>
10001d38:	d8812a17 	ldw	r2,1192(sp)
10001d3c:	d8c12017 	ldw	r3,1152(sp)
10001d40:	44400115 	stw	r17,4(r8)
10001d44:	40800015 	stw	r2,0(r8)
10001d48:	d8811f17 	ldw	r2,1148(sp)
10001d4c:	1c47883a 	add	r3,r3,r17
10001d50:	d8c12015 	stw	r3,1152(sp)
10001d54:	10800044 	addi	r2,r2,1
10001d58:	d8811f15 	stw	r2,1148(sp)
10001d5c:	00c001c4 	movi	r3,7
10001d60:	1880b516 	blt	r3,r2,10002038 <___vfprintf_internal_r+0x42c>
10001d64:	42000204 	addi	r8,r8,8
10001d68:	d8c12f17 	ldw	r3,1212(sp)
10001d6c:	1c47883a 	add	r3,r3,r17
10001d70:	d8c12f15 	stw	r3,1212(sp)
10001d74:	80800007 	ldb	r2,0(r16)
10001d78:	1000b626 	beq	r2,zero,10002054 <___vfprintf_internal_r+0x448>
10001d7c:	80800044 	addi	r2,r16,1
10001d80:	84000047 	ldb	r16,1(r16)
10001d84:	0027883a 	mov	r19,zero
10001d88:	0039883a 	mov	fp,zero
10001d8c:	dcc12b05 	stb	r19,1196(sp)
10001d90:	d8012785 	stb	zero,1182(sp)
10001d94:	027fffc4 	movi	r9,-1
10001d98:	d8012e15 	stw	zero,1208(sp)
10001d9c:	04401604 	movi	r17,88
10001da0:	04800244 	movi	r18,9
10001da4:	da012a15 	stw	r8,1192(sp)
10001da8:	e027883a 	mov	r19,fp
10001dac:	17000044 	addi	fp,r2,1
10001db0:	80bff804 	addi	r2,r16,-32
10001db4:	88831236 	bltu	r17,r2,10002a00 <___vfprintf_internal_r+0xdf4>
10001db8:	100490ba 	slli	r2,r2,2
10001dbc:	01040034 	movhi	r4,4096
10001dc0:	21077404 	addi	r4,r4,7632
10001dc4:	1105883a 	add	r2,r2,r4
10001dc8:	10800017 	ldw	r2,0(r2)
10001dcc:	1000683a 	jmp	r2
10001dd0:	1000291c 	xori	zero,r2,164
10001dd4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001dd8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ddc:	10002938 	rdprs	zero,r2,164
10001de0:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001de4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001de8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001dec:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001df0:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001df4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001df8:	10002948 	cmpgei	zero,r2,165
10001dfc:	10002970 	cmpltui	zero,r2,165
10001e00:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e04:	1000208c 	andi	zero,r2,130
10001e08:	1000209c 	xori	zero,r2,130
10001e0c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e10:	100020ec 	andhi	zero,r2,131
10001e14:	100020fc 	xorhi	zero,r2,131
10001e18:	100020fc 	xorhi	zero,r2,131
10001e1c:	100020fc 	xorhi	zero,r2,131
10001e20:	100020fc 	xorhi	zero,r2,131
10001e24:	100020fc 	xorhi	zero,r2,131
10001e28:	100020fc 	xorhi	zero,r2,131
10001e2c:	100020fc 	xorhi	zero,r2,131
10001e30:	100020fc 	xorhi	zero,r2,131
10001e34:	100020fc 	xorhi	zero,r2,131
10001e38:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e3c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e40:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e44:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e48:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e4c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e50:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e54:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e58:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e5c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e60:	10002140 	call	11000214 <_gp+0xfe6df4>
10001e64:	10002560 	cmpeqi	zero,r2,149
10001e68:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e6c:	10002560 	cmpeqi	zero,r2,149
10001e70:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e74:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e78:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e7c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e80:	10002608 	cmpgei	zero,r2,152
10001e84:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e88:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e8c:	10002618 	cmpnei	zero,r2,152
10001e90:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e94:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e98:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001e9c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ea0:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ea4:	1000265c 	xori	zero,r2,153
10001ea8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001eac:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001eb0:	10002694 	ori	zero,r2,154
10001eb4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001eb8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ebc:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ec0:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ec4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ec8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ecc:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ed0:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ed4:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001ed8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001edc:	100028d0 	cmplti	zero,r2,163
10001ee0:	1000287c 	xorhi	zero,r2,161
10001ee4:	10002560 	cmpeqi	zero,r2,149
10001ee8:	10002560 	cmpeqi	zero,r2,149
10001eec:	10002560 	cmpeqi	zero,r2,149
10001ef0:	100028c0 	call	1100028c <_gp+0xfe6e6c>
10001ef4:	1000287c 	xorhi	zero,r2,161
10001ef8:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001efc:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f00:	10002798 	cmpnei	zero,r2,158
10001f04:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f08:	100027b0 	cmpltui	zero,r2,158
10001f0c:	100027f0 	cmpltui	zero,r2,159
10001f10:	10002830 	cmpltui	zero,r2,160
10001f14:	100026fc 	xorhi	zero,r2,155
10001f18:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f1c:	10002984 	addi	zero,r2,166
10001f20:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f24:	1000270c 	andi	zero,r2,156
10001f28:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f2c:	10002a00 	call	110002a0 <_gp+0xfe6e80>
10001f30:	1000274c 	andi	zero,r2,157
10001f34:	d9412a17 	ldw	r5,1192(sp)
10001f38:	8163c83a 	sub	r17,r16,r5
10001f3c:	003f7d06 	br	10001d34 <__alt_data_end+0xf8001d34>
10001f40:	b809883a 	mov	r4,r23
10001f44:	b00b883a 	mov	r5,r22
10001f48:	0003d2c0 	call	10003d2c <__swsetup_r>
10001f4c:	10002d1e 	bne	r2,zero,10002004 <___vfprintf_internal_r+0x3f8>
10001f50:	b0c0030b 	ldhu	r3,12(r22)
10001f54:	01000284 	movi	r4,10
10001f58:	1805883a 	mov	r2,r3
10001f5c:	1080068c 	andi	r2,r2,26
10001f60:	113f541e 	bne	r2,r4,10001cb4 <__alt_data_end+0xf8001cb4>
10001f64:	b080038b 	ldhu	r2,14(r22)
10001f68:	113fffcc 	andi	r4,r2,65535
10001f6c:	2120001c 	xori	r4,r4,32768
10001f70:	21200004 	addi	r4,r4,-32768
10001f74:	203f4f16 	blt	r4,zero,10001cb4 <__alt_data_end+0xf8001cb4>
10001f78:	b2c01917 	ldw	r11,100(r22)
10001f7c:	b2800717 	ldw	r10,28(r22)
10001f80:	b2400917 	ldw	r9,36(r22)
10001f84:	d9812a17 	ldw	r6,1192(sp)
10001f88:	d9c12d17 	ldw	r7,1204(sp)
10001f8c:	02010004 	movi	r8,1024
10001f90:	18ffff4c 	andi	r3,r3,65533
10001f94:	d881078d 	sth	r2,1054(sp)
10001f98:	b809883a 	mov	r4,r23
10001f9c:	d8800404 	addi	r2,sp,16
10001fa0:	d9410404 	addi	r5,sp,1040
10001fa4:	d8c1070d 	sth	r3,1052(sp)
10001fa8:	dac11d15 	stw	r11,1140(sp)
10001fac:	da810b15 	stw	r10,1068(sp)
10001fb0:	da410d15 	stw	r9,1076(sp)
10001fb4:	d8810415 	stw	r2,1040(sp)
10001fb8:	d8810815 	stw	r2,1056(sp)
10001fbc:	da010615 	stw	r8,1048(sp)
10001fc0:	da010915 	stw	r8,1060(sp)
10001fc4:	d8010a15 	stw	zero,1064(sp)
10001fc8:	0001c0c0 	call	10001c0c <___vfprintf_internal_r>
10001fcc:	1021883a 	mov	r16,r2
10001fd0:	10000416 	blt	r2,zero,10001fe4 <___vfprintf_internal_r+0x3d8>
10001fd4:	b809883a 	mov	r4,r23
10001fd8:	d9410404 	addi	r5,sp,1040
10001fdc:	00057ac0 	call	100057ac <_fflush_r>
10001fe0:	1007301e 	bne	r2,zero,10003ca4 <___vfprintf_internal_r+0x2098>
10001fe4:	d881070b 	ldhu	r2,1052(sp)
10001fe8:	1080100c 	andi	r2,r2,64
10001fec:	10000326 	beq	r2,zero,10001ffc <___vfprintf_internal_r+0x3f0>
10001ff0:	b080030b 	ldhu	r2,12(r22)
10001ff4:	10801014 	ori	r2,r2,64
10001ff8:	b080030d 	sth	r2,12(r22)
10001ffc:	8005883a 	mov	r2,r16
10002000:	00000106 	br	10002008 <___vfprintf_internal_r+0x3fc>
10002004:	00bfffc4 	movi	r2,-1
10002008:	dfc14917 	ldw	ra,1316(sp)
1000200c:	df014817 	ldw	fp,1312(sp)
10002010:	ddc14717 	ldw	r23,1308(sp)
10002014:	dd814617 	ldw	r22,1304(sp)
10002018:	dd414517 	ldw	r21,1300(sp)
1000201c:	dd014417 	ldw	r20,1296(sp)
10002020:	dcc14317 	ldw	r19,1292(sp)
10002024:	dc814217 	ldw	r18,1288(sp)
10002028:	dc414117 	ldw	r17,1284(sp)
1000202c:	dc014017 	ldw	r16,1280(sp)
10002030:	dec14a04 	addi	sp,sp,1320
10002034:	f800283a 	ret
10002038:	b809883a 	mov	r4,r23
1000203c:	b00b883a 	mov	r5,r22
10002040:	d9811e04 	addi	r6,sp,1144
10002044:	000904c0 	call	1000904c <__sprint_r>
10002048:	1000081e 	bne	r2,zero,1000206c <___vfprintf_internal_r+0x460>
1000204c:	da000404 	addi	r8,sp,16
10002050:	003f4506 	br	10001d68 <__alt_data_end+0xf8001d68>
10002054:	d8812017 	ldw	r2,1152(sp)
10002058:	10000426 	beq	r2,zero,1000206c <___vfprintf_internal_r+0x460>
1000205c:	b809883a 	mov	r4,r23
10002060:	b00b883a 	mov	r5,r22
10002064:	d9811e04 	addi	r6,sp,1144
10002068:	000904c0 	call	1000904c <__sprint_r>
1000206c:	b080030b 	ldhu	r2,12(r22)
10002070:	1080100c 	andi	r2,r2,64
10002074:	103fe31e 	bne	r2,zero,10002004 <__alt_data_end+0xf8002004>
10002078:	d8812f17 	ldw	r2,1212(sp)
1000207c:	003fe206 	br	10002008 <__alt_data_end+0xf8002008>
10002080:	b809883a 	mov	r4,r23
10002084:	0005d680 	call	10005d68 <__sinit>
10002088:	003ef806 	br	10001c6c <__alt_data_end+0xf8001c6c>
1000208c:	e005883a 	mov	r2,fp
10002090:	9cc00114 	ori	r19,r19,4
10002094:	e4000007 	ldb	r16,0(fp)
10002098:	003f4406 	br	10001dac <__alt_data_end+0xf8001dac>
1000209c:	e4000007 	ldb	r16,0(fp)
100020a0:	01000a84 	movi	r4,42
100020a4:	e0800044 	addi	r2,fp,1
100020a8:	8106f626 	beq	r16,r4,10003c84 <___vfprintf_internal_r+0x2078>
100020ac:	857ff404 	addi	r21,r16,-48
100020b0:	1039883a 	mov	fp,r2
100020b4:	0013883a 	mov	r9,zero
100020b8:	957f3d36 	bltu	r18,r21,10001db0 <__alt_data_end+0xf8001db0>
100020bc:	0009883a 	mov	r4,zero
100020c0:	01400284 	movi	r5,10
100020c4:	00019c40 	call	100019c4 <__mulsi3>
100020c8:	e4000007 	ldb	r16,0(fp)
100020cc:	a889883a 	add	r4,r21,r2
100020d0:	e7000044 	addi	fp,fp,1
100020d4:	857ff404 	addi	r21,r16,-48
100020d8:	957ff92e 	bgeu	r18,r21,100020c0 <__alt_data_end+0xf80020c0>
100020dc:	2013883a 	mov	r9,r4
100020e0:	203f330e 	bge	r4,zero,10001db0 <__alt_data_end+0xf8001db0>
100020e4:	027fffc4 	movi	r9,-1
100020e8:	003f3106 	br	10001db0 <__alt_data_end+0xf8001db0>
100020ec:	9cc02014 	ori	r19,r19,128
100020f0:	e005883a 	mov	r2,fp
100020f4:	e4000007 	ldb	r16,0(fp)
100020f8:	003f2c06 	br	10001dac <__alt_data_end+0xf8001dac>
100020fc:	857ff404 	addi	r21,r16,-48
10002100:	d8012e15 	stw	zero,1208(sp)
10002104:	e021883a 	mov	r16,fp
10002108:	0009883a 	mov	r4,zero
1000210c:	da412c15 	stw	r9,1200(sp)
10002110:	01400284 	movi	r5,10
10002114:	00019c40 	call	100019c4 <__mulsi3>
10002118:	81400007 	ldb	r5,0(r16)
1000211c:	1549883a 	add	r4,r2,r21
10002120:	e7000044 	addi	fp,fp,1
10002124:	2d7ff404 	addi	r21,r5,-48
10002128:	e021883a 	mov	r16,fp
1000212c:	957ff82e 	bgeu	r18,r21,10002110 <__alt_data_end+0xf8002110>
10002130:	2821883a 	mov	r16,r5
10002134:	d9012e15 	stw	r4,1208(sp)
10002138:	da412c17 	ldw	r9,1200(sp)
1000213c:	003f1c06 	br	10001db0 <__alt_data_end+0xf8001db0>
10002140:	da012a17 	ldw	r8,1192(sp)
10002144:	df012a15 	stw	fp,1192(sp)
10002148:	9839883a 	mov	fp,r19
1000214c:	dcc12b03 	ldbu	r19,1196(sp)
10002150:	e7000414 	ori	fp,fp,16
10002154:	e080080c 	andi	r2,fp,32
10002158:	dcc12785 	stb	r19,1182(sp)
1000215c:	d8c12d17 	ldw	r3,1204(sp)
10002160:	1001ce26 	beq	r2,zero,1000289c <___vfprintf_internal_r+0xc90>
10002164:	d9012d17 	ldw	r4,1204(sp)
10002168:	18800117 	ldw	r2,4(r3)
1000216c:	1c800017 	ldw	r18,0(r3)
10002170:	21000204 	addi	r4,r4,8
10002174:	d9012d15 	stw	r4,1204(sp)
10002178:	102b883a 	mov	r21,r2
1000217c:	10044916 	blt	r2,zero,100032a4 <___vfprintf_internal_r+0x1698>
10002180:	dcc12783 	ldbu	r19,1182(sp)
10002184:	da413215 	stw	r9,1224(sp)
10002188:	00800044 	movi	r2,1
1000218c:	9546b03a 	or	r3,r18,r21
10002190:	48000216 	blt	r9,zero,1000219c <___vfprintf_internal_r+0x590>
10002194:	013fdfc4 	movi	r4,-129
10002198:	e138703a 	and	fp,fp,r4
1000219c:	1802251e 	bne	r3,zero,10002a34 <___vfprintf_internal_r+0xe28>
100021a0:	48031726 	beq	r9,zero,10002e00 <___vfprintf_internal_r+0x11f4>
100021a4:	10803fcc 	andi	r2,r2,255
100021a8:	00c00044 	movi	r3,1
100021ac:	10c24526 	beq	r2,r3,10002ac4 <___vfprintf_internal_r+0xeb8>
100021b0:	00c00084 	movi	r3,2
100021b4:	10c33426 	beq	r2,r3,10002e88 <___vfprintf_internal_r+0x127c>
100021b8:	d8c10e04 	addi	r3,sp,1080
100021bc:	9008d0fa 	srli	r4,r18,3
100021c0:	a80a977a 	slli	r5,r21,29
100021c4:	a82ad0fa 	srli	r21,r21,3
100021c8:	948001cc 	andi	r18,r18,7
100021cc:	90800c04 	addi	r2,r18,48
100021d0:	18ffffc4 	addi	r3,r3,-1
100021d4:	2924b03a 	or	r18,r5,r4
100021d8:	18800005 	stb	r2,0(r3)
100021dc:	9548b03a 	or	r4,r18,r21
100021e0:	203ff61e 	bne	r4,zero,100021bc <__alt_data_end+0xf80021bc>
100021e4:	e100004c 	andi	r4,fp,1
100021e8:	d8c13115 	stw	r3,1220(sp)
100021ec:	20039a1e 	bne	r4,zero,10003058 <___vfprintf_internal_r+0x144c>
100021f0:	d8812817 	ldw	r2,1184(sp)
100021f4:	10e3c83a 	sub	r17,r2,r3
100021f8:	8805883a 	mov	r2,r17
100021fc:	8a40010e 	bge	r17,r9,10002204 <___vfprintf_internal_r+0x5f8>
10002200:	4805883a 	mov	r2,r9
10002204:	d8812b15 	stw	r2,1196(sp)
10002208:	d8013415 	stw	zero,1232(sp)
1000220c:	98803fcc 	andi	r2,r19,255
10002210:	1080201c 	xori	r2,r2,128
10002214:	10bfe004 	addi	r2,r2,-128
10002218:	10000326 	beq	r2,zero,10002228 <___vfprintf_internal_r+0x61c>
1000221c:	d8c12b17 	ldw	r3,1196(sp)
10002220:	18c00044 	addi	r3,r3,1
10002224:	d8c12b15 	stw	r3,1196(sp)
10002228:	e0c0008c 	andi	r3,fp,2
1000222c:	d8c12c15 	stw	r3,1200(sp)
10002230:	18000326 	beq	r3,zero,10002240 <___vfprintf_internal_r+0x634>
10002234:	d8c12b17 	ldw	r3,1196(sp)
10002238:	18c00084 	addi	r3,r3,2
1000223c:	d8c12b15 	stw	r3,1196(sp)
10002240:	e0c0210c 	andi	r3,fp,132
10002244:	d8c13015 	stw	r3,1216(sp)
10002248:	1801f81e 	bne	r3,zero,10002a2c <___vfprintf_internal_r+0xe20>
1000224c:	d9012e17 	ldw	r4,1208(sp)
10002250:	d8c12b17 	ldw	r3,1196(sp)
10002254:	20ebc83a 	sub	r21,r4,r3
10002258:	0541f40e 	bge	zero,r21,10002a2c <___vfprintf_internal_r+0xe20>
1000225c:	02400404 	movi	r9,16
10002260:	d8c12017 	ldw	r3,1152(sp)
10002264:	d8811f17 	ldw	r2,1148(sp)
10002268:	4d45750e 	bge	r9,r21,10003840 <___vfprintf_internal_r+0x1c34>
1000226c:	01440074 	movhi	r5,4097
10002270:	297df384 	addi	r5,r5,-2098
10002274:	d9413615 	stw	r5,1240(sp)
10002278:	4827883a 	mov	r19,r9
1000227c:	048001c4 	movi	r18,7
10002280:	00000306 	br	10002290 <___vfprintf_internal_r+0x684>
10002284:	ad7ffc04 	addi	r21,r21,-16
10002288:	42000204 	addi	r8,r8,8
1000228c:	9d40130e 	bge	r19,r21,100022dc <___vfprintf_internal_r+0x6d0>
10002290:	01040074 	movhi	r4,4097
10002294:	18c00404 	addi	r3,r3,16
10002298:	10800044 	addi	r2,r2,1
1000229c:	213df384 	addi	r4,r4,-2098
100022a0:	41000015 	stw	r4,0(r8)
100022a4:	44c00115 	stw	r19,4(r8)
100022a8:	d8c12015 	stw	r3,1152(sp)
100022ac:	d8811f15 	stw	r2,1148(sp)
100022b0:	90bff40e 	bge	r18,r2,10002284 <__alt_data_end+0xf8002284>
100022b4:	b809883a 	mov	r4,r23
100022b8:	b00b883a 	mov	r5,r22
100022bc:	d9811e04 	addi	r6,sp,1144
100022c0:	000904c0 	call	1000904c <__sprint_r>
100022c4:	103f691e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100022c8:	ad7ffc04 	addi	r21,r21,-16
100022cc:	d8c12017 	ldw	r3,1152(sp)
100022d0:	d8811f17 	ldw	r2,1148(sp)
100022d4:	da000404 	addi	r8,sp,16
100022d8:	9d7fed16 	blt	r19,r21,10002290 <__alt_data_end+0xf8002290>
100022dc:	d9413617 	ldw	r5,1240(sp)
100022e0:	a8c7883a 	add	r3,r21,r3
100022e4:	10800044 	addi	r2,r2,1
100022e8:	41400015 	stw	r5,0(r8)
100022ec:	45400115 	stw	r21,4(r8)
100022f0:	d8c12015 	stw	r3,1152(sp)
100022f4:	d8811f15 	stw	r2,1148(sp)
100022f8:	010001c4 	movi	r4,7
100022fc:	20832b16 	blt	r4,r2,10002fac <___vfprintf_internal_r+0x13a0>
10002300:	d8812787 	ldb	r2,1182(sp)
10002304:	42000204 	addi	r8,r8,8
10002308:	10000c26 	beq	r2,zero,1000233c <___vfprintf_internal_r+0x730>
1000230c:	d8811f17 	ldw	r2,1148(sp)
10002310:	d9012784 	addi	r4,sp,1182
10002314:	18c00044 	addi	r3,r3,1
10002318:	10800044 	addi	r2,r2,1
1000231c:	41000015 	stw	r4,0(r8)
10002320:	01000044 	movi	r4,1
10002324:	41000115 	stw	r4,4(r8)
10002328:	d8c12015 	stw	r3,1152(sp)
1000232c:	d8811f15 	stw	r2,1148(sp)
10002330:	010001c4 	movi	r4,7
10002334:	2082c416 	blt	r4,r2,10002e48 <___vfprintf_internal_r+0x123c>
10002338:	42000204 	addi	r8,r8,8
1000233c:	d8812c17 	ldw	r2,1200(sp)
10002340:	10000c26 	beq	r2,zero,10002374 <___vfprintf_internal_r+0x768>
10002344:	d8811f17 	ldw	r2,1148(sp)
10002348:	d9012704 	addi	r4,sp,1180
1000234c:	18c00084 	addi	r3,r3,2
10002350:	10800044 	addi	r2,r2,1
10002354:	41000015 	stw	r4,0(r8)
10002358:	01000084 	movi	r4,2
1000235c:	41000115 	stw	r4,4(r8)
10002360:	d8c12015 	stw	r3,1152(sp)
10002364:	d8811f15 	stw	r2,1148(sp)
10002368:	010001c4 	movi	r4,7
1000236c:	2082be16 	blt	r4,r2,10002e68 <___vfprintf_internal_r+0x125c>
10002370:	42000204 	addi	r8,r8,8
10002374:	d9013017 	ldw	r4,1216(sp)
10002378:	00802004 	movi	r2,128
1000237c:	20822026 	beq	r4,r2,10002c00 <___vfprintf_internal_r+0xff4>
10002380:	d9413217 	ldw	r5,1224(sp)
10002384:	2c67c83a 	sub	r19,r5,r17
10002388:	04c0260e 	bge	zero,r19,10002424 <___vfprintf_internal_r+0x818>
1000238c:	05400404 	movi	r21,16
10002390:	d8811f17 	ldw	r2,1148(sp)
10002394:	acc4720e 	bge	r21,r19,10003560 <___vfprintf_internal_r+0x1954>
10002398:	01440074 	movhi	r5,4097
1000239c:	297def84 	addi	r5,r5,-2114
100023a0:	d9412c15 	stw	r5,1200(sp)
100023a4:	048001c4 	movi	r18,7
100023a8:	00000306 	br	100023b8 <___vfprintf_internal_r+0x7ac>
100023ac:	9cfffc04 	addi	r19,r19,-16
100023b0:	42000204 	addi	r8,r8,8
100023b4:	acc0110e 	bge	r21,r19,100023fc <___vfprintf_internal_r+0x7f0>
100023b8:	18c00404 	addi	r3,r3,16
100023bc:	10800044 	addi	r2,r2,1
100023c0:	45000015 	stw	r20,0(r8)
100023c4:	45400115 	stw	r21,4(r8)
100023c8:	d8c12015 	stw	r3,1152(sp)
100023cc:	d8811f15 	stw	r2,1148(sp)
100023d0:	90bff60e 	bge	r18,r2,100023ac <__alt_data_end+0xf80023ac>
100023d4:	b809883a 	mov	r4,r23
100023d8:	b00b883a 	mov	r5,r22
100023dc:	d9811e04 	addi	r6,sp,1144
100023e0:	000904c0 	call	1000904c <__sprint_r>
100023e4:	103f211e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100023e8:	9cfffc04 	addi	r19,r19,-16
100023ec:	d8c12017 	ldw	r3,1152(sp)
100023f0:	d8811f17 	ldw	r2,1148(sp)
100023f4:	da000404 	addi	r8,sp,16
100023f8:	acffef16 	blt	r21,r19,100023b8 <__alt_data_end+0xf80023b8>
100023fc:	d9012c17 	ldw	r4,1200(sp)
10002400:	1cc7883a 	add	r3,r3,r19
10002404:	10800044 	addi	r2,r2,1
10002408:	41000015 	stw	r4,0(r8)
1000240c:	44c00115 	stw	r19,4(r8)
10002410:	d8c12015 	stw	r3,1152(sp)
10002414:	d8811f15 	stw	r2,1148(sp)
10002418:	010001c4 	movi	r4,7
1000241c:	20828216 	blt	r4,r2,10002e28 <___vfprintf_internal_r+0x121c>
10002420:	42000204 	addi	r8,r8,8
10002424:	e080400c 	andi	r2,fp,256
10002428:	1001ac1e 	bne	r2,zero,10002adc <___vfprintf_internal_r+0xed0>
1000242c:	d8811f17 	ldw	r2,1148(sp)
10002430:	d9413117 	ldw	r5,1220(sp)
10002434:	1c47883a 	add	r3,r3,r17
10002438:	10800044 	addi	r2,r2,1
1000243c:	41400015 	stw	r5,0(r8)
10002440:	44400115 	stw	r17,4(r8)
10002444:	d8c12015 	stw	r3,1152(sp)
10002448:	d8811f15 	stw	r2,1148(sp)
1000244c:	010001c4 	movi	r4,7
10002450:	20825d16 	blt	r4,r2,10002dc8 <___vfprintf_internal_r+0x11bc>
10002454:	42000204 	addi	r8,r8,8
10002458:	e080010c 	andi	r2,fp,4
1000245c:	10003126 	beq	r2,zero,10002524 <___vfprintf_internal_r+0x918>
10002460:	d8812e17 	ldw	r2,1208(sp)
10002464:	d9012b17 	ldw	r4,1196(sp)
10002468:	1121c83a 	sub	r16,r2,r4
1000246c:	04002d0e 	bge	zero,r16,10002524 <___vfprintf_internal_r+0x918>
10002470:	04400404 	movi	r17,16
10002474:	d8811f17 	ldw	r2,1148(sp)
10002478:	8c05340e 	bge	r17,r16,1000394c <___vfprintf_internal_r+0x1d40>
1000247c:	01040074 	movhi	r4,4097
10002480:	213df384 	addi	r4,r4,-2098
10002484:	d9013615 	stw	r4,1240(sp)
10002488:	048001c4 	movi	r18,7
1000248c:	00000306 	br	1000249c <___vfprintf_internal_r+0x890>
10002490:	843ffc04 	addi	r16,r16,-16
10002494:	42000204 	addi	r8,r8,8
10002498:	8c00130e 	bge	r17,r16,100024e8 <___vfprintf_internal_r+0x8dc>
1000249c:	01440074 	movhi	r5,4097
100024a0:	18c00404 	addi	r3,r3,16
100024a4:	10800044 	addi	r2,r2,1
100024a8:	297df384 	addi	r5,r5,-2098
100024ac:	41400015 	stw	r5,0(r8)
100024b0:	44400115 	stw	r17,4(r8)
100024b4:	d8c12015 	stw	r3,1152(sp)
100024b8:	d8811f15 	stw	r2,1148(sp)
100024bc:	90bff40e 	bge	r18,r2,10002490 <__alt_data_end+0xf8002490>
100024c0:	b809883a 	mov	r4,r23
100024c4:	b00b883a 	mov	r5,r22
100024c8:	d9811e04 	addi	r6,sp,1144
100024cc:	000904c0 	call	1000904c <__sprint_r>
100024d0:	103ee61e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100024d4:	843ffc04 	addi	r16,r16,-16
100024d8:	d8c12017 	ldw	r3,1152(sp)
100024dc:	d8811f17 	ldw	r2,1148(sp)
100024e0:	da000404 	addi	r8,sp,16
100024e4:	8c3fed16 	blt	r17,r16,1000249c <__alt_data_end+0xf800249c>
100024e8:	d9013617 	ldw	r4,1240(sp)
100024ec:	1c07883a 	add	r3,r3,r16
100024f0:	10800044 	addi	r2,r2,1
100024f4:	41000015 	stw	r4,0(r8)
100024f8:	44000115 	stw	r16,4(r8)
100024fc:	d8c12015 	stw	r3,1152(sp)
10002500:	d8811f15 	stw	r2,1148(sp)
10002504:	010001c4 	movi	r4,7
10002508:	2080060e 	bge	r4,r2,10002524 <___vfprintf_internal_r+0x918>
1000250c:	b809883a 	mov	r4,r23
10002510:	b00b883a 	mov	r5,r22
10002514:	d9811e04 	addi	r6,sp,1144
10002518:	000904c0 	call	1000904c <__sprint_r>
1000251c:	103ed31e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002520:	d8c12017 	ldw	r3,1152(sp)
10002524:	df012b17 	ldw	fp,1196(sp)
10002528:	d9412e17 	ldw	r5,1208(sp)
1000252c:	e140010e 	bge	fp,r5,10002534 <___vfprintf_internal_r+0x928>
10002530:	2839883a 	mov	fp,r5
10002534:	d8812f17 	ldw	r2,1212(sp)
10002538:	1705883a 	add	r2,r2,fp
1000253c:	d8812f15 	stw	r2,1212(sp)
10002540:	1802291e 	bne	r3,zero,10002de8 <___vfprintf_internal_r+0x11dc>
10002544:	d8c12a17 	ldw	r3,1192(sp)
10002548:	d8011f15 	stw	zero,1148(sp)
1000254c:	da000404 	addi	r8,sp,16
10002550:	18800007 	ldb	r2,0(r3)
10002554:	103ded1e 	bne	r2,zero,10001d0c <__alt_data_end+0xf8001d0c>
10002558:	dc012a17 	ldw	r16,1192(sp)
1000255c:	003e0506 	br	10001d74 <__alt_data_end+0xf8001d74>
10002560:	d9012d17 	ldw	r4,1204(sp)
10002564:	d9412d17 	ldw	r5,1204(sp)
10002568:	da012a17 	ldw	r8,1192(sp)
1000256c:	21000017 	ldw	r4,0(r4)
10002570:	29400117 	ldw	r5,4(r5)
10002574:	df012a15 	stw	fp,1192(sp)
10002578:	9839883a 	mov	fp,r19
1000257c:	dcc12b03 	ldbu	r19,1196(sp)
10002580:	d9013715 	stw	r4,1244(sp)
10002584:	d9413915 	stw	r5,1252(sp)
10002588:	da013f15 	stw	r8,1276(sp)
1000258c:	da413e15 	stw	r9,1272(sp)
10002590:	dcc12785 	stb	r19,1182(sp)
10002594:	0008ca80 	call	10008ca8 <__fpclassifyd>
10002598:	d8c12d17 	ldw	r3,1204(sp)
1000259c:	04400044 	movi	r17,1
100025a0:	da013f17 	ldw	r8,1276(sp)
100025a4:	1c800204 	addi	r18,r3,8
100025a8:	da413e17 	ldw	r9,1272(sp)
100025ac:	d9013717 	ldw	r4,1244(sp)
100025b0:	d9413917 	ldw	r5,1252(sp)
100025b4:	1443451e 	bne	r2,r17,100032cc <___vfprintf_internal_r+0x16c0>
100025b8:	000d883a 	mov	r6,zero
100025bc:	000f883a 	mov	r7,zero
100025c0:	000c3740 	call	1000c374 <__ledf2>
100025c4:	da013f17 	ldw	r8,1276(sp)
100025c8:	1004fe16 	blt	r2,zero,100039c4 <___vfprintf_internal_r+0x1db8>
100025cc:	dcc12783 	ldbu	r19,1182(sp)
100025d0:	008011c4 	movi	r2,71
100025d4:	14045d0e 	bge	r2,r16,1000374c <___vfprintf_internal_r+0x1b40>
100025d8:	01440074 	movhi	r5,4097
100025dc:	297de004 	addi	r5,r5,-2176
100025e0:	d9413115 	stw	r5,1220(sp)
100025e4:	00c000c4 	movi	r3,3
100025e8:	00bfdfc4 	movi	r2,-129
100025ec:	d8c12b15 	stw	r3,1196(sp)
100025f0:	e0b8703a 	and	fp,fp,r2
100025f4:	dc812d15 	stw	r18,1204(sp)
100025f8:	1823883a 	mov	r17,r3
100025fc:	d8013215 	stw	zero,1224(sp)
10002600:	d8013415 	stw	zero,1232(sp)
10002604:	003f0106 	br	1000220c <__alt_data_end+0xf800220c>
10002608:	9cc00214 	ori	r19,r19,8
1000260c:	e005883a 	mov	r2,fp
10002610:	e4000007 	ldb	r16,0(fp)
10002614:	003de506 	br	10001dac <__alt_data_end+0xf8001dac>
10002618:	da012a17 	ldw	r8,1192(sp)
1000261c:	df012a15 	stw	fp,1192(sp)
10002620:	9f000414 	ori	fp,r19,16
10002624:	e0c0080c 	andi	r3,fp,32
10002628:	d8812d17 	ldw	r2,1204(sp)
1000262c:	18007626 	beq	r3,zero,10002808 <___vfprintf_internal_r+0xbfc>
10002630:	d9412d17 	ldw	r5,1204(sp)
10002634:	14800017 	ldw	r18,0(r2)
10002638:	15400117 	ldw	r21,4(r2)
1000263c:	29400204 	addi	r5,r5,8
10002640:	d9412d15 	stw	r5,1204(sp)
10002644:	0005883a 	mov	r2,zero
10002648:	9546b03a 	or	r3,r18,r21
1000264c:	d8012785 	stb	zero,1182(sp)
10002650:	da413215 	stw	r9,1224(sp)
10002654:	0027883a 	mov	r19,zero
10002658:	003ecd06 	br	10002190 <__alt_data_end+0xf8002190>
1000265c:	da012a17 	ldw	r8,1192(sp)
10002660:	df012a15 	stw	fp,1192(sp)
10002664:	9f000414 	ori	fp,r19,16
10002668:	e0c0080c 	andi	r3,fp,32
1000266c:	d8812d17 	ldw	r2,1204(sp)
10002670:	18002c26 	beq	r3,zero,10002724 <___vfprintf_internal_r+0xb18>
10002674:	d9012d17 	ldw	r4,1204(sp)
10002678:	14800017 	ldw	r18,0(r2)
1000267c:	15400117 	ldw	r21,4(r2)
10002680:	21000204 	addi	r4,r4,8
10002684:	d9012d15 	stw	r4,1204(sp)
10002688:	00800044 	movi	r2,1
1000268c:	9546b03a 	or	r3,r18,r21
10002690:	003fee06 	br	1000264c <__alt_data_end+0xf800264c>
10002694:	da012a17 	ldw	r8,1192(sp)
10002698:	df012a15 	stw	fp,1192(sp)
1000269c:	9839883a 	mov	fp,r19
100026a0:	dcc12b03 	ldbu	r19,1196(sp)
100026a4:	01440074 	movhi	r5,4097
100026a8:	297de304 	addi	r5,r5,-2164
100026ac:	dcc12785 	stb	r19,1182(sp)
100026b0:	d9413b15 	stw	r5,1260(sp)
100026b4:	e0c0080c 	andi	r3,fp,32
100026b8:	d8812d17 	ldw	r2,1204(sp)
100026bc:	18002e26 	beq	r3,zero,10002778 <___vfprintf_internal_r+0xb6c>
100026c0:	d9412d17 	ldw	r5,1204(sp)
100026c4:	14800017 	ldw	r18,0(r2)
100026c8:	15400117 	ldw	r21,4(r2)
100026cc:	29400204 	addi	r5,r5,8
100026d0:	d9412d15 	stw	r5,1204(sp)
100026d4:	e080004c 	andi	r2,fp,1
100026d8:	10025c26 	beq	r2,zero,1000304c <___vfprintf_internal_r+0x1440>
100026dc:	9546b03a 	or	r3,r18,r21
100026e0:	18038f26 	beq	r3,zero,10003520 <___vfprintf_internal_r+0x1914>
100026e4:	00800c04 	movi	r2,48
100026e8:	d8812705 	stb	r2,1180(sp)
100026ec:	dc012745 	stb	r16,1181(sp)
100026f0:	e7000094 	ori	fp,fp,2
100026f4:	00800084 	movi	r2,2
100026f8:	003fd406 	br	1000264c <__alt_data_end+0xf800264c>
100026fc:	9cc00814 	ori	r19,r19,32
10002700:	e005883a 	mov	r2,fp
10002704:	e4000007 	ldb	r16,0(fp)
10002708:	003da806 	br	10001dac <__alt_data_end+0xf8001dac>
1000270c:	da012a17 	ldw	r8,1192(sp)
10002710:	df012a15 	stw	fp,1192(sp)
10002714:	9839883a 	mov	fp,r19
10002718:	e0c0080c 	andi	r3,fp,32
1000271c:	d8812d17 	ldw	r2,1204(sp)
10002720:	183fd41e 	bne	r3,zero,10002674 <__alt_data_end+0xf8002674>
10002724:	e0c0040c 	andi	r3,fp,16
10002728:	18035f26 	beq	r3,zero,100034a8 <___vfprintf_internal_r+0x189c>
1000272c:	d9412d17 	ldw	r5,1204(sp)
10002730:	14800017 	ldw	r18,0(r2)
10002734:	002b883a 	mov	r21,zero
10002738:	29400104 	addi	r5,r5,4
1000273c:	d9412d15 	stw	r5,1204(sp)
10002740:	00800044 	movi	r2,1
10002744:	9007883a 	mov	r3,r18
10002748:	003fc006 	br	1000264c <__alt_data_end+0xf800264c>
1000274c:	da012a17 	ldw	r8,1192(sp)
10002750:	df012a15 	stw	fp,1192(sp)
10002754:	9839883a 	mov	fp,r19
10002758:	dcc12b03 	ldbu	r19,1196(sp)
1000275c:	01040074 	movhi	r4,4097
10002760:	213de804 	addi	r4,r4,-2144
10002764:	d9013b15 	stw	r4,1260(sp)
10002768:	dcc12785 	stb	r19,1182(sp)
1000276c:	e0c0080c 	andi	r3,fp,32
10002770:	d8812d17 	ldw	r2,1204(sp)
10002774:	183fd21e 	bne	r3,zero,100026c0 <__alt_data_end+0xf80026c0>
10002778:	e0c0040c 	andi	r3,fp,16
1000277c:	18035426 	beq	r3,zero,100034d0 <___vfprintf_internal_r+0x18c4>
10002780:	d8c12d17 	ldw	r3,1204(sp)
10002784:	14800017 	ldw	r18,0(r2)
10002788:	002b883a 	mov	r21,zero
1000278c:	18c00104 	addi	r3,r3,4
10002790:	d8c12d15 	stw	r3,1204(sp)
10002794:	003fcf06 	br	100026d4 <__alt_data_end+0xf80026d4>
10002798:	e4000007 	ldb	r16,0(fp)
1000279c:	00801b04 	movi	r2,108
100027a0:	8083f726 	beq	r16,r2,10003780 <___vfprintf_internal_r+0x1b74>
100027a4:	9cc00414 	ori	r19,r19,16
100027a8:	e005883a 	mov	r2,fp
100027ac:	003d7f06 	br	10001dac <__alt_data_end+0xf8001dac>
100027b0:	da012a17 	ldw	r8,1192(sp)
100027b4:	df012a15 	stw	fp,1192(sp)
100027b8:	9839883a 	mov	fp,r19
100027bc:	dcc12b03 	ldbu	r19,1196(sp)
100027c0:	e080080c 	andi	r2,fp,32
100027c4:	dcc12785 	stb	r19,1182(sp)
100027c8:	10032226 	beq	r2,zero,10003454 <___vfprintf_internal_r+0x1848>
100027cc:	d9412d17 	ldw	r5,1204(sp)
100027d0:	d9012f17 	ldw	r4,1212(sp)
100027d4:	28800017 	ldw	r2,0(r5)
100027d8:	2007d7fa 	srai	r3,r4,31
100027dc:	29400104 	addi	r5,r5,4
100027e0:	d9412d15 	stw	r5,1204(sp)
100027e4:	11000015 	stw	r4,0(r2)
100027e8:	10c00115 	stw	r3,4(r2)
100027ec:	003d4406 	br	10001d00 <__alt_data_end+0xf8001d00>
100027f0:	da012a17 	ldw	r8,1192(sp)
100027f4:	df012a15 	stw	fp,1192(sp)
100027f8:	9839883a 	mov	fp,r19
100027fc:	e0c0080c 	andi	r3,fp,32
10002800:	d8812d17 	ldw	r2,1204(sp)
10002804:	183f8a1e 	bne	r3,zero,10002630 <__alt_data_end+0xf8002630>
10002808:	e0c0040c 	andi	r3,fp,16
1000280c:	18031c26 	beq	r3,zero,10003480 <___vfprintf_internal_r+0x1874>
10002810:	14800017 	ldw	r18,0(r2)
10002814:	d8812d17 	ldw	r2,1204(sp)
10002818:	002b883a 	mov	r21,zero
1000281c:	9007883a 	mov	r3,r18
10002820:	10800104 	addi	r2,r2,4
10002824:	d8812d15 	stw	r2,1204(sp)
10002828:	0005883a 	mov	r2,zero
1000282c:	003f8706 	br	1000264c <__alt_data_end+0xf800264c>
10002830:	d9412d17 	ldw	r5,1204(sp)
10002834:	00800c04 	movi	r2,48
10002838:	d8812705 	stb	r2,1180(sp)
1000283c:	2c800017 	ldw	r18,0(r5)
10002840:	00801e04 	movi	r2,120
10002844:	d8812745 	stb	r2,1181(sp)
10002848:	00840074 	movhi	r2,4097
1000284c:	10bde804 	addi	r2,r2,-2144
10002850:	29400104 	addi	r5,r5,4
10002854:	da012a17 	ldw	r8,1192(sp)
10002858:	d8813b15 	stw	r2,1260(sp)
1000285c:	df012a15 	stw	fp,1192(sp)
10002860:	002b883a 	mov	r21,zero
10002864:	9f000094 	ori	fp,r19,2
10002868:	d9412d15 	stw	r5,1204(sp)
1000286c:	00800084 	movi	r2,2
10002870:	04001e04 	movi	r16,120
10002874:	9007883a 	mov	r3,r18
10002878:	003f7406 	br	1000264c <__alt_data_end+0xf800264c>
1000287c:	da012a17 	ldw	r8,1192(sp)
10002880:	df012a15 	stw	fp,1192(sp)
10002884:	9839883a 	mov	fp,r19
10002888:	dcc12b03 	ldbu	r19,1196(sp)
1000288c:	e080080c 	andi	r2,fp,32
10002890:	d8c12d17 	ldw	r3,1204(sp)
10002894:	dcc12785 	stb	r19,1182(sp)
10002898:	103e321e 	bne	r2,zero,10002164 <__alt_data_end+0xf8002164>
1000289c:	e080040c 	andi	r2,fp,16
100028a0:	10031326 	beq	r2,zero,100034f0 <___vfprintf_internal_r+0x18e4>
100028a4:	1c800017 	ldw	r18,0(r3)
100028a8:	d9412d17 	ldw	r5,1204(sp)
100028ac:	902bd7fa 	srai	r21,r18,31
100028b0:	29400104 	addi	r5,r5,4
100028b4:	d9412d15 	stw	r5,1204(sp)
100028b8:	a805883a 	mov	r2,r21
100028bc:	003e2f06 	br	1000217c <__alt_data_end+0xf800217c>
100028c0:	9cc01014 	ori	r19,r19,64
100028c4:	e005883a 	mov	r2,fp
100028c8:	e4000007 	ldb	r16,0(fp)
100028cc:	003d3706 	br	10001dac <__alt_data_end+0xf8001dac>
100028d0:	d8c12d17 	ldw	r3,1204(sp)
100028d4:	d9012d17 	ldw	r4,1204(sp)
100028d8:	da012a17 	ldw	r8,1192(sp)
100028dc:	18800017 	ldw	r2,0(r3)
100028e0:	21000104 	addi	r4,r4,4
100028e4:	00c00044 	movi	r3,1
100028e8:	df012a15 	stw	fp,1192(sp)
100028ec:	d8c12b15 	stw	r3,1196(sp)
100028f0:	9839883a 	mov	fp,r19
100028f4:	d8012785 	stb	zero,1182(sp)
100028f8:	d8810405 	stb	r2,1040(sp)
100028fc:	d9012d15 	stw	r4,1204(sp)
10002900:	1823883a 	mov	r17,r3
10002904:	d8c10404 	addi	r3,sp,1040
10002908:	d8013215 	stw	zero,1224(sp)
1000290c:	d8013415 	stw	zero,1232(sp)
10002910:	d8c13115 	stw	r3,1220(sp)
10002914:	0005883a 	mov	r2,zero
10002918:	003e4306 	br	10002228 <__alt_data_end+0xf8002228>
1000291c:	d8812b07 	ldb	r2,1196(sp)
10002920:	1002fc1e 	bne	r2,zero,10003514 <___vfprintf_internal_r+0x1908>
10002924:	00c00804 	movi	r3,32
10002928:	d8c12b05 	stb	r3,1196(sp)
1000292c:	e005883a 	mov	r2,fp
10002930:	e4000007 	ldb	r16,0(fp)
10002934:	003d1d06 	br	10001dac <__alt_data_end+0xf8001dac>
10002938:	9cc00054 	ori	r19,r19,1
1000293c:	e005883a 	mov	r2,fp
10002940:	e4000007 	ldb	r16,0(fp)
10002944:	003d1906 	br	10001dac <__alt_data_end+0xf8001dac>
10002948:	d9012d17 	ldw	r4,1204(sp)
1000294c:	d9412d17 	ldw	r5,1204(sp)
10002950:	21000017 	ldw	r4,0(r4)
10002954:	28c00104 	addi	r3,r5,4
10002958:	d9012e15 	stw	r4,1208(sp)
1000295c:	20038c16 	blt	r4,zero,10003790 <___vfprintf_internal_r+0x1b84>
10002960:	d8c12d15 	stw	r3,1204(sp)
10002964:	e005883a 	mov	r2,fp
10002968:	e4000007 	ldb	r16,0(fp)
1000296c:	003d0f06 	br	10001dac <__alt_data_end+0xf8001dac>
10002970:	00c00ac4 	movi	r3,43
10002974:	d8c12b05 	stb	r3,1196(sp)
10002978:	e005883a 	mov	r2,fp
1000297c:	e4000007 	ldb	r16,0(fp)
10002980:	003d0a06 	br	10001dac <__alt_data_end+0xf8001dac>
10002984:	d8c12d17 	ldw	r3,1204(sp)
10002988:	d9012d17 	ldw	r4,1204(sp)
1000298c:	da012a17 	ldw	r8,1192(sp)
10002990:	18c00017 	ldw	r3,0(r3)
10002994:	df012a15 	stw	fp,1192(sp)
10002998:	d8012785 	stb	zero,1182(sp)
1000299c:	d8c13115 	stw	r3,1220(sp)
100029a0:	9839883a 	mov	fp,r19
100029a4:	24800104 	addi	r18,r4,4
100029a8:	1803f726 	beq	r3,zero,10003988 <___vfprintf_internal_r+0x1d7c>
100029ac:	d9013117 	ldw	r4,1220(sp)
100029b0:	48038916 	blt	r9,zero,100037d8 <___vfprintf_internal_r+0x1bcc>
100029b4:	480d883a 	mov	r6,r9
100029b8:	000b883a 	mov	r5,zero
100029bc:	da013f15 	stw	r8,1276(sp)
100029c0:	da413e15 	stw	r9,1272(sp)
100029c4:	00072200 	call	10007220 <memchr>
100029c8:	da013f17 	ldw	r8,1276(sp)
100029cc:	da413e17 	ldw	r9,1272(sp)
100029d0:	10045926 	beq	r2,zero,10003b38 <___vfprintf_internal_r+0x1f2c>
100029d4:	d8c13117 	ldw	r3,1220(sp)
100029d8:	10e3c83a 	sub	r17,r2,r3
100029dc:	4c433516 	blt	r9,r17,100036b4 <___vfprintf_internal_r+0x1aa8>
100029e0:	8805883a 	mov	r2,r17
100029e4:	88038116 	blt	r17,zero,100037ec <___vfprintf_internal_r+0x1be0>
100029e8:	dcc12783 	ldbu	r19,1182(sp)
100029ec:	d8812b15 	stw	r2,1196(sp)
100029f0:	dc812d15 	stw	r18,1204(sp)
100029f4:	d8013215 	stw	zero,1224(sp)
100029f8:	d8013415 	stw	zero,1232(sp)
100029fc:	003e0306 	br	1000220c <__alt_data_end+0xf800220c>
10002a00:	da012a17 	ldw	r8,1192(sp)
10002a04:	df012a15 	stw	fp,1192(sp)
10002a08:	9839883a 	mov	fp,r19
10002a0c:	dcc12b03 	ldbu	r19,1196(sp)
10002a10:	dcc12785 	stb	r19,1182(sp)
10002a14:	803d8f26 	beq	r16,zero,10002054 <__alt_data_end+0xf8002054>
10002a18:	00c00044 	movi	r3,1
10002a1c:	d8c12b15 	stw	r3,1196(sp)
10002a20:	dc010405 	stb	r16,1040(sp)
10002a24:	d8012785 	stb	zero,1182(sp)
10002a28:	003fb506 	br	10002900 <__alt_data_end+0xf8002900>
10002a2c:	d8c12017 	ldw	r3,1152(sp)
10002a30:	003e3506 	br	10002308 <__alt_data_end+0xf8002308>
10002a34:	10803fcc 	andi	r2,r2,255
10002a38:	00c00044 	movi	r3,1
10002a3c:	10fddc1e 	bne	r2,r3,100021b0 <__alt_data_end+0xf80021b0>
10002a40:	a800021e 	bne	r21,zero,10002a4c <___vfprintf_internal_r+0xe40>
10002a44:	00800244 	movi	r2,9
10002a48:	14801e2e 	bgeu	r2,r18,10002ac4 <___vfprintf_internal_r+0xeb8>
10002a4c:	dc012b15 	stw	r16,1196(sp)
10002a50:	dc410e04 	addi	r17,sp,1080
10002a54:	9021883a 	mov	r16,r18
10002a58:	da012c15 	stw	r8,1200(sp)
10002a5c:	a825883a 	mov	r18,r21
10002a60:	482b883a 	mov	r21,r9
10002a64:	8009883a 	mov	r4,r16
10002a68:	900b883a 	mov	r5,r18
10002a6c:	01800284 	movi	r6,10
10002a70:	000f883a 	mov	r7,zero
10002a74:	000b4380 	call	1000b438 <__umoddi3>
10002a78:	10800c04 	addi	r2,r2,48
10002a7c:	8c7fffc4 	addi	r17,r17,-1
10002a80:	8009883a 	mov	r4,r16
10002a84:	900b883a 	mov	r5,r18
10002a88:	01800284 	movi	r6,10
10002a8c:	000f883a 	mov	r7,zero
10002a90:	88800005 	stb	r2,0(r17)
10002a94:	000adf80 	call	1000adf8 <__udivdi3>
10002a98:	1021883a 	mov	r16,r2
10002a9c:	10c4b03a 	or	r2,r2,r3
10002aa0:	1825883a 	mov	r18,r3
10002aa4:	103fef1e 	bne	r2,zero,10002a64 <__alt_data_end+0xf8002a64>
10002aa8:	d9012817 	ldw	r4,1184(sp)
10002aac:	dc413115 	stw	r17,1220(sp)
10002ab0:	dc012b17 	ldw	r16,1196(sp)
10002ab4:	da012c17 	ldw	r8,1200(sp)
10002ab8:	a813883a 	mov	r9,r21
10002abc:	2463c83a 	sub	r17,r4,r17
10002ac0:	003dcd06 	br	100021f8 <__alt_data_end+0xf80021f8>
10002ac4:	94800c04 	addi	r18,r18,48
10002ac8:	d8c10dc4 	addi	r3,sp,1079
10002acc:	dc810dc5 	stb	r18,1079(sp)
10002ad0:	dc413c17 	ldw	r17,1264(sp)
10002ad4:	d8c13115 	stw	r3,1220(sp)
10002ad8:	003dc706 	br	100021f8 <__alt_data_end+0xf80021f8>
10002adc:	00801944 	movi	r2,101
10002ae0:	1400720e 	bge	r2,r16,10002cac <___vfprintf_internal_r+0x10a0>
10002ae4:	d9013717 	ldw	r4,1244(sp)
10002ae8:	d9413917 	ldw	r5,1252(sp)
10002aec:	000d883a 	mov	r6,zero
10002af0:	000f883a 	mov	r7,zero
10002af4:	d8c13d15 	stw	r3,1268(sp)
10002af8:	da013f15 	stw	r8,1276(sp)
10002afc:	000c2f00 	call	1000c2f0 <__eqdf2>
10002b00:	d8c13d17 	ldw	r3,1268(sp)
10002b04:	da013f17 	ldw	r8,1276(sp)
10002b08:	1000f41e 	bne	r2,zero,10002edc <___vfprintf_internal_r+0x12d0>
10002b0c:	d8811f17 	ldw	r2,1148(sp)
10002b10:	01040074 	movhi	r4,4097
10002b14:	213def04 	addi	r4,r4,-2116
10002b18:	18c00044 	addi	r3,r3,1
10002b1c:	10800044 	addi	r2,r2,1
10002b20:	41000015 	stw	r4,0(r8)
10002b24:	01000044 	movi	r4,1
10002b28:	41000115 	stw	r4,4(r8)
10002b2c:	d8c12015 	stw	r3,1152(sp)
10002b30:	d8811f15 	stw	r2,1148(sp)
10002b34:	010001c4 	movi	r4,7
10002b38:	20828d16 	blt	r4,r2,10003570 <___vfprintf_internal_r+0x1964>
10002b3c:	42000204 	addi	r8,r8,8
10002b40:	d8812617 	ldw	r2,1176(sp)
10002b44:	d9413317 	ldw	r5,1228(sp)
10002b48:	11400216 	blt	r2,r5,10002b54 <___vfprintf_internal_r+0xf48>
10002b4c:	e080004c 	andi	r2,fp,1
10002b50:	103e4126 	beq	r2,zero,10002458 <__alt_data_end+0xf8002458>
10002b54:	d8813817 	ldw	r2,1248(sp)
10002b58:	d9013517 	ldw	r4,1236(sp)
10002b5c:	d9413817 	ldw	r5,1248(sp)
10002b60:	1887883a 	add	r3,r3,r2
10002b64:	d8811f17 	ldw	r2,1148(sp)
10002b68:	41000015 	stw	r4,0(r8)
10002b6c:	41400115 	stw	r5,4(r8)
10002b70:	10800044 	addi	r2,r2,1
10002b74:	d8c12015 	stw	r3,1152(sp)
10002b78:	d8811f15 	stw	r2,1148(sp)
10002b7c:	010001c4 	movi	r4,7
10002b80:	20830916 	blt	r4,r2,100037a8 <___vfprintf_internal_r+0x1b9c>
10002b84:	42000204 	addi	r8,r8,8
10002b88:	d8813317 	ldw	r2,1228(sp)
10002b8c:	143fffc4 	addi	r16,r2,-1
10002b90:	043e310e 	bge	zero,r16,10002458 <__alt_data_end+0xf8002458>
10002b94:	04400404 	movi	r17,16
10002b98:	d8811f17 	ldw	r2,1148(sp)
10002b9c:	8c007e0e 	bge	r17,r16,10002d98 <___vfprintf_internal_r+0x118c>
10002ba0:	01440074 	movhi	r5,4097
10002ba4:	297def84 	addi	r5,r5,-2114
10002ba8:	d9412c15 	stw	r5,1200(sp)
10002bac:	04c001c4 	movi	r19,7
10002bb0:	00000306 	br	10002bc0 <___vfprintf_internal_r+0xfb4>
10002bb4:	42000204 	addi	r8,r8,8
10002bb8:	843ffc04 	addi	r16,r16,-16
10002bbc:	8c00790e 	bge	r17,r16,10002da4 <___vfprintf_internal_r+0x1198>
10002bc0:	18c00404 	addi	r3,r3,16
10002bc4:	10800044 	addi	r2,r2,1
10002bc8:	45000015 	stw	r20,0(r8)
10002bcc:	44400115 	stw	r17,4(r8)
10002bd0:	d8c12015 	stw	r3,1152(sp)
10002bd4:	d8811f15 	stw	r2,1148(sp)
10002bd8:	98bff60e 	bge	r19,r2,10002bb4 <__alt_data_end+0xf8002bb4>
10002bdc:	b809883a 	mov	r4,r23
10002be0:	b00b883a 	mov	r5,r22
10002be4:	d9811e04 	addi	r6,sp,1144
10002be8:	000904c0 	call	1000904c <__sprint_r>
10002bec:	103d1f1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002bf0:	d8c12017 	ldw	r3,1152(sp)
10002bf4:	d8811f17 	ldw	r2,1148(sp)
10002bf8:	da000404 	addi	r8,sp,16
10002bfc:	003fee06 	br	10002bb8 <__alt_data_end+0xf8002bb8>
10002c00:	d9412e17 	ldw	r5,1208(sp)
10002c04:	d8812b17 	ldw	r2,1196(sp)
10002c08:	28a7c83a 	sub	r19,r5,r2
10002c0c:	04fddc0e 	bge	zero,r19,10002380 <__alt_data_end+0xf8002380>
10002c10:	05400404 	movi	r21,16
10002c14:	d8811f17 	ldw	r2,1148(sp)
10002c18:	acc3870e 	bge	r21,r19,10003a38 <___vfprintf_internal_r+0x1e2c>
10002c1c:	01440074 	movhi	r5,4097
10002c20:	297def84 	addi	r5,r5,-2114
10002c24:	d9412c15 	stw	r5,1200(sp)
10002c28:	048001c4 	movi	r18,7
10002c2c:	00000306 	br	10002c3c <___vfprintf_internal_r+0x1030>
10002c30:	9cfffc04 	addi	r19,r19,-16
10002c34:	42000204 	addi	r8,r8,8
10002c38:	acc0110e 	bge	r21,r19,10002c80 <___vfprintf_internal_r+0x1074>
10002c3c:	18c00404 	addi	r3,r3,16
10002c40:	10800044 	addi	r2,r2,1
10002c44:	45000015 	stw	r20,0(r8)
10002c48:	45400115 	stw	r21,4(r8)
10002c4c:	d8c12015 	stw	r3,1152(sp)
10002c50:	d8811f15 	stw	r2,1148(sp)
10002c54:	90bff60e 	bge	r18,r2,10002c30 <__alt_data_end+0xf8002c30>
10002c58:	b809883a 	mov	r4,r23
10002c5c:	b00b883a 	mov	r5,r22
10002c60:	d9811e04 	addi	r6,sp,1144
10002c64:	000904c0 	call	1000904c <__sprint_r>
10002c68:	103d001e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002c6c:	9cfffc04 	addi	r19,r19,-16
10002c70:	d8c12017 	ldw	r3,1152(sp)
10002c74:	d8811f17 	ldw	r2,1148(sp)
10002c78:	da000404 	addi	r8,sp,16
10002c7c:	acffef16 	blt	r21,r19,10002c3c <__alt_data_end+0xf8002c3c>
10002c80:	d9012c17 	ldw	r4,1200(sp)
10002c84:	1cc7883a 	add	r3,r3,r19
10002c88:	10800044 	addi	r2,r2,1
10002c8c:	41000015 	stw	r4,0(r8)
10002c90:	44c00115 	stw	r19,4(r8)
10002c94:	d8c12015 	stw	r3,1152(sp)
10002c98:	d8811f15 	stw	r2,1148(sp)
10002c9c:	010001c4 	movi	r4,7
10002ca0:	20817816 	blt	r4,r2,10003284 <___vfprintf_internal_r+0x1678>
10002ca4:	42000204 	addi	r8,r8,8
10002ca8:	003db506 	br	10002380 <__alt_data_end+0xf8002380>
10002cac:	d9413317 	ldw	r5,1228(sp)
10002cb0:	00800044 	movi	r2,1
10002cb4:	18c00044 	addi	r3,r3,1
10002cb8:	11413e0e 	bge	r2,r5,100031b4 <___vfprintf_internal_r+0x15a8>
10002cbc:	dc011f17 	ldw	r16,1148(sp)
10002cc0:	d8813117 	ldw	r2,1220(sp)
10002cc4:	d8c12015 	stw	r3,1152(sp)
10002cc8:	84000044 	addi	r16,r16,1
10002ccc:	40800015 	stw	r2,0(r8)
10002cd0:	00800044 	movi	r2,1
10002cd4:	40800115 	stw	r2,4(r8)
10002cd8:	dc011f15 	stw	r16,1148(sp)
10002cdc:	008001c4 	movi	r2,7
10002ce0:	14015616 	blt	r2,r16,1000323c <___vfprintf_internal_r+0x1630>
10002ce4:	42000204 	addi	r8,r8,8
10002ce8:	d9013817 	ldw	r4,1248(sp)
10002cec:	d9413517 	ldw	r5,1236(sp)
10002cf0:	84000044 	addi	r16,r16,1
10002cf4:	1907883a 	add	r3,r3,r4
10002cf8:	41400015 	stw	r5,0(r8)
10002cfc:	41000115 	stw	r4,4(r8)
10002d00:	d8c12015 	stw	r3,1152(sp)
10002d04:	dc011f15 	stw	r16,1148(sp)
10002d08:	008001c4 	movi	r2,7
10002d0c:	14015416 	blt	r2,r16,10003260 <___vfprintf_internal_r+0x1654>
10002d10:	44400204 	addi	r17,r8,8
10002d14:	d9013717 	ldw	r4,1244(sp)
10002d18:	d9413917 	ldw	r5,1252(sp)
10002d1c:	000d883a 	mov	r6,zero
10002d20:	000f883a 	mov	r7,zero
10002d24:	d8c13d15 	stw	r3,1268(sp)
10002d28:	000c2f00 	call	1000c2f0 <__eqdf2>
10002d2c:	d8c13d17 	ldw	r3,1268(sp)
10002d30:	1000a726 	beq	r2,zero,10002fd0 <___vfprintf_internal_r+0x13c4>
10002d34:	d9013317 	ldw	r4,1228(sp)
10002d38:	d9413117 	ldw	r5,1220(sp)
10002d3c:	84000044 	addi	r16,r16,1
10002d40:	20bfffc4 	addi	r2,r4,-1
10002d44:	1887883a 	add	r3,r3,r2
10002d48:	29000044 	addi	r4,r5,1
10002d4c:	88800115 	stw	r2,4(r17)
10002d50:	89000015 	stw	r4,0(r17)
10002d54:	d8c12015 	stw	r3,1152(sp)
10002d58:	dc011f15 	stw	r16,1148(sp)
10002d5c:	008001c4 	movi	r2,7
10002d60:	14012d16 	blt	r2,r16,10003218 <___vfprintf_internal_r+0x160c>
10002d64:	8c400204 	addi	r17,r17,8
10002d68:	d9413a17 	ldw	r5,1256(sp)
10002d6c:	dcc122c4 	addi	r19,sp,1163
10002d70:	84000044 	addi	r16,r16,1
10002d74:	28c7883a 	add	r3,r5,r3
10002d78:	8cc00015 	stw	r19,0(r17)
10002d7c:	89400115 	stw	r5,4(r17)
10002d80:	d8c12015 	stw	r3,1152(sp)
10002d84:	dc011f15 	stw	r16,1148(sp)
10002d88:	008001c4 	movi	r2,7
10002d8c:	14000e16 	blt	r2,r16,10002dc8 <___vfprintf_internal_r+0x11bc>
10002d90:	8a000204 	addi	r8,r17,8
10002d94:	003db006 	br	10002458 <__alt_data_end+0xf8002458>
10002d98:	01040074 	movhi	r4,4097
10002d9c:	213def84 	addi	r4,r4,-2114
10002da0:	d9012c15 	stw	r4,1200(sp)
10002da4:	d9012c17 	ldw	r4,1200(sp)
10002da8:	1c07883a 	add	r3,r3,r16
10002dac:	44000115 	stw	r16,4(r8)
10002db0:	41000015 	stw	r4,0(r8)
10002db4:	10800044 	addi	r2,r2,1
10002db8:	d8c12015 	stw	r3,1152(sp)
10002dbc:	d8811f15 	stw	r2,1148(sp)
10002dc0:	010001c4 	movi	r4,7
10002dc4:	20bda30e 	bge	r4,r2,10002454 <__alt_data_end+0xf8002454>
10002dc8:	b809883a 	mov	r4,r23
10002dcc:	b00b883a 	mov	r5,r22
10002dd0:	d9811e04 	addi	r6,sp,1144
10002dd4:	000904c0 	call	1000904c <__sprint_r>
10002dd8:	103ca41e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002ddc:	d8c12017 	ldw	r3,1152(sp)
10002de0:	da000404 	addi	r8,sp,16
10002de4:	003d9c06 	br	10002458 <__alt_data_end+0xf8002458>
10002de8:	b809883a 	mov	r4,r23
10002dec:	b00b883a 	mov	r5,r22
10002df0:	d9811e04 	addi	r6,sp,1144
10002df4:	000904c0 	call	1000904c <__sprint_r>
10002df8:	103dd226 	beq	r2,zero,10002544 <__alt_data_end+0xf8002544>
10002dfc:	003c9b06 	br	1000206c <__alt_data_end+0xf800206c>
10002e00:	10803fcc 	andi	r2,r2,255
10002e04:	1000311e 	bne	r2,zero,10002ecc <___vfprintf_internal_r+0x12c0>
10002e08:	e080004c 	andi	r2,fp,1
10002e0c:	10002f26 	beq	r2,zero,10002ecc <___vfprintf_internal_r+0x12c0>
10002e10:	00800c04 	movi	r2,48
10002e14:	d8c10dc4 	addi	r3,sp,1079
10002e18:	d8810dc5 	stb	r2,1079(sp)
10002e1c:	dc413c17 	ldw	r17,1264(sp)
10002e20:	d8c13115 	stw	r3,1220(sp)
10002e24:	003cf406 	br	100021f8 <__alt_data_end+0xf80021f8>
10002e28:	b809883a 	mov	r4,r23
10002e2c:	b00b883a 	mov	r5,r22
10002e30:	d9811e04 	addi	r6,sp,1144
10002e34:	000904c0 	call	1000904c <__sprint_r>
10002e38:	103c8c1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002e3c:	d8c12017 	ldw	r3,1152(sp)
10002e40:	da000404 	addi	r8,sp,16
10002e44:	003d7706 	br	10002424 <__alt_data_end+0xf8002424>
10002e48:	b809883a 	mov	r4,r23
10002e4c:	b00b883a 	mov	r5,r22
10002e50:	d9811e04 	addi	r6,sp,1144
10002e54:	000904c0 	call	1000904c <__sprint_r>
10002e58:	103c841e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002e5c:	d8c12017 	ldw	r3,1152(sp)
10002e60:	da000404 	addi	r8,sp,16
10002e64:	003d3506 	br	1000233c <__alt_data_end+0xf800233c>
10002e68:	b809883a 	mov	r4,r23
10002e6c:	b00b883a 	mov	r5,r22
10002e70:	d9811e04 	addi	r6,sp,1144
10002e74:	000904c0 	call	1000904c <__sprint_r>
10002e78:	103c7c1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002e7c:	d8c12017 	ldw	r3,1152(sp)
10002e80:	da000404 	addi	r8,sp,16
10002e84:	003d3b06 	br	10002374 <__alt_data_end+0xf8002374>
10002e88:	d9413b17 	ldw	r5,1260(sp)
10002e8c:	d8c10e04 	addi	r3,sp,1080
10002e90:	908003cc 	andi	r2,r18,15
10002e94:	a808973a 	slli	r4,r21,28
10002e98:	2885883a 	add	r2,r5,r2
10002e9c:	9024d13a 	srli	r18,r18,4
10002ea0:	10800003 	ldbu	r2,0(r2)
10002ea4:	a82ad13a 	srli	r21,r21,4
10002ea8:	18ffffc4 	addi	r3,r3,-1
10002eac:	24a4b03a 	or	r18,r4,r18
10002eb0:	18800005 	stb	r2,0(r3)
10002eb4:	9544b03a 	or	r2,r18,r21
10002eb8:	103ff51e 	bne	r2,zero,10002e90 <__alt_data_end+0xf8002e90>
10002ebc:	d9412817 	ldw	r5,1184(sp)
10002ec0:	d8c13115 	stw	r3,1220(sp)
10002ec4:	28e3c83a 	sub	r17,r5,r3
10002ec8:	003ccb06 	br	100021f8 <__alt_data_end+0xf80021f8>
10002ecc:	d8c10e04 	addi	r3,sp,1080
10002ed0:	0023883a 	mov	r17,zero
10002ed4:	d8c13115 	stw	r3,1220(sp)
10002ed8:	003cc706 	br	100021f8 <__alt_data_end+0xf80021f8>
10002edc:	dc012617 	ldw	r16,1176(sp)
10002ee0:	0401ab0e 	bge	zero,r16,10003590 <___vfprintf_internal_r+0x1984>
10002ee4:	d8813317 	ldw	r2,1228(sp)
10002ee8:	d9413117 	ldw	r5,1220(sp)
10002eec:	d9013417 	ldw	r4,1232(sp)
10002ef0:	1023883a 	mov	r17,r2
10002ef4:	28a1883a 	add	r16,r5,r2
10002ef8:	2080010e 	bge	r4,r2,10002f00 <___vfprintf_internal_r+0x12f4>
10002efc:	2023883a 	mov	r17,r4
10002f00:	04400b0e 	bge	zero,r17,10002f30 <___vfprintf_internal_r+0x1324>
10002f04:	d8811f17 	ldw	r2,1148(sp)
10002f08:	d9413117 	ldw	r5,1220(sp)
10002f0c:	1c47883a 	add	r3,r3,r17
10002f10:	10800044 	addi	r2,r2,1
10002f14:	41400015 	stw	r5,0(r8)
10002f18:	44400115 	stw	r17,4(r8)
10002f1c:	d8c12015 	stw	r3,1152(sp)
10002f20:	d8811f15 	stw	r2,1148(sp)
10002f24:	010001c4 	movi	r4,7
10002f28:	20826716 	blt	r4,r2,100038c8 <___vfprintf_internal_r+0x1cbc>
10002f2c:	42000204 	addi	r8,r8,8
10002f30:	88026316 	blt	r17,zero,100038c0 <___vfprintf_internal_r+0x1cb4>
10002f34:	d8813417 	ldw	r2,1232(sp)
10002f38:	1463c83a 	sub	r17,r2,r17
10002f3c:	0440590e 	bge	zero,r17,100030a4 <___vfprintf_internal_r+0x1498>
10002f40:	04c00404 	movi	r19,16
10002f44:	d8811f17 	ldw	r2,1148(sp)
10002f48:	9c41770e 	bge	r19,r17,10003528 <___vfprintf_internal_r+0x191c>
10002f4c:	01440074 	movhi	r5,4097
10002f50:	297def84 	addi	r5,r5,-2114
10002f54:	d9412c15 	stw	r5,1200(sp)
10002f58:	054001c4 	movi	r21,7
10002f5c:	00000306 	br	10002f6c <___vfprintf_internal_r+0x1360>
10002f60:	42000204 	addi	r8,r8,8
10002f64:	8c7ffc04 	addi	r17,r17,-16
10002f68:	9c41720e 	bge	r19,r17,10003534 <___vfprintf_internal_r+0x1928>
10002f6c:	18c00404 	addi	r3,r3,16
10002f70:	10800044 	addi	r2,r2,1
10002f74:	45000015 	stw	r20,0(r8)
10002f78:	44c00115 	stw	r19,4(r8)
10002f7c:	d8c12015 	stw	r3,1152(sp)
10002f80:	d8811f15 	stw	r2,1148(sp)
10002f84:	a8bff60e 	bge	r21,r2,10002f60 <__alt_data_end+0xf8002f60>
10002f88:	b809883a 	mov	r4,r23
10002f8c:	b00b883a 	mov	r5,r22
10002f90:	d9811e04 	addi	r6,sp,1144
10002f94:	000904c0 	call	1000904c <__sprint_r>
10002f98:	103c341e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002f9c:	d8c12017 	ldw	r3,1152(sp)
10002fa0:	d8811f17 	ldw	r2,1148(sp)
10002fa4:	da000404 	addi	r8,sp,16
10002fa8:	003fee06 	br	10002f64 <__alt_data_end+0xf8002f64>
10002fac:	b809883a 	mov	r4,r23
10002fb0:	b00b883a 	mov	r5,r22
10002fb4:	d9811e04 	addi	r6,sp,1144
10002fb8:	000904c0 	call	1000904c <__sprint_r>
10002fbc:	103c2b1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10002fc0:	d8c12017 	ldw	r3,1152(sp)
10002fc4:	d8812787 	ldb	r2,1182(sp)
10002fc8:	da000404 	addi	r8,sp,16
10002fcc:	003cce06 	br	10002308 <__alt_data_end+0xf8002308>
10002fd0:	d8813317 	ldw	r2,1228(sp)
10002fd4:	14ffffc4 	addi	r19,r2,-1
10002fd8:	04ff630e 	bge	zero,r19,10002d68 <__alt_data_end+0xf8002d68>
10002fdc:	05400404 	movi	r21,16
10002fe0:	acc0810e 	bge	r21,r19,100031e8 <___vfprintf_internal_r+0x15dc>
10002fe4:	01440074 	movhi	r5,4097
10002fe8:	297def84 	addi	r5,r5,-2114
10002fec:	d9412c15 	stw	r5,1200(sp)
10002ff0:	01c001c4 	movi	r7,7
10002ff4:	00000306 	br	10003004 <___vfprintf_internal_r+0x13f8>
10002ff8:	8c400204 	addi	r17,r17,8
10002ffc:	9cfffc04 	addi	r19,r19,-16
10003000:	acc07c0e 	bge	r21,r19,100031f4 <___vfprintf_internal_r+0x15e8>
10003004:	18c00404 	addi	r3,r3,16
10003008:	84000044 	addi	r16,r16,1
1000300c:	8d000015 	stw	r20,0(r17)
10003010:	8d400115 	stw	r21,4(r17)
10003014:	d8c12015 	stw	r3,1152(sp)
10003018:	dc011f15 	stw	r16,1148(sp)
1000301c:	3c3ff60e 	bge	r7,r16,10002ff8 <__alt_data_end+0xf8002ff8>
10003020:	b809883a 	mov	r4,r23
10003024:	b00b883a 	mov	r5,r22
10003028:	d9811e04 	addi	r6,sp,1144
1000302c:	d9c13d15 	stw	r7,1268(sp)
10003030:	000904c0 	call	1000904c <__sprint_r>
10003034:	d9c13d17 	ldw	r7,1268(sp)
10003038:	103c0c1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
1000303c:	d8c12017 	ldw	r3,1152(sp)
10003040:	dc011f17 	ldw	r16,1148(sp)
10003044:	dc400404 	addi	r17,sp,16
10003048:	003fec06 	br	10002ffc <__alt_data_end+0xf8002ffc>
1000304c:	00800084 	movi	r2,2
10003050:	9546b03a 	or	r3,r18,r21
10003054:	003d7d06 	br	1000264c <__alt_data_end+0xf800264c>
10003058:	10803fcc 	andi	r2,r2,255
1000305c:	1080201c 	xori	r2,r2,128
10003060:	10bfe004 	addi	r2,r2,-128
10003064:	01000c04 	movi	r4,48
10003068:	1101d726 	beq	r2,r4,100037c8 <___vfprintf_internal_r+0x1bbc>
1000306c:	d9413117 	ldw	r5,1220(sp)
10003070:	d8812817 	ldw	r2,1184(sp)
10003074:	193fffc5 	stb	r4,-1(r3)
10003078:	297fffc4 	addi	r5,r5,-1
1000307c:	d9413115 	stw	r5,1220(sp)
10003080:	1163c83a 	sub	r17,r2,r5
10003084:	003c5c06 	br	100021f8 <__alt_data_end+0xf80021f8>
10003088:	b809883a 	mov	r4,r23
1000308c:	b00b883a 	mov	r5,r22
10003090:	d9811e04 	addi	r6,sp,1144
10003094:	000904c0 	call	1000904c <__sprint_r>
10003098:	103bf41e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
1000309c:	d8c12017 	ldw	r3,1152(sp)
100030a0:	da000404 	addi	r8,sp,16
100030a4:	d9413117 	ldw	r5,1220(sp)
100030a8:	d9013417 	ldw	r4,1232(sp)
100030ac:	d8812617 	ldw	r2,1176(sp)
100030b0:	2923883a 	add	r17,r5,r4
100030b4:	d9413317 	ldw	r5,1228(sp)
100030b8:	11400216 	blt	r2,r5,100030c4 <___vfprintf_internal_r+0x14b8>
100030bc:	e100004c 	andi	r4,fp,1
100030c0:	20000d26 	beq	r4,zero,100030f8 <___vfprintf_internal_r+0x14ec>
100030c4:	d9013817 	ldw	r4,1248(sp)
100030c8:	d9413517 	ldw	r5,1236(sp)
100030cc:	1907883a 	add	r3,r3,r4
100030d0:	d9011f17 	ldw	r4,1148(sp)
100030d4:	41400015 	stw	r5,0(r8)
100030d8:	d9413817 	ldw	r5,1248(sp)
100030dc:	21000044 	addi	r4,r4,1
100030e0:	d8c12015 	stw	r3,1152(sp)
100030e4:	41400115 	stw	r5,4(r8)
100030e8:	d9011f15 	stw	r4,1148(sp)
100030ec:	014001c4 	movi	r5,7
100030f0:	2901fd16 	blt	r5,r4,100038e8 <___vfprintf_internal_r+0x1cdc>
100030f4:	42000204 	addi	r8,r8,8
100030f8:	d9013317 	ldw	r4,1228(sp)
100030fc:	2085c83a 	sub	r2,r4,r2
10003100:	8449c83a 	sub	r4,r16,r17
10003104:	1021883a 	mov	r16,r2
10003108:	2080010e 	bge	r4,r2,10003110 <___vfprintf_internal_r+0x1504>
1000310c:	2021883a 	mov	r16,r4
10003110:	04000a0e 	bge	zero,r16,1000313c <___vfprintf_internal_r+0x1530>
10003114:	d9011f17 	ldw	r4,1148(sp)
10003118:	1c07883a 	add	r3,r3,r16
1000311c:	44400015 	stw	r17,0(r8)
10003120:	21000044 	addi	r4,r4,1
10003124:	44000115 	stw	r16,4(r8)
10003128:	d8c12015 	stw	r3,1152(sp)
1000312c:	d9011f15 	stw	r4,1148(sp)
10003130:	014001c4 	movi	r5,7
10003134:	29020916 	blt	r5,r4,1000395c <___vfprintf_internal_r+0x1d50>
10003138:	42000204 	addi	r8,r8,8
1000313c:	80020116 	blt	r16,zero,10003944 <___vfprintf_internal_r+0x1d38>
10003140:	1421c83a 	sub	r16,r2,r16
10003144:	043cc40e 	bge	zero,r16,10002458 <__alt_data_end+0xf8002458>
10003148:	04400404 	movi	r17,16
1000314c:	d8811f17 	ldw	r2,1148(sp)
10003150:	8c3f110e 	bge	r17,r16,10002d98 <__alt_data_end+0xf8002d98>
10003154:	01440074 	movhi	r5,4097
10003158:	297def84 	addi	r5,r5,-2114
1000315c:	d9412c15 	stw	r5,1200(sp)
10003160:	04c001c4 	movi	r19,7
10003164:	00000306 	br	10003174 <___vfprintf_internal_r+0x1568>
10003168:	42000204 	addi	r8,r8,8
1000316c:	843ffc04 	addi	r16,r16,-16
10003170:	8c3f0c0e 	bge	r17,r16,10002da4 <__alt_data_end+0xf8002da4>
10003174:	18c00404 	addi	r3,r3,16
10003178:	10800044 	addi	r2,r2,1
1000317c:	45000015 	stw	r20,0(r8)
10003180:	44400115 	stw	r17,4(r8)
10003184:	d8c12015 	stw	r3,1152(sp)
10003188:	d8811f15 	stw	r2,1148(sp)
1000318c:	98bff60e 	bge	r19,r2,10003168 <__alt_data_end+0xf8003168>
10003190:	b809883a 	mov	r4,r23
10003194:	b00b883a 	mov	r5,r22
10003198:	d9811e04 	addi	r6,sp,1144
1000319c:	000904c0 	call	1000904c <__sprint_r>
100031a0:	103bb21e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100031a4:	d8c12017 	ldw	r3,1152(sp)
100031a8:	d8811f17 	ldw	r2,1148(sp)
100031ac:	da000404 	addi	r8,sp,16
100031b0:	003fee06 	br	1000316c <__alt_data_end+0xf800316c>
100031b4:	e088703a 	and	r4,fp,r2
100031b8:	203ec01e 	bne	r4,zero,10002cbc <__alt_data_end+0xf8002cbc>
100031bc:	dc011f17 	ldw	r16,1148(sp)
100031c0:	d9013117 	ldw	r4,1220(sp)
100031c4:	40800115 	stw	r2,4(r8)
100031c8:	84000044 	addi	r16,r16,1
100031cc:	41000015 	stw	r4,0(r8)
100031d0:	d8c12015 	stw	r3,1152(sp)
100031d4:	dc011f15 	stw	r16,1148(sp)
100031d8:	008001c4 	movi	r2,7
100031dc:	14000e16 	blt	r2,r16,10003218 <___vfprintf_internal_r+0x160c>
100031e0:	44400204 	addi	r17,r8,8
100031e4:	003ee006 	br	10002d68 <__alt_data_end+0xf8002d68>
100031e8:	01040074 	movhi	r4,4097
100031ec:	213def84 	addi	r4,r4,-2114
100031f0:	d9012c15 	stw	r4,1200(sp)
100031f4:	d8812c17 	ldw	r2,1200(sp)
100031f8:	1cc7883a 	add	r3,r3,r19
100031fc:	84000044 	addi	r16,r16,1
10003200:	88800015 	stw	r2,0(r17)
10003204:	8cc00115 	stw	r19,4(r17)
10003208:	d8c12015 	stw	r3,1152(sp)
1000320c:	dc011f15 	stw	r16,1148(sp)
10003210:	008001c4 	movi	r2,7
10003214:	143ed30e 	bge	r2,r16,10002d64 <__alt_data_end+0xf8002d64>
10003218:	b809883a 	mov	r4,r23
1000321c:	b00b883a 	mov	r5,r22
10003220:	d9811e04 	addi	r6,sp,1144
10003224:	000904c0 	call	1000904c <__sprint_r>
10003228:	103b901e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
1000322c:	d8c12017 	ldw	r3,1152(sp)
10003230:	dc011f17 	ldw	r16,1148(sp)
10003234:	dc400404 	addi	r17,sp,16
10003238:	003ecb06 	br	10002d68 <__alt_data_end+0xf8002d68>
1000323c:	b809883a 	mov	r4,r23
10003240:	b00b883a 	mov	r5,r22
10003244:	d9811e04 	addi	r6,sp,1144
10003248:	000904c0 	call	1000904c <__sprint_r>
1000324c:	103b871e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003250:	d8c12017 	ldw	r3,1152(sp)
10003254:	dc011f17 	ldw	r16,1148(sp)
10003258:	da000404 	addi	r8,sp,16
1000325c:	003ea206 	br	10002ce8 <__alt_data_end+0xf8002ce8>
10003260:	b809883a 	mov	r4,r23
10003264:	b00b883a 	mov	r5,r22
10003268:	d9811e04 	addi	r6,sp,1144
1000326c:	000904c0 	call	1000904c <__sprint_r>
10003270:	103b7e1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003274:	d8c12017 	ldw	r3,1152(sp)
10003278:	dc011f17 	ldw	r16,1148(sp)
1000327c:	dc400404 	addi	r17,sp,16
10003280:	003ea406 	br	10002d14 <__alt_data_end+0xf8002d14>
10003284:	b809883a 	mov	r4,r23
10003288:	b00b883a 	mov	r5,r22
1000328c:	d9811e04 	addi	r6,sp,1144
10003290:	000904c0 	call	1000904c <__sprint_r>
10003294:	103b751e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003298:	d8c12017 	ldw	r3,1152(sp)
1000329c:	da000404 	addi	r8,sp,16
100032a0:	003c3706 	br	10002380 <__alt_data_end+0xf8002380>
100032a4:	04a5c83a 	sub	r18,zero,r18
100032a8:	9004c03a 	cmpne	r2,r18,zero
100032ac:	056bc83a 	sub	r21,zero,r21
100032b0:	a8abc83a 	sub	r21,r21,r2
100032b4:	04c00b44 	movi	r19,45
100032b8:	dcc12785 	stb	r19,1182(sp)
100032bc:	da413215 	stw	r9,1224(sp)
100032c0:	00800044 	movi	r2,1
100032c4:	9546b03a 	or	r3,r18,r21
100032c8:	003bb106 	br	10002190 <__alt_data_end+0xf8002190>
100032cc:	da013f15 	stw	r8,1276(sp)
100032d0:	da413e15 	stw	r9,1272(sp)
100032d4:	0008ca80 	call	10008ca8 <__fpclassifyd>
100032d8:	da013f17 	ldw	r8,1276(sp)
100032dc:	da413e17 	ldw	r9,1272(sp)
100032e0:	1000e526 	beq	r2,zero,10003678 <___vfprintf_internal_r+0x1a6c>
100032e4:	04fff7c4 	movi	r19,-33
100032e8:	00bfffc4 	movi	r2,-1
100032ec:	84e6703a 	and	r19,r16,r19
100032f0:	48822926 	beq	r9,r2,10003b98 <___vfprintf_internal_r+0x1f8c>
100032f4:	008011c4 	movi	r2,71
100032f8:	98821626 	beq	r19,r2,10003b54 <___vfprintf_internal_r+0x1f48>
100032fc:	d9013917 	ldw	r4,1252(sp)
10003300:	e0c04014 	ori	r3,fp,256
10003304:	d8c12d15 	stw	r3,1204(sp)
10003308:	20021f16 	blt	r4,zero,10003b88 <___vfprintf_internal_r+0x1f7c>
1000330c:	dc413917 	ldw	r17,1252(sp)
10003310:	d8012b05 	stb	zero,1196(sp)
10003314:	00801984 	movi	r2,102
10003318:	80814d26 	beq	r16,r2,10003850 <___vfprintf_internal_r+0x1c44>
1000331c:	00801184 	movi	r2,70
10003320:	80814b26 	beq	r16,r2,10003850 <___vfprintf_internal_r+0x1c44>
10003324:	00801144 	movi	r2,69
10003328:	98821d26 	beq	r19,r2,10003ba0 <___vfprintf_internal_r+0x1f94>
1000332c:	482b883a 	mov	r21,r9
10003330:	d8812604 	addi	r2,sp,1176
10003334:	d8800115 	stw	r2,4(sp)
10003338:	d9413717 	ldw	r5,1244(sp)
1000333c:	d8812504 	addi	r2,sp,1172
10003340:	d8800215 	stw	r2,8(sp)
10003344:	d8812104 	addi	r2,sp,1156
10003348:	dd400015 	stw	r21,0(sp)
1000334c:	d8800315 	stw	r2,12(sp)
10003350:	b809883a 	mov	r4,r23
10003354:	880d883a 	mov	r6,r17
10003358:	01c00084 	movi	r7,2
1000335c:	da013f15 	stw	r8,1276(sp)
10003360:	da413e15 	stw	r9,1272(sp)
10003364:	00040840 	call	10004084 <_dtoa_r>
10003368:	d8813115 	stw	r2,1220(sp)
1000336c:	008019c4 	movi	r2,103
10003370:	da013f17 	ldw	r8,1276(sp)
10003374:	da413e17 	ldw	r9,1272(sp)
10003378:	80800226 	beq	r16,r2,10003384 <___vfprintf_internal_r+0x1778>
1000337c:	008011c4 	movi	r2,71
10003380:	8081451e 	bne	r16,r2,10003898 <___vfprintf_internal_r+0x1c8c>
10003384:	e080004c 	andi	r2,fp,1
10003388:	10021e26 	beq	r2,zero,10003c04 <___vfprintf_internal_r+0x1ff8>
1000338c:	d8c13117 	ldw	r3,1220(sp)
10003390:	1d55883a 	add	r10,r3,r21
10003394:	d9013717 	ldw	r4,1244(sp)
10003398:	880b883a 	mov	r5,r17
1000339c:	000d883a 	mov	r6,zero
100033a0:	000f883a 	mov	r7,zero
100033a4:	da013f15 	stw	r8,1276(sp)
100033a8:	da413e15 	stw	r9,1272(sp)
100033ac:	da813d15 	stw	r10,1268(sp)
100033b0:	000c2f00 	call	1000c2f0 <__eqdf2>
100033b4:	da013f17 	ldw	r8,1276(sp)
100033b8:	da413e17 	ldw	r9,1272(sp)
100033bc:	da813d17 	ldw	r10,1268(sp)
100033c0:	1001a126 	beq	r2,zero,10003a48 <___vfprintf_internal_r+0x1e3c>
100033c4:	d8812117 	ldw	r2,1156(sp)
100033c8:	1280062e 	bgeu	r2,r10,100033e4 <___vfprintf_internal_r+0x17d8>
100033cc:	01000c04 	movi	r4,48
100033d0:	10c00044 	addi	r3,r2,1
100033d4:	d8c12115 	stw	r3,1156(sp)
100033d8:	11000005 	stb	r4,0(r2)
100033dc:	d8812117 	ldw	r2,1156(sp)
100033e0:	12bffb36 	bltu	r2,r10,100033d0 <__alt_data_end+0xf80033d0>
100033e4:	d8c13117 	ldw	r3,1220(sp)
100033e8:	10c5c83a 	sub	r2,r2,r3
100033ec:	d8813315 	stw	r2,1228(sp)
100033f0:	008011c4 	movi	r2,71
100033f4:	98818926 	beq	r19,r2,10003a1c <___vfprintf_internal_r+0x1e10>
100033f8:	00801944 	movi	r2,101
100033fc:	14023c0e 	bge	r2,r16,10003cf0 <___vfprintf_internal_r+0x20e4>
10003400:	d8c12617 	ldw	r3,1176(sp)
10003404:	00801984 	movi	r2,102
10003408:	d8c13415 	stw	r3,1232(sp)
1000340c:	8081ef26 	beq	r16,r2,10003bcc <___vfprintf_internal_r+0x1fc0>
10003410:	d8c13417 	ldw	r3,1232(sp)
10003414:	d9013317 	ldw	r4,1228(sp)
10003418:	1901e316 	blt	r3,r4,10003ba8 <___vfprintf_internal_r+0x1f9c>
1000341c:	e080004c 	andi	r2,fp,1
10003420:	1001f426 	beq	r2,zero,10003bf4 <___vfprintf_internal_r+0x1fe8>
10003424:	d8c13417 	ldw	r3,1232(sp)
10003428:	1c400044 	addi	r17,r3,1
1000342c:	8839883a 	mov	fp,r17
10003430:	8801e416 	blt	r17,zero,10003bc4 <___vfprintf_internal_r+0x1fb8>
10003434:	dd412b07 	ldb	r21,1196(sp)
10003438:	a801701e 	bne	r21,zero,100039fc <___vfprintf_internal_r+0x1df0>
1000343c:	df012b15 	stw	fp,1196(sp)
10003440:	dcc12783 	ldbu	r19,1182(sp)
10003444:	df012d17 	ldw	fp,1204(sp)
10003448:	d8013215 	stw	zero,1224(sp)
1000344c:	dc812d15 	stw	r18,1204(sp)
10003450:	003b6e06 	br	1000220c <__alt_data_end+0xf800220c>
10003454:	e080040c 	andi	r2,fp,16
10003458:	1000b51e 	bne	r2,zero,10003730 <___vfprintf_internal_r+0x1b24>
1000345c:	e080100c 	andi	r2,fp,64
10003460:	10015b26 	beq	r2,zero,100039d0 <___vfprintf_internal_r+0x1dc4>
10003464:	d9012d17 	ldw	r4,1204(sp)
10003468:	d9412f17 	ldw	r5,1212(sp)
1000346c:	20800017 	ldw	r2,0(r4)
10003470:	21000104 	addi	r4,r4,4
10003474:	d9012d15 	stw	r4,1204(sp)
10003478:	1140000d 	sth	r5,0(r2)
1000347c:	003a2006 	br	10001d00 <__alt_data_end+0xf8001d00>
10003480:	e0c0100c 	andi	r3,fp,64
10003484:	1800a226 	beq	r3,zero,10003710 <___vfprintf_internal_r+0x1b04>
10003488:	d8c12d17 	ldw	r3,1204(sp)
1000348c:	1480000b 	ldhu	r18,0(r2)
10003490:	002b883a 	mov	r21,zero
10003494:	18c00104 	addi	r3,r3,4
10003498:	d8c12d15 	stw	r3,1204(sp)
1000349c:	0005883a 	mov	r2,zero
100034a0:	9007883a 	mov	r3,r18
100034a4:	003c6906 	br	1000264c <__alt_data_end+0xf800264c>
100034a8:	e0c0100c 	andi	r3,fp,64
100034ac:	18009026 	beq	r3,zero,100036f0 <___vfprintf_internal_r+0x1ae4>
100034b0:	1480000b 	ldhu	r18,0(r2)
100034b4:	d8812d17 	ldw	r2,1204(sp)
100034b8:	002b883a 	mov	r21,zero
100034bc:	9007883a 	mov	r3,r18
100034c0:	10800104 	addi	r2,r2,4
100034c4:	d8812d15 	stw	r2,1204(sp)
100034c8:	00800044 	movi	r2,1
100034cc:	003c5f06 	br	1000264c <__alt_data_end+0xf800264c>
100034d0:	e0c0100c 	andi	r3,fp,64
100034d4:	18008026 	beq	r3,zero,100036d8 <___vfprintf_internal_r+0x1acc>
100034d8:	d9012d17 	ldw	r4,1204(sp)
100034dc:	1480000b 	ldhu	r18,0(r2)
100034e0:	002b883a 	mov	r21,zero
100034e4:	21000104 	addi	r4,r4,4
100034e8:	d9012d15 	stw	r4,1204(sp)
100034ec:	003c7906 	br	100026d4 <__alt_data_end+0xf80026d4>
100034f0:	e080100c 	andi	r2,fp,64
100034f4:	10007126 	beq	r2,zero,100036bc <___vfprintf_internal_r+0x1ab0>
100034f8:	1c80000f 	ldh	r18,0(r3)
100034fc:	d8812d17 	ldw	r2,1204(sp)
10003500:	902bd7fa 	srai	r21,r18,31
10003504:	10800104 	addi	r2,r2,4
10003508:	d8812d15 	stw	r2,1204(sp)
1000350c:	a805883a 	mov	r2,r21
10003510:	003b1a06 	br	1000217c <__alt_data_end+0xf800217c>
10003514:	e4000007 	ldb	r16,0(fp)
10003518:	e005883a 	mov	r2,fp
1000351c:	003a2306 	br	10001dac <__alt_data_end+0xf8001dac>
10003520:	00800084 	movi	r2,2
10003524:	003c4906 	br	1000264c <__alt_data_end+0xf800264c>
10003528:	01040074 	movhi	r4,4097
1000352c:	213def84 	addi	r4,r4,-2114
10003530:	d9012c15 	stw	r4,1200(sp)
10003534:	d9012c17 	ldw	r4,1200(sp)
10003538:	1c47883a 	add	r3,r3,r17
1000353c:	10800044 	addi	r2,r2,1
10003540:	41000015 	stw	r4,0(r8)
10003544:	44400115 	stw	r17,4(r8)
10003548:	d8c12015 	stw	r3,1152(sp)
1000354c:	d8811f15 	stw	r2,1148(sp)
10003550:	010001c4 	movi	r4,7
10003554:	20becc16 	blt	r4,r2,10003088 <__alt_data_end+0xf8003088>
10003558:	42000204 	addi	r8,r8,8
1000355c:	003ed106 	br	100030a4 <__alt_data_end+0xf80030a4>
10003560:	01040074 	movhi	r4,4097
10003564:	213def84 	addi	r4,r4,-2114
10003568:	d9012c15 	stw	r4,1200(sp)
1000356c:	003ba306 	br	100023fc <__alt_data_end+0xf80023fc>
10003570:	b809883a 	mov	r4,r23
10003574:	b00b883a 	mov	r5,r22
10003578:	d9811e04 	addi	r6,sp,1144
1000357c:	000904c0 	call	1000904c <__sprint_r>
10003580:	103aba1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003584:	d8c12017 	ldw	r3,1152(sp)
10003588:	da000404 	addi	r8,sp,16
1000358c:	003d6c06 	br	10002b40 <__alt_data_end+0xf8002b40>
10003590:	d8811f17 	ldw	r2,1148(sp)
10003594:	01440074 	movhi	r5,4097
10003598:	01000044 	movi	r4,1
1000359c:	18c00044 	addi	r3,r3,1
100035a0:	10800044 	addi	r2,r2,1
100035a4:	297def04 	addi	r5,r5,-2116
100035a8:	41000115 	stw	r4,4(r8)
100035ac:	41400015 	stw	r5,0(r8)
100035b0:	d8c12015 	stw	r3,1152(sp)
100035b4:	d8811f15 	stw	r2,1148(sp)
100035b8:	010001c4 	movi	r4,7
100035bc:	20806716 	blt	r4,r2,1000375c <___vfprintf_internal_r+0x1b50>
100035c0:	42000204 	addi	r8,r8,8
100035c4:	8000041e 	bne	r16,zero,100035d8 <___vfprintf_internal_r+0x19cc>
100035c8:	d8813317 	ldw	r2,1228(sp)
100035cc:	1000021e 	bne	r2,zero,100035d8 <___vfprintf_internal_r+0x19cc>
100035d0:	e080004c 	andi	r2,fp,1
100035d4:	103ba026 	beq	r2,zero,10002458 <__alt_data_end+0xf8002458>
100035d8:	d9013817 	ldw	r4,1248(sp)
100035dc:	d8811f17 	ldw	r2,1148(sp)
100035e0:	d9413517 	ldw	r5,1236(sp)
100035e4:	1907883a 	add	r3,r3,r4
100035e8:	10800044 	addi	r2,r2,1
100035ec:	41000115 	stw	r4,4(r8)
100035f0:	41400015 	stw	r5,0(r8)
100035f4:	d8c12015 	stw	r3,1152(sp)
100035f8:	d8811f15 	stw	r2,1148(sp)
100035fc:	010001c4 	movi	r4,7
10003600:	20815716 	blt	r4,r2,10003b60 <___vfprintf_internal_r+0x1f54>
10003604:	42000204 	addi	r8,r8,8
10003608:	0421c83a 	sub	r16,zero,r16
1000360c:	0400810e 	bge	zero,r16,10003814 <___vfprintf_internal_r+0x1c08>
10003610:	04400404 	movi	r17,16
10003614:	8c00bd0e 	bge	r17,r16,1000390c <___vfprintf_internal_r+0x1d00>
10003618:	01440074 	movhi	r5,4097
1000361c:	297def84 	addi	r5,r5,-2114
10003620:	d9412c15 	stw	r5,1200(sp)
10003624:	04c001c4 	movi	r19,7
10003628:	00000306 	br	10003638 <___vfprintf_internal_r+0x1a2c>
1000362c:	42000204 	addi	r8,r8,8
10003630:	843ffc04 	addi	r16,r16,-16
10003634:	8c00b80e 	bge	r17,r16,10003918 <___vfprintf_internal_r+0x1d0c>
10003638:	18c00404 	addi	r3,r3,16
1000363c:	10800044 	addi	r2,r2,1
10003640:	45000015 	stw	r20,0(r8)
10003644:	44400115 	stw	r17,4(r8)
10003648:	d8c12015 	stw	r3,1152(sp)
1000364c:	d8811f15 	stw	r2,1148(sp)
10003650:	98bff60e 	bge	r19,r2,1000362c <__alt_data_end+0xf800362c>
10003654:	b809883a 	mov	r4,r23
10003658:	b00b883a 	mov	r5,r22
1000365c:	d9811e04 	addi	r6,sp,1144
10003660:	000904c0 	call	1000904c <__sprint_r>
10003664:	103a811e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003668:	d8c12017 	ldw	r3,1152(sp)
1000366c:	d8811f17 	ldw	r2,1148(sp)
10003670:	da000404 	addi	r8,sp,16
10003674:	003fee06 	br	10003630 <__alt_data_end+0xf8003630>
10003678:	008011c4 	movi	r2,71
1000367c:	1400db16 	blt	r2,r16,100039ec <___vfprintf_internal_r+0x1de0>
10003680:	01040074 	movhi	r4,4097
10003684:	213de104 	addi	r4,r4,-2172
10003688:	d9013115 	stw	r4,1220(sp)
1000368c:	00c000c4 	movi	r3,3
10003690:	00bfdfc4 	movi	r2,-129
10003694:	d8c12b15 	stw	r3,1196(sp)
10003698:	e0b8703a 	and	fp,fp,r2
1000369c:	dcc12783 	ldbu	r19,1182(sp)
100036a0:	dc812d15 	stw	r18,1204(sp)
100036a4:	1823883a 	mov	r17,r3
100036a8:	d8013215 	stw	zero,1224(sp)
100036ac:	d8013415 	stw	zero,1232(sp)
100036b0:	003ad606 	br	1000220c <__alt_data_end+0xf800220c>
100036b4:	4823883a 	mov	r17,r9
100036b8:	003cc906 	br	100029e0 <__alt_data_end+0xf80029e0>
100036bc:	1c800017 	ldw	r18,0(r3)
100036c0:	d8c12d17 	ldw	r3,1204(sp)
100036c4:	902bd7fa 	srai	r21,r18,31
100036c8:	18c00104 	addi	r3,r3,4
100036cc:	d8c12d15 	stw	r3,1204(sp)
100036d0:	a805883a 	mov	r2,r21
100036d4:	003aa906 	br	1000217c <__alt_data_end+0xf800217c>
100036d8:	d9412d17 	ldw	r5,1204(sp)
100036dc:	14800017 	ldw	r18,0(r2)
100036e0:	002b883a 	mov	r21,zero
100036e4:	29400104 	addi	r5,r5,4
100036e8:	d9412d15 	stw	r5,1204(sp)
100036ec:	003bf906 	br	100026d4 <__alt_data_end+0xf80026d4>
100036f0:	d8c12d17 	ldw	r3,1204(sp)
100036f4:	14800017 	ldw	r18,0(r2)
100036f8:	002b883a 	mov	r21,zero
100036fc:	18c00104 	addi	r3,r3,4
10003700:	d8c12d15 	stw	r3,1204(sp)
10003704:	00800044 	movi	r2,1
10003708:	9007883a 	mov	r3,r18
1000370c:	003bcf06 	br	1000264c <__alt_data_end+0xf800264c>
10003710:	d9012d17 	ldw	r4,1204(sp)
10003714:	14800017 	ldw	r18,0(r2)
10003718:	002b883a 	mov	r21,zero
1000371c:	21000104 	addi	r4,r4,4
10003720:	d9012d15 	stw	r4,1204(sp)
10003724:	0005883a 	mov	r2,zero
10003728:	9007883a 	mov	r3,r18
1000372c:	003bc706 	br	1000264c <__alt_data_end+0xf800264c>
10003730:	d9412d17 	ldw	r5,1204(sp)
10003734:	d8c12f17 	ldw	r3,1212(sp)
10003738:	28800017 	ldw	r2,0(r5)
1000373c:	29400104 	addi	r5,r5,4
10003740:	d9412d15 	stw	r5,1204(sp)
10003744:	10c00015 	stw	r3,0(r2)
10003748:	00396d06 	br	10001d00 <__alt_data_end+0xf8001d00>
1000374c:	01040074 	movhi	r4,4097
10003750:	213ddf04 	addi	r4,r4,-2180
10003754:	d9013115 	stw	r4,1220(sp)
10003758:	003ba206 	br	100025e4 <__alt_data_end+0xf80025e4>
1000375c:	b809883a 	mov	r4,r23
10003760:	b00b883a 	mov	r5,r22
10003764:	d9811e04 	addi	r6,sp,1144
10003768:	000904c0 	call	1000904c <__sprint_r>
1000376c:	103a3f1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003770:	dc012617 	ldw	r16,1176(sp)
10003774:	d8c12017 	ldw	r3,1152(sp)
10003778:	da000404 	addi	r8,sp,16
1000377c:	003f9106 	br	100035c4 <__alt_data_end+0xf80035c4>
10003780:	e0800044 	addi	r2,fp,1
10003784:	9cc00814 	ori	r19,r19,32
10003788:	e4000047 	ldb	r16,1(fp)
1000378c:	00398706 	br	10001dac <__alt_data_end+0xf8001dac>
10003790:	d8812e17 	ldw	r2,1208(sp)
10003794:	d8c12d15 	stw	r3,1204(sp)
10003798:	0085c83a 	sub	r2,zero,r2
1000379c:	d8812e15 	stw	r2,1208(sp)
100037a0:	e005883a 	mov	r2,fp
100037a4:	003a3a06 	br	10002090 <__alt_data_end+0xf8002090>
100037a8:	b809883a 	mov	r4,r23
100037ac:	b00b883a 	mov	r5,r22
100037b0:	d9811e04 	addi	r6,sp,1144
100037b4:	000904c0 	call	1000904c <__sprint_r>
100037b8:	103a2c1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100037bc:	d8c12017 	ldw	r3,1152(sp)
100037c0:	da000404 	addi	r8,sp,16
100037c4:	003cf006 	br	10002b88 <__alt_data_end+0xf8002b88>
100037c8:	d8c12817 	ldw	r3,1184(sp)
100037cc:	d9013117 	ldw	r4,1220(sp)
100037d0:	1923c83a 	sub	r17,r3,r4
100037d4:	003a8806 	br	100021f8 <__alt_data_end+0xf80021f8>
100037d8:	da013f15 	stw	r8,1276(sp)
100037dc:	0001b6c0 	call	10001b6c <strlen>
100037e0:	1023883a 	mov	r17,r2
100037e4:	da013f17 	ldw	r8,1276(sp)
100037e8:	883c7f0e 	bge	r17,zero,100029e8 <__alt_data_end+0xf80029e8>
100037ec:	0005883a 	mov	r2,zero
100037f0:	003c7d06 	br	100029e8 <__alt_data_end+0xf80029e8>
100037f4:	b809883a 	mov	r4,r23
100037f8:	b00b883a 	mov	r5,r22
100037fc:	d9811e04 	addi	r6,sp,1144
10003800:	000904c0 	call	1000904c <__sprint_r>
10003804:	103a191e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003808:	d8c12017 	ldw	r3,1152(sp)
1000380c:	d8811f17 	ldw	r2,1148(sp)
10003810:	da000404 	addi	r8,sp,16
10003814:	d9413317 	ldw	r5,1228(sp)
10003818:	d9013117 	ldw	r4,1220(sp)
1000381c:	10800044 	addi	r2,r2,1
10003820:	28c7883a 	add	r3,r5,r3
10003824:	41000015 	stw	r4,0(r8)
10003828:	41400115 	stw	r5,4(r8)
1000382c:	d8c12015 	stw	r3,1152(sp)
10003830:	d8811f15 	stw	r2,1148(sp)
10003834:	010001c4 	movi	r4,7
10003838:	20bb060e 	bge	r4,r2,10002454 <__alt_data_end+0xf8002454>
1000383c:	003d6206 	br	10002dc8 <__alt_data_end+0xf8002dc8>
10003840:	01040074 	movhi	r4,4097
10003844:	213df384 	addi	r4,r4,-2098
10003848:	d9013615 	stw	r4,1240(sp)
1000384c:	003aa306 	br	100022dc <__alt_data_end+0xf80022dc>
10003850:	d8812604 	addi	r2,sp,1176
10003854:	d8800115 	stw	r2,4(sp)
10003858:	d9413717 	ldw	r5,1244(sp)
1000385c:	d8812504 	addi	r2,sp,1172
10003860:	d8800215 	stw	r2,8(sp)
10003864:	d8812104 	addi	r2,sp,1156
10003868:	da400015 	stw	r9,0(sp)
1000386c:	d8800315 	stw	r2,12(sp)
10003870:	b809883a 	mov	r4,r23
10003874:	880d883a 	mov	r6,r17
10003878:	01c000c4 	movi	r7,3
1000387c:	da013f15 	stw	r8,1276(sp)
10003880:	da413e15 	stw	r9,1272(sp)
10003884:	00040840 	call	10004084 <_dtoa_r>
10003888:	da413e17 	ldw	r9,1272(sp)
1000388c:	da013f17 	ldw	r8,1276(sp)
10003890:	d8813115 	stw	r2,1220(sp)
10003894:	482b883a 	mov	r21,r9
10003898:	d8c13117 	ldw	r3,1220(sp)
1000389c:	00801184 	movi	r2,70
100038a0:	1d55883a 	add	r10,r3,r21
100038a4:	98bebb1e 	bne	r19,r2,10003394 <__alt_data_end+0xf8003394>
100038a8:	19000007 	ldb	r4,0(r3)
100038ac:	00800c04 	movi	r2,48
100038b0:	2080dd26 	beq	r4,r2,10003c28 <___vfprintf_internal_r+0x201c>
100038b4:	d8c12617 	ldw	r3,1176(sp)
100038b8:	50d5883a 	add	r10,r10,r3
100038bc:	003eb506 	br	10003394 <__alt_data_end+0xf8003394>
100038c0:	0023883a 	mov	r17,zero
100038c4:	003d9b06 	br	10002f34 <__alt_data_end+0xf8002f34>
100038c8:	b809883a 	mov	r4,r23
100038cc:	b00b883a 	mov	r5,r22
100038d0:	d9811e04 	addi	r6,sp,1144
100038d4:	000904c0 	call	1000904c <__sprint_r>
100038d8:	1039e41e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100038dc:	d8c12017 	ldw	r3,1152(sp)
100038e0:	da000404 	addi	r8,sp,16
100038e4:	003d9206 	br	10002f30 <__alt_data_end+0xf8002f30>
100038e8:	b809883a 	mov	r4,r23
100038ec:	b00b883a 	mov	r5,r22
100038f0:	d9811e04 	addi	r6,sp,1144
100038f4:	000904c0 	call	1000904c <__sprint_r>
100038f8:	1039dc1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
100038fc:	d8812617 	ldw	r2,1176(sp)
10003900:	d8c12017 	ldw	r3,1152(sp)
10003904:	da000404 	addi	r8,sp,16
10003908:	003dfb06 	br	100030f8 <__alt_data_end+0xf80030f8>
1000390c:	01040074 	movhi	r4,4097
10003910:	213def84 	addi	r4,r4,-2114
10003914:	d9012c15 	stw	r4,1200(sp)
10003918:	d9012c17 	ldw	r4,1200(sp)
1000391c:	1c07883a 	add	r3,r3,r16
10003920:	10800044 	addi	r2,r2,1
10003924:	41000015 	stw	r4,0(r8)
10003928:	44000115 	stw	r16,4(r8)
1000392c:	d8c12015 	stw	r3,1152(sp)
10003930:	d8811f15 	stw	r2,1148(sp)
10003934:	010001c4 	movi	r4,7
10003938:	20bfae16 	blt	r4,r2,100037f4 <__alt_data_end+0xf80037f4>
1000393c:	42000204 	addi	r8,r8,8
10003940:	003fb406 	br	10003814 <__alt_data_end+0xf8003814>
10003944:	0021883a 	mov	r16,zero
10003948:	003dfd06 	br	10003140 <__alt_data_end+0xf8003140>
1000394c:	01440074 	movhi	r5,4097
10003950:	297df384 	addi	r5,r5,-2098
10003954:	d9413615 	stw	r5,1240(sp)
10003958:	003ae306 	br	100024e8 <__alt_data_end+0xf80024e8>
1000395c:	b809883a 	mov	r4,r23
10003960:	b00b883a 	mov	r5,r22
10003964:	d9811e04 	addi	r6,sp,1144
10003968:	000904c0 	call	1000904c <__sprint_r>
1000396c:	1039bf1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003970:	d8812617 	ldw	r2,1176(sp)
10003974:	d9413317 	ldw	r5,1228(sp)
10003978:	d8c12017 	ldw	r3,1152(sp)
1000397c:	da000404 	addi	r8,sp,16
10003980:	2885c83a 	sub	r2,r5,r2
10003984:	003ded06 	br	1000313c <__alt_data_end+0xf800313c>
10003988:	00800184 	movi	r2,6
1000398c:	1240012e 	bgeu	r2,r9,10003994 <___vfprintf_internal_r+0x1d88>
10003990:	1013883a 	mov	r9,r2
10003994:	4823883a 	mov	r17,r9
10003998:	4805883a 	mov	r2,r9
1000399c:	4800b216 	blt	r9,zero,10003c68 <___vfprintf_internal_r+0x205c>
100039a0:	01440074 	movhi	r5,4097
100039a4:	297ded04 	addi	r5,r5,-2124
100039a8:	d8812b15 	stw	r2,1196(sp)
100039ac:	dc812d15 	stw	r18,1204(sp)
100039b0:	d8013215 	stw	zero,1224(sp)
100039b4:	d8013415 	stw	zero,1232(sp)
100039b8:	d9413115 	stw	r5,1220(sp)
100039bc:	0005883a 	mov	r2,zero
100039c0:	003a1906 	br	10002228 <__alt_data_end+0xf8002228>
100039c4:	04c00b44 	movi	r19,45
100039c8:	dcc12785 	stb	r19,1182(sp)
100039cc:	003b0006 	br	100025d0 <__alt_data_end+0xf80025d0>
100039d0:	d8c12d17 	ldw	r3,1204(sp)
100039d4:	d9012f17 	ldw	r4,1212(sp)
100039d8:	18800017 	ldw	r2,0(r3)
100039dc:	18c00104 	addi	r3,r3,4
100039e0:	d8c12d15 	stw	r3,1204(sp)
100039e4:	11000015 	stw	r4,0(r2)
100039e8:	0038c506 	br	10001d00 <__alt_data_end+0xf8001d00>
100039ec:	01440074 	movhi	r5,4097
100039f0:	297de204 	addi	r5,r5,-2168
100039f4:	d9413115 	stw	r5,1220(sp)
100039f8:	003f2406 	br	1000368c <__alt_data_end+0xf800368c>
100039fc:	00800b44 	movi	r2,45
10003a00:	d8812785 	stb	r2,1182(sp)
10003a04:	df012b15 	stw	fp,1196(sp)
10003a08:	d8013215 	stw	zero,1224(sp)
10003a0c:	df012d17 	ldw	fp,1204(sp)
10003a10:	00800b44 	movi	r2,45
10003a14:	dc812d15 	stw	r18,1204(sp)
10003a18:	003a0006 	br	1000221c <__alt_data_end+0xf800221c>
10003a1c:	d8c12617 	ldw	r3,1176(sp)
10003a20:	00bfff44 	movi	r2,-3
10003a24:	18800a16 	blt	r3,r2,10003a50 <___vfprintf_internal_r+0x1e44>
10003a28:	48c00916 	blt	r9,r3,10003a50 <___vfprintf_internal_r+0x1e44>
10003a2c:	d8c13415 	stw	r3,1232(sp)
10003a30:	040019c4 	movi	r16,103
10003a34:	003e7606 	br	10003410 <__alt_data_end+0xf8003410>
10003a38:	01040074 	movhi	r4,4097
10003a3c:	213def84 	addi	r4,r4,-2114
10003a40:	d9012c15 	stw	r4,1200(sp)
10003a44:	003c8e06 	br	10002c80 <__alt_data_end+0xf8002c80>
10003a48:	5005883a 	mov	r2,r10
10003a4c:	003e6506 	br	100033e4 <__alt_data_end+0xf80033e4>
10003a50:	843fff84 	addi	r16,r16,-2
10003a54:	1d7fffc4 	addi	r21,r3,-1
10003a58:	dd412615 	stw	r21,1176(sp)
10003a5c:	dc0122c5 	stb	r16,1163(sp)
10003a60:	a8009216 	blt	r21,zero,10003cac <___vfprintf_internal_r+0x20a0>
10003a64:	00800ac4 	movi	r2,43
10003a68:	d8812305 	stb	r2,1164(sp)
10003a6c:	00800244 	movi	r2,9
10003a70:	1540660e 	bge	r2,r21,10003c0c <___vfprintf_internal_r+0x2000>
10003a74:	dcc122c4 	addi	r19,sp,1163
10003a78:	dc012c15 	stw	r16,1200(sp)
10003a7c:	4023883a 	mov	r17,r8
10003a80:	9821883a 	mov	r16,r19
10003a84:	a809883a 	mov	r4,r21
10003a88:	01400284 	movi	r5,10
10003a8c:	00019580 	call	10001958 <__modsi3>
10003a90:	10800c04 	addi	r2,r2,48
10003a94:	843fffc4 	addi	r16,r16,-1
10003a98:	a809883a 	mov	r4,r21
10003a9c:	01400284 	movi	r5,10
10003aa0:	80800005 	stb	r2,0(r16)
10003aa4:	00019040 	call	10001904 <__divsi3>
10003aa8:	01000244 	movi	r4,9
10003aac:	102b883a 	mov	r21,r2
10003ab0:	20bff416 	blt	r4,r2,10003a84 <__alt_data_end+0xf8003a84>
10003ab4:	8811883a 	mov	r8,r17
10003ab8:	10800c04 	addi	r2,r2,48
10003abc:	8023883a 	mov	r17,r16
10003ac0:	897fffc4 	addi	r5,r17,-1
10003ac4:	88bfffc5 	stb	r2,-1(r17)
10003ac8:	dc012c17 	ldw	r16,1200(sp)
10003acc:	2cc08a2e 	bgeu	r5,r19,10003cf8 <___vfprintf_internal_r+0x20ec>
10003ad0:	d9812384 	addi	r6,sp,1166
10003ad4:	344dc83a 	sub	r6,r6,r17
10003ad8:	d9012344 	addi	r4,sp,1165
10003adc:	998d883a 	add	r6,r19,r6
10003ae0:	00000106 	br	10003ae8 <___vfprintf_internal_r+0x1edc>
10003ae4:	28800003 	ldbu	r2,0(r5)
10003ae8:	20800005 	stb	r2,0(r4)
10003aec:	21000044 	addi	r4,r4,1
10003af0:	29400044 	addi	r5,r5,1
10003af4:	21bffb1e 	bne	r4,r6,10003ae4 <__alt_data_end+0xf8003ae4>
10003af8:	d8812304 	addi	r2,sp,1164
10003afc:	1445c83a 	sub	r2,r2,r17
10003b00:	d9412344 	addi	r5,sp,1165
10003b04:	2885883a 	add	r2,r5,r2
10003b08:	14e7c83a 	sub	r19,r2,r19
10003b0c:	d8813317 	ldw	r2,1228(sp)
10003b10:	d8c13317 	ldw	r3,1228(sp)
10003b14:	dcc13a15 	stw	r19,1256(sp)
10003b18:	14e3883a 	add	r17,r2,r19
10003b1c:	00800044 	movi	r2,1
10003b20:	10c0550e 	bge	r2,r3,10003c78 <___vfprintf_internal_r+0x206c>
10003b24:	8c400044 	addi	r17,r17,1
10003b28:	8839883a 	mov	fp,r17
10003b2c:	88005016 	blt	r17,zero,10003c70 <___vfprintf_internal_r+0x2064>
10003b30:	d8013415 	stw	zero,1232(sp)
10003b34:	003e3f06 	br	10003434 <__alt_data_end+0xf8003434>
10003b38:	da412b15 	stw	r9,1196(sp)
10003b3c:	dcc12783 	ldbu	r19,1182(sp)
10003b40:	4823883a 	mov	r17,r9
10003b44:	dc812d15 	stw	r18,1204(sp)
10003b48:	d8013215 	stw	zero,1224(sp)
10003b4c:	d8013415 	stw	zero,1232(sp)
10003b50:	0039ae06 	br	1000220c <__alt_data_end+0xf800220c>
10003b54:	483de91e 	bne	r9,zero,100032fc <__alt_data_end+0xf80032fc>
10003b58:	8813883a 	mov	r9,r17
10003b5c:	003de706 	br	100032fc <__alt_data_end+0xf80032fc>
10003b60:	b809883a 	mov	r4,r23
10003b64:	b00b883a 	mov	r5,r22
10003b68:	d9811e04 	addi	r6,sp,1144
10003b6c:	000904c0 	call	1000904c <__sprint_r>
10003b70:	10393e1e 	bne	r2,zero,1000206c <__alt_data_end+0xf800206c>
10003b74:	dc012617 	ldw	r16,1176(sp)
10003b78:	d8c12017 	ldw	r3,1152(sp)
10003b7c:	d8811f17 	ldw	r2,1148(sp)
10003b80:	da000404 	addi	r8,sp,16
10003b84:	003ea006 	br	10003608 <__alt_data_end+0xf8003608>
10003b88:	00c00b44 	movi	r3,45
10003b8c:	2460003c 	xorhi	r17,r4,32768
10003b90:	d8c12b05 	stb	r3,1196(sp)
10003b94:	003ddf06 	br	10003314 <__alt_data_end+0xf8003314>
10003b98:	02400184 	movi	r9,6
10003b9c:	003dd706 	br	100032fc <__alt_data_end+0xf80032fc>
10003ba0:	4d400044 	addi	r21,r9,1
10003ba4:	003de206 	br	10003330 <__alt_data_end+0xf8003330>
10003ba8:	d8c13417 	ldw	r3,1232(sp)
10003bac:	00c0490e 	bge	zero,r3,10003cd4 <___vfprintf_internal_r+0x20c8>
10003bb0:	04400044 	movi	r17,1
10003bb4:	d9013317 	ldw	r4,1228(sp)
10003bb8:	8923883a 	add	r17,r17,r4
10003bbc:	8839883a 	mov	fp,r17
10003bc0:	883e1c0e 	bge	r17,zero,10003434 <__alt_data_end+0xf8003434>
10003bc4:	0039883a 	mov	fp,zero
10003bc8:	003e1a06 	br	10003434 <__alt_data_end+0xf8003434>
10003bcc:	00c03b0e 	bge	zero,r3,10003cbc <___vfprintf_internal_r+0x20b0>
10003bd0:	4800021e 	bne	r9,zero,10003bdc <___vfprintf_internal_r+0x1fd0>
10003bd4:	e080004c 	andi	r2,fp,1
10003bd8:	10000626 	beq	r2,zero,10003bf4 <___vfprintf_internal_r+0x1fe8>
10003bdc:	d8c13417 	ldw	r3,1232(sp)
10003be0:	4a400044 	addi	r9,r9,1
10003be4:	1a63883a 	add	r17,r3,r9
10003be8:	8839883a 	mov	fp,r17
10003bec:	883e110e 	bge	r17,zero,10003434 <__alt_data_end+0xf8003434>
10003bf0:	003ff406 	br	10003bc4 <__alt_data_end+0xf8003bc4>
10003bf4:	1839883a 	mov	fp,r3
10003bf8:	18004116 	blt	r3,zero,10003d00 <___vfprintf_internal_r+0x20f4>
10003bfc:	dc413417 	ldw	r17,1232(sp)
10003c00:	003e0c06 	br	10003434 <__alt_data_end+0xf8003434>
10003c04:	d8812117 	ldw	r2,1156(sp)
10003c08:	003df606 	br	100033e4 <__alt_data_end+0xf80033e4>
10003c0c:	00800c04 	movi	r2,48
10003c10:	a8c00c04 	addi	r3,r21,48
10003c14:	d8812345 	stb	r2,1165(sp)
10003c18:	d8c12385 	stb	r3,1166(sp)
10003c1c:	d88123c4 	addi	r2,sp,1167
10003c20:	dcc122c4 	addi	r19,sp,1163
10003c24:	003fb806 	br	10003b08 <__alt_data_end+0xf8003b08>
10003c28:	d9013717 	ldw	r4,1244(sp)
10003c2c:	880b883a 	mov	r5,r17
10003c30:	000d883a 	mov	r6,zero
10003c34:	000f883a 	mov	r7,zero
10003c38:	da013f15 	stw	r8,1276(sp)
10003c3c:	da413e15 	stw	r9,1272(sp)
10003c40:	da813d15 	stw	r10,1268(sp)
10003c44:	000c2f00 	call	1000c2f0 <__eqdf2>
10003c48:	da013f17 	ldw	r8,1276(sp)
10003c4c:	da413e17 	ldw	r9,1272(sp)
10003c50:	da813d17 	ldw	r10,1268(sp)
10003c54:	103f1726 	beq	r2,zero,100038b4 <__alt_data_end+0xf80038b4>
10003c58:	00800044 	movi	r2,1
10003c5c:	1547c83a 	sub	r3,r2,r21
10003c60:	d8c12615 	stw	r3,1176(sp)
10003c64:	003f1406 	br	100038b8 <__alt_data_end+0xf80038b8>
10003c68:	0005883a 	mov	r2,zero
10003c6c:	003f4c06 	br	100039a0 <__alt_data_end+0xf80039a0>
10003c70:	0039883a 	mov	fp,zero
10003c74:	003fae06 	br	10003b30 <__alt_data_end+0xf8003b30>
10003c78:	e084703a 	and	r2,fp,r2
10003c7c:	103faa26 	beq	r2,zero,10003b28 <__alt_data_end+0xf8003b28>
10003c80:	003fa806 	br	10003b24 <__alt_data_end+0xf8003b24>
10003c84:	d9412d17 	ldw	r5,1204(sp)
10003c88:	2a400017 	ldw	r9,0(r5)
10003c8c:	28c00104 	addi	r3,r5,4
10003c90:	d8c12d15 	stw	r3,1204(sp)
10003c94:	483ebc0e 	bge	r9,zero,10003788 <__alt_data_end+0xf8003788>
10003c98:	027fffc4 	movi	r9,-1
10003c9c:	e4000047 	ldb	r16,1(fp)
10003ca0:	00384206 	br	10001dac <__alt_data_end+0xf8001dac>
10003ca4:	043fffc4 	movi	r16,-1
10003ca8:	0038ce06 	br	10001fe4 <__alt_data_end+0xf8001fe4>
10003cac:	00800b44 	movi	r2,45
10003cb0:	056bc83a 	sub	r21,zero,r21
10003cb4:	d8812305 	stb	r2,1164(sp)
10003cb8:	003f6c06 	br	10003a6c <__alt_data_end+0xf8003a6c>
10003cbc:	4800081e 	bne	r9,zero,10003ce0 <___vfprintf_internal_r+0x20d4>
10003cc0:	e080004c 	andi	r2,fp,1
10003cc4:	1000061e 	bne	r2,zero,10003ce0 <___vfprintf_internal_r+0x20d4>
10003cc8:	07000044 	movi	fp,1
10003ccc:	e023883a 	mov	r17,fp
10003cd0:	003dd806 	br	10003434 <__alt_data_end+0xf8003434>
10003cd4:	04400084 	movi	r17,2
10003cd8:	88e3c83a 	sub	r17,r17,r3
10003cdc:	003fb506 	br	10003bb4 <__alt_data_end+0xf8003bb4>
10003ce0:	4c400084 	addi	r17,r9,2
10003ce4:	8839883a 	mov	fp,r17
10003ce8:	883dd20e 	bge	r17,zero,10003434 <__alt_data_end+0xf8003434>
10003cec:	003fb506 	br	10003bc4 <__alt_data_end+0xf8003bc4>
10003cf0:	d8c12617 	ldw	r3,1176(sp)
10003cf4:	003f5706 	br	10003a54 <__alt_data_end+0xf8003a54>
10003cf8:	d8812344 	addi	r2,sp,1165
10003cfc:	003f8206 	br	10003b08 <__alt_data_end+0xf8003b08>
10003d00:	0039883a 	mov	fp,zero
10003d04:	003fbd06 	br	10003bfc <__alt_data_end+0xf8003bfc>

10003d08 <__vfprintf_internal>:
10003d08:	2007883a 	mov	r3,r4
10003d0c:	01040074 	movhi	r4,4097
10003d10:	21050904 	addi	r4,r4,5156
10003d14:	21000017 	ldw	r4,0(r4)
10003d18:	2805883a 	mov	r2,r5
10003d1c:	300f883a 	mov	r7,r6
10003d20:	180b883a 	mov	r5,r3
10003d24:	100d883a 	mov	r6,r2
10003d28:	0001c0c1 	jmpi	10001c0c <___vfprintf_internal_r>

10003d2c <__swsetup_r>:
10003d2c:	00840074 	movhi	r2,4097
10003d30:	defffd04 	addi	sp,sp,-12
10003d34:	10850904 	addi	r2,r2,5156
10003d38:	dc400115 	stw	r17,4(sp)
10003d3c:	2023883a 	mov	r17,r4
10003d40:	11000017 	ldw	r4,0(r2)
10003d44:	dc000015 	stw	r16,0(sp)
10003d48:	dfc00215 	stw	ra,8(sp)
10003d4c:	2821883a 	mov	r16,r5
10003d50:	20000226 	beq	r4,zero,10003d5c <__swsetup_r+0x30>
10003d54:	20c00e17 	ldw	r3,56(r4)
10003d58:	18002e26 	beq	r3,zero,10003e14 <__swsetup_r+0xe8>
10003d5c:	8080030b 	ldhu	r2,12(r16)
10003d60:	10c0020c 	andi	r3,r2,8
10003d64:	100d883a 	mov	r6,r2
10003d68:	18000f26 	beq	r3,zero,10003da8 <__swsetup_r+0x7c>
10003d6c:	80c00417 	ldw	r3,16(r16)
10003d70:	18001526 	beq	r3,zero,10003dc8 <__swsetup_r+0x9c>
10003d74:	1100004c 	andi	r4,r2,1
10003d78:	20001c1e 	bne	r4,zero,10003dec <__swsetup_r+0xc0>
10003d7c:	1080008c 	andi	r2,r2,2
10003d80:	1000261e 	bne	r2,zero,10003e1c <__swsetup_r+0xf0>
10003d84:	80800517 	ldw	r2,20(r16)
10003d88:	80800215 	stw	r2,8(r16)
10003d8c:	18001c26 	beq	r3,zero,10003e00 <__swsetup_r+0xd4>
10003d90:	0005883a 	mov	r2,zero
10003d94:	dfc00217 	ldw	ra,8(sp)
10003d98:	dc400117 	ldw	r17,4(sp)
10003d9c:	dc000017 	ldw	r16,0(sp)
10003da0:	dec00304 	addi	sp,sp,12
10003da4:	f800283a 	ret
10003da8:	3080040c 	andi	r2,r6,16
10003dac:	10001726 	beq	r2,zero,10003e0c <__swsetup_r+0xe0>
10003db0:	3080010c 	andi	r2,r6,4
10003db4:	10001b1e 	bne	r2,zero,10003e24 <__swsetup_r+0xf8>
10003db8:	80c00417 	ldw	r3,16(r16)
10003dbc:	30800214 	ori	r2,r6,8
10003dc0:	8080030d 	sth	r2,12(r16)
10003dc4:	183feb1e 	bne	r3,zero,10003d74 <__alt_data_end+0xf8003d74>
10003dc8:	1140a00c 	andi	r5,r2,640
10003dcc:	01008004 	movi	r4,512
10003dd0:	293fe826 	beq	r5,r4,10003d74 <__alt_data_end+0xf8003d74>
10003dd4:	8809883a 	mov	r4,r17
10003dd8:	800b883a 	mov	r5,r16
10003ddc:	00068c00 	call	100068c0 <__smakebuf_r>
10003de0:	8080030b 	ldhu	r2,12(r16)
10003de4:	80c00417 	ldw	r3,16(r16)
10003de8:	003fe206 	br	10003d74 <__alt_data_end+0xf8003d74>
10003dec:	80800517 	ldw	r2,20(r16)
10003df0:	80000215 	stw	zero,8(r16)
10003df4:	0085c83a 	sub	r2,zero,r2
10003df8:	80800615 	stw	r2,24(r16)
10003dfc:	183fe41e 	bne	r3,zero,10003d90 <__alt_data_end+0xf8003d90>
10003e00:	8080030b 	ldhu	r2,12(r16)
10003e04:	1080200c 	andi	r2,r2,128
10003e08:	103fe226 	beq	r2,zero,10003d94 <__alt_data_end+0xf8003d94>
10003e0c:	00bfffc4 	movi	r2,-1
10003e10:	003fe006 	br	10003d94 <__alt_data_end+0xf8003d94>
10003e14:	0005d680 	call	10005d68 <__sinit>
10003e18:	003fd006 	br	10003d5c <__alt_data_end+0xf8003d5c>
10003e1c:	0005883a 	mov	r2,zero
10003e20:	003fd906 	br	10003d88 <__alt_data_end+0xf8003d88>
10003e24:	81400c17 	ldw	r5,48(r16)
10003e28:	28000626 	beq	r5,zero,10003e44 <__swsetup_r+0x118>
10003e2c:	80801004 	addi	r2,r16,64
10003e30:	28800326 	beq	r5,r2,10003e40 <__swsetup_r+0x114>
10003e34:	8809883a 	mov	r4,r17
10003e38:	0005edc0 	call	10005edc <_free_r>
10003e3c:	8180030b 	ldhu	r6,12(r16)
10003e40:	80000c15 	stw	zero,48(r16)
10003e44:	80c00417 	ldw	r3,16(r16)
10003e48:	00bff6c4 	movi	r2,-37
10003e4c:	118c703a 	and	r6,r2,r6
10003e50:	80000115 	stw	zero,4(r16)
10003e54:	80c00015 	stw	r3,0(r16)
10003e58:	003fd806 	br	10003dbc <__alt_data_end+0xf8003dbc>

10003e5c <quorem>:
10003e5c:	defff204 	addi	sp,sp,-56
10003e60:	ddc00b15 	stw	r23,44(sp)
10003e64:	20800417 	ldw	r2,16(r4)
10003e68:	2dc00417 	ldw	r23,16(r5)
10003e6c:	dfc00d15 	stw	ra,52(sp)
10003e70:	df000c15 	stw	fp,48(sp)
10003e74:	dd800a15 	stw	r22,40(sp)
10003e78:	dd400915 	stw	r21,36(sp)
10003e7c:	dd000815 	stw	r20,32(sp)
10003e80:	dcc00715 	stw	r19,28(sp)
10003e84:	dc800615 	stw	r18,24(sp)
10003e88:	dc400515 	stw	r17,20(sp)
10003e8c:	dc000415 	stw	r16,16(sp)
10003e90:	15c07a16 	blt	r2,r23,1000407c <quorem+0x220>
10003e94:	bdffffc4 	addi	r23,r23,-1
10003e98:	bde9883a 	add	r20,r23,r23
10003e9c:	28c00504 	addi	r3,r5,20
10003ea0:	a529883a 	add	r20,r20,r20
10003ea4:	1d39883a 	add	fp,r3,r20
10003ea8:	24c00504 	addi	r19,r4,20
10003eac:	d9400215 	stw	r5,8(sp)
10003eb0:	9d29883a 	add	r20,r19,r20
10003eb4:	e1400017 	ldw	r5,0(fp)
10003eb8:	d9000015 	stw	r4,0(sp)
10003ebc:	a1000017 	ldw	r4,0(r20)
10003ec0:	29400044 	addi	r5,r5,1
10003ec4:	d8c00115 	stw	r3,4(sp)
10003ec8:	dd000315 	stw	r20,12(sp)
10003ecc:	00019b40 	call	100019b4 <__udivsi3>
10003ed0:	1025883a 	mov	r18,r2
10003ed4:	10003026 	beq	r2,zero,10003f98 <quorem+0x13c>
10003ed8:	dc400117 	ldw	r17,4(sp)
10003edc:	9829883a 	mov	r20,r19
10003ee0:	002d883a 	mov	r22,zero
10003ee4:	0021883a 	mov	r16,zero
10003ee8:	8d400017 	ldw	r21,0(r17)
10003eec:	900b883a 	mov	r5,r18
10003ef0:	8c400104 	addi	r17,r17,4
10003ef4:	a93fffcc 	andi	r4,r21,65535
10003ef8:	00019c40 	call	100019c4 <__mulsi3>
10003efc:	a808d43a 	srli	r4,r21,16
10003f00:	900b883a 	mov	r5,r18
10003f04:	b0ad883a 	add	r22,r22,r2
10003f08:	00019c40 	call	100019c4 <__mulsi3>
10003f0c:	a1000017 	ldw	r4,0(r20)
10003f10:	b00cd43a 	srli	r6,r22,16
10003f14:	b0ffffcc 	andi	r3,r22,65535
10003f18:	217fffcc 	andi	r5,r4,65535
10003f1c:	2c21883a 	add	r16,r5,r16
10003f20:	80c7c83a 	sub	r3,r16,r3
10003f24:	2008d43a 	srli	r4,r4,16
10003f28:	3085883a 	add	r2,r6,r2
10003f2c:	1821d43a 	srai	r16,r3,16
10003f30:	117fffcc 	andi	r5,r2,65535
10003f34:	2149c83a 	sub	r4,r4,r5
10003f38:	2421883a 	add	r16,r4,r16
10003f3c:	8008943a 	slli	r4,r16,16
10003f40:	18ffffcc 	andi	r3,r3,65535
10003f44:	102cd43a 	srli	r22,r2,16
10003f48:	20c8b03a 	or	r4,r4,r3
10003f4c:	a1000015 	stw	r4,0(r20)
10003f50:	8021d43a 	srai	r16,r16,16
10003f54:	a5000104 	addi	r20,r20,4
10003f58:	e47fe32e 	bgeu	fp,r17,10003ee8 <__alt_data_end+0xf8003ee8>
10003f5c:	d8c00317 	ldw	r3,12(sp)
10003f60:	18800017 	ldw	r2,0(r3)
10003f64:	10000c1e 	bne	r2,zero,10003f98 <quorem+0x13c>
10003f68:	18bfff04 	addi	r2,r3,-4
10003f6c:	9880082e 	bgeu	r19,r2,10003f90 <quorem+0x134>
10003f70:	18ffff17 	ldw	r3,-4(r3)
10003f74:	18000326 	beq	r3,zero,10003f84 <quorem+0x128>
10003f78:	00000506 	br	10003f90 <quorem+0x134>
10003f7c:	10c00017 	ldw	r3,0(r2)
10003f80:	1800031e 	bne	r3,zero,10003f90 <quorem+0x134>
10003f84:	10bfff04 	addi	r2,r2,-4
10003f88:	bdffffc4 	addi	r23,r23,-1
10003f8c:	98bffb36 	bltu	r19,r2,10003f7c <__alt_data_end+0xf8003f7c>
10003f90:	d8c00017 	ldw	r3,0(sp)
10003f94:	1dc00415 	stw	r23,16(r3)
10003f98:	d9000017 	ldw	r4,0(sp)
10003f9c:	d9400217 	ldw	r5,8(sp)
10003fa0:	000803c0 	call	1000803c <__mcmp>
10003fa4:	10002816 	blt	r2,zero,10004048 <quorem+0x1ec>
10003fa8:	dc400117 	ldw	r17,4(sp)
10003fac:	94800044 	addi	r18,r18,1
10003fb0:	980d883a 	mov	r6,r19
10003fb4:	0007883a 	mov	r3,zero
10003fb8:	31000017 	ldw	r4,0(r6)
10003fbc:	89400017 	ldw	r5,0(r17)
10003fc0:	31800104 	addi	r6,r6,4
10003fc4:	20bfffcc 	andi	r2,r4,65535
10003fc8:	10c7883a 	add	r3,r2,r3
10003fcc:	28bfffcc 	andi	r2,r5,65535
10003fd0:	1885c83a 	sub	r2,r3,r2
10003fd4:	280ad43a 	srli	r5,r5,16
10003fd8:	2008d43a 	srli	r4,r4,16
10003fdc:	1007d43a 	srai	r3,r2,16
10003fe0:	10bfffcc 	andi	r2,r2,65535
10003fe4:	2149c83a 	sub	r4,r4,r5
10003fe8:	20c9883a 	add	r4,r4,r3
10003fec:	200a943a 	slli	r5,r4,16
10003ff0:	8c400104 	addi	r17,r17,4
10003ff4:	2007d43a 	srai	r3,r4,16
10003ff8:	2884b03a 	or	r2,r5,r2
10003ffc:	30bfff15 	stw	r2,-4(r6)
10004000:	e47fed2e 	bgeu	fp,r17,10003fb8 <__alt_data_end+0xf8003fb8>
10004004:	bdc5883a 	add	r2,r23,r23
10004008:	1085883a 	add	r2,r2,r2
1000400c:	9887883a 	add	r3,r19,r2
10004010:	18800017 	ldw	r2,0(r3)
10004014:	10000c1e 	bne	r2,zero,10004048 <quorem+0x1ec>
10004018:	18bfff04 	addi	r2,r3,-4
1000401c:	9880082e 	bgeu	r19,r2,10004040 <quorem+0x1e4>
10004020:	18ffff17 	ldw	r3,-4(r3)
10004024:	18000326 	beq	r3,zero,10004034 <quorem+0x1d8>
10004028:	00000506 	br	10004040 <quorem+0x1e4>
1000402c:	10c00017 	ldw	r3,0(r2)
10004030:	1800031e 	bne	r3,zero,10004040 <quorem+0x1e4>
10004034:	10bfff04 	addi	r2,r2,-4
10004038:	bdffffc4 	addi	r23,r23,-1
1000403c:	98bffb36 	bltu	r19,r2,1000402c <__alt_data_end+0xf800402c>
10004040:	d8c00017 	ldw	r3,0(sp)
10004044:	1dc00415 	stw	r23,16(r3)
10004048:	9005883a 	mov	r2,r18
1000404c:	dfc00d17 	ldw	ra,52(sp)
10004050:	df000c17 	ldw	fp,48(sp)
10004054:	ddc00b17 	ldw	r23,44(sp)
10004058:	dd800a17 	ldw	r22,40(sp)
1000405c:	dd400917 	ldw	r21,36(sp)
10004060:	dd000817 	ldw	r20,32(sp)
10004064:	dcc00717 	ldw	r19,28(sp)
10004068:	dc800617 	ldw	r18,24(sp)
1000406c:	dc400517 	ldw	r17,20(sp)
10004070:	dc000417 	ldw	r16,16(sp)
10004074:	dec00e04 	addi	sp,sp,56
10004078:	f800283a 	ret
1000407c:	0005883a 	mov	r2,zero
10004080:	003ff206 	br	1000404c <__alt_data_end+0xf800404c>

10004084 <_dtoa_r>:
10004084:	20801017 	ldw	r2,64(r4)
10004088:	deffde04 	addi	sp,sp,-136
1000408c:	dd401d15 	stw	r21,116(sp)
10004090:	dcc01b15 	stw	r19,108(sp)
10004094:	dc801a15 	stw	r18,104(sp)
10004098:	dc401915 	stw	r17,100(sp)
1000409c:	dc001815 	stw	r16,96(sp)
100040a0:	dfc02115 	stw	ra,132(sp)
100040a4:	df002015 	stw	fp,128(sp)
100040a8:	ddc01f15 	stw	r23,124(sp)
100040ac:	dd801e15 	stw	r22,120(sp)
100040b0:	dd001c15 	stw	r20,112(sp)
100040b4:	d9c00315 	stw	r7,12(sp)
100040b8:	2021883a 	mov	r16,r4
100040bc:	302b883a 	mov	r21,r6
100040c0:	2825883a 	mov	r18,r5
100040c4:	dc402417 	ldw	r17,144(sp)
100040c8:	3027883a 	mov	r19,r6
100040cc:	10000826 	beq	r2,zero,100040f0 <_dtoa_r+0x6c>
100040d0:	21801117 	ldw	r6,68(r4)
100040d4:	00c00044 	movi	r3,1
100040d8:	100b883a 	mov	r5,r2
100040dc:	1986983a 	sll	r3,r3,r6
100040e0:	11800115 	stw	r6,4(r2)
100040e4:	10c00215 	stw	r3,8(r2)
100040e8:	00077680 	call	10007768 <_Bfree>
100040ec:	80001015 	stw	zero,64(r16)
100040f0:	a8002d16 	blt	r21,zero,100041a8 <_dtoa_r+0x124>
100040f4:	88000015 	stw	zero,0(r17)
100040f8:	a8dffc2c 	andhi	r3,r21,32752
100040fc:	009ffc34 	movhi	r2,32752
10004100:	18801b26 	beq	r3,r2,10004170 <_dtoa_r+0xec>
10004104:	9009883a 	mov	r4,r18
10004108:	980b883a 	mov	r5,r19
1000410c:	000d883a 	mov	r6,zero
10004110:	000f883a 	mov	r7,zero
10004114:	000c2f00 	call	1000c2f0 <__eqdf2>
10004118:	10002a1e 	bne	r2,zero,100041c4 <_dtoa_r+0x140>
1000411c:	d8c02317 	ldw	r3,140(sp)
10004120:	d9002517 	ldw	r4,148(sp)
10004124:	00800044 	movi	r2,1
10004128:	18800015 	stw	r2,0(r3)
1000412c:	2001a226 	beq	r4,zero,100047b8 <_dtoa_r+0x734>
10004130:	00840074 	movhi	r2,4097
10004134:	10bdef44 	addi	r2,r2,-2115
10004138:	20800015 	stw	r2,0(r4)
1000413c:	10bfffc4 	addi	r2,r2,-1
10004140:	dfc02117 	ldw	ra,132(sp)
10004144:	df002017 	ldw	fp,128(sp)
10004148:	ddc01f17 	ldw	r23,124(sp)
1000414c:	dd801e17 	ldw	r22,120(sp)
10004150:	dd401d17 	ldw	r21,116(sp)
10004154:	dd001c17 	ldw	r20,112(sp)
10004158:	dcc01b17 	ldw	r19,108(sp)
1000415c:	dc801a17 	ldw	r18,104(sp)
10004160:	dc401917 	ldw	r17,100(sp)
10004164:	dc001817 	ldw	r16,96(sp)
10004168:	dec02204 	addi	sp,sp,136
1000416c:	f800283a 	ret
10004170:	d8c02317 	ldw	r3,140(sp)
10004174:	0089c3c4 	movi	r2,9999
10004178:	18800015 	stw	r2,0(r3)
1000417c:	90017c26 	beq	r18,zero,10004770 <_dtoa_r+0x6ec>
10004180:	00840074 	movhi	r2,4097
10004184:	10bdfb04 	addi	r2,r2,-2068
10004188:	d9002517 	ldw	r4,148(sp)
1000418c:	203fec26 	beq	r4,zero,10004140 <__alt_data_end+0xf8004140>
10004190:	10c000c7 	ldb	r3,3(r2)
10004194:	18017d1e 	bne	r3,zero,1000478c <_dtoa_r+0x708>
10004198:	10c000c4 	addi	r3,r2,3
1000419c:	d9802517 	ldw	r6,148(sp)
100041a0:	30c00015 	stw	r3,0(r6)
100041a4:	003fe606 	br	10004140 <__alt_data_end+0xf8004140>
100041a8:	04e00034 	movhi	r19,32768
100041ac:	9cffffc4 	addi	r19,r19,-1
100041b0:	00800044 	movi	r2,1
100041b4:	ace6703a 	and	r19,r21,r19
100041b8:	88800015 	stw	r2,0(r17)
100041bc:	982b883a 	mov	r21,r19
100041c0:	003fcd06 	br	100040f8 <__alt_data_end+0xf80040f8>
100041c4:	d8800204 	addi	r2,sp,8
100041c8:	a822d53a 	srli	r17,r21,20
100041cc:	d8800015 	stw	r2,0(sp)
100041d0:	8009883a 	mov	r4,r16
100041d4:	900b883a 	mov	r5,r18
100041d8:	980d883a 	mov	r6,r19
100041dc:	d9c00104 	addi	r7,sp,4
100041e0:	00083b00 	call	100083b0 <__d2b>
100041e4:	1039883a 	mov	fp,r2
100041e8:	88016a1e 	bne	r17,zero,10004794 <_dtoa_r+0x710>
100041ec:	dd000217 	ldw	r20,8(sp)
100041f0:	dc400117 	ldw	r17,4(sp)
100041f4:	00befbc4 	movi	r2,-1041
100041f8:	a463883a 	add	r17,r20,r17
100041fc:	8882ea16 	blt	r17,r2,10004da8 <_dtoa_r+0xd24>
10004200:	00bf0384 	movi	r2,-1010
10004204:	1445c83a 	sub	r2,r2,r17
10004208:	89010484 	addi	r4,r17,1042
1000420c:	a8aa983a 	sll	r21,r21,r2
10004210:	9108d83a 	srl	r4,r18,r4
10004214:	a908b03a 	or	r4,r21,r4
10004218:	00017900 	call	10001790 <__floatunsidf>
1000421c:	017f8434 	movhi	r5,65040
10004220:	01800044 	movi	r6,1
10004224:	1009883a 	mov	r4,r2
10004228:	194b883a 	add	r5,r3,r5
1000422c:	8c7fffc4 	addi	r17,r17,-1
10004230:	d9800f15 	stw	r6,60(sp)
10004234:	000d883a 	mov	r6,zero
10004238:	01cffe34 	movhi	r7,16376
1000423c:	0000e380 	call	10000e38 <__subdf3>
10004240:	0198dbf4 	movhi	r6,25455
10004244:	01cff4f4 	movhi	r7,16339
10004248:	1009883a 	mov	r4,r2
1000424c:	180b883a 	mov	r5,r3
10004250:	3190d844 	addi	r6,r6,17249
10004254:	39e1e9c4 	addi	r7,r7,-30809
10004258:	000c4540 	call	1000c454 <__muldf3>
1000425c:	01a2d874 	movhi	r6,35681
10004260:	01cff1f4 	movhi	r7,16327
10004264:	180b883a 	mov	r5,r3
10004268:	31b22cc4 	addi	r6,r6,-14157
1000426c:	39e28a04 	addi	r7,r7,-30168
10004270:	1009883a 	mov	r4,r2
10004274:	000ba540 	call	1000ba54 <__adddf3>
10004278:	8809883a 	mov	r4,r17
1000427c:	102d883a 	mov	r22,r2
10004280:	182b883a 	mov	r21,r3
10004284:	000ccc00 	call	1000ccc0 <__floatsidf>
10004288:	019427f4 	movhi	r6,20639
1000428c:	01cff4f4 	movhi	r7,16339
10004290:	1009883a 	mov	r4,r2
10004294:	180b883a 	mov	r5,r3
10004298:	319e7ec4 	addi	r6,r6,31227
1000429c:	39d104c4 	addi	r7,r7,17427
100042a0:	000c4540 	call	1000c454 <__muldf3>
100042a4:	b009883a 	mov	r4,r22
100042a8:	a80b883a 	mov	r5,r21
100042ac:	100d883a 	mov	r6,r2
100042b0:	180f883a 	mov	r7,r3
100042b4:	000ba540 	call	1000ba54 <__adddf3>
100042b8:	1009883a 	mov	r4,r2
100042bc:	180b883a 	mov	r5,r3
100042c0:	102d883a 	mov	r22,r2
100042c4:	182b883a 	mov	r21,r3
100042c8:	00017080 	call	10001708 <__fixdfsi>
100042cc:	b009883a 	mov	r4,r22
100042d0:	a80b883a 	mov	r5,r21
100042d4:	000d883a 	mov	r6,zero
100042d8:	000f883a 	mov	r7,zero
100042dc:	d8800515 	stw	r2,20(sp)
100042e0:	000c3740 	call	1000c374 <__ledf2>
100042e4:	10023116 	blt	r2,zero,10004bac <_dtoa_r+0xb28>
100042e8:	d8c00517 	ldw	r3,20(sp)
100042ec:	00800584 	movi	r2,22
100042f0:	10c21f36 	bltu	r2,r3,10004b70 <_dtoa_r+0xaec>
100042f4:	180490fa 	slli	r2,r3,3
100042f8:	00c40074 	movhi	r3,4097
100042fc:	18fe1604 	addi	r3,r3,-1960
10004300:	1885883a 	add	r2,r3,r2
10004304:	11000017 	ldw	r4,0(r2)
10004308:	11400117 	ldw	r5,4(r2)
1000430c:	900d883a 	mov	r6,r18
10004310:	980f883a 	mov	r7,r19
10004314:	0000d580 	call	10000d58 <__gedf2>
10004318:	0082a70e 	bge	zero,r2,10004db8 <_dtoa_r+0xd34>
1000431c:	d9000517 	ldw	r4,20(sp)
10004320:	d8000c15 	stw	zero,48(sp)
10004324:	213fffc4 	addi	r4,r4,-1
10004328:	d9000515 	stw	r4,20(sp)
1000432c:	a463c83a 	sub	r17,r20,r17
10004330:	8dbfffc4 	addi	r22,r17,-1
10004334:	b0021916 	blt	r22,zero,10004b9c <_dtoa_r+0xb18>
10004338:	d8000815 	stw	zero,32(sp)
1000433c:	d8800517 	ldw	r2,20(sp)
10004340:	10020e16 	blt	r2,zero,10004b7c <_dtoa_r+0xaf8>
10004344:	b0ad883a 	add	r22,r22,r2
10004348:	d8800a15 	stw	r2,40(sp)
1000434c:	d8000915 	stw	zero,36(sp)
10004350:	d8c00317 	ldw	r3,12(sp)
10004354:	00800244 	movi	r2,9
10004358:	10c11a36 	bltu	r2,r3,100047c4 <_dtoa_r+0x740>
1000435c:	00800144 	movi	r2,5
10004360:	10c4fc0e 	bge	r2,r3,10005754 <_dtoa_r+0x16d0>
10004364:	18ffff04 	addi	r3,r3,-4
10004368:	d8c00315 	stw	r3,12(sp)
1000436c:	0029883a 	mov	r20,zero
10004370:	d9800317 	ldw	r6,12(sp)
10004374:	008000c4 	movi	r2,3
10004378:	3083bd26 	beq	r6,r2,10005270 <_dtoa_r+0x11ec>
1000437c:	1183670e 	bge	r2,r6,1000511c <_dtoa_r+0x1098>
10004380:	d8c00317 	ldw	r3,12(sp)
10004384:	00800104 	movi	r2,4
10004388:	1882e726 	beq	r3,r2,10004f28 <_dtoa_r+0xea4>
1000438c:	00800144 	movi	r2,5
10004390:	1884f21e 	bne	r3,r2,1000575c <_dtoa_r+0x16d8>
10004394:	00800044 	movi	r2,1
10004398:	d8800b15 	stw	r2,44(sp)
1000439c:	d8c02217 	ldw	r3,136(sp)
100043a0:	d9000517 	ldw	r4,20(sp)
100043a4:	1907883a 	add	r3,r3,r4
100043a8:	19800044 	addi	r6,r3,1
100043ac:	d8c00d15 	stw	r3,52(sp)
100043b0:	d9800615 	stw	r6,24(sp)
100043b4:	0183c30e 	bge	zero,r6,100052c4 <_dtoa_r+0x1240>
100043b8:	d9800617 	ldw	r6,24(sp)
100043bc:	3023883a 	mov	r17,r6
100043c0:	80001115 	stw	zero,68(r16)
100043c4:	008005c4 	movi	r2,23
100043c8:	1184f62e 	bgeu	r2,r6,100057a4 <_dtoa_r+0x1720>
100043cc:	00c00044 	movi	r3,1
100043d0:	00800104 	movi	r2,4
100043d4:	1085883a 	add	r2,r2,r2
100043d8:	11000504 	addi	r4,r2,20
100043dc:	180b883a 	mov	r5,r3
100043e0:	18c00044 	addi	r3,r3,1
100043e4:	313ffb2e 	bgeu	r6,r4,100043d4 <__alt_data_end+0xf80043d4>
100043e8:	81401115 	stw	r5,68(r16)
100043ec:	8009883a 	mov	r4,r16
100043f0:	00076c00 	call	100076c0 <_Balloc>
100043f4:	d8800715 	stw	r2,28(sp)
100043f8:	80801015 	stw	r2,64(r16)
100043fc:	00800384 	movi	r2,14
10004400:	1440fd36 	bltu	r2,r17,100047f8 <_dtoa_r+0x774>
10004404:	a000fc26 	beq	r20,zero,100047f8 <_dtoa_r+0x774>
10004408:	d8800517 	ldw	r2,20(sp)
1000440c:	0083b90e 	bge	zero,r2,100052f4 <_dtoa_r+0x1270>
10004410:	d8c00517 	ldw	r3,20(sp)
10004414:	108003cc 	andi	r2,r2,15
10004418:	100490fa 	slli	r2,r2,3
1000441c:	182fd13a 	srai	r23,r3,4
10004420:	00c40074 	movhi	r3,4097
10004424:	18fe1604 	addi	r3,r3,-1960
10004428:	1885883a 	add	r2,r3,r2
1000442c:	b8c0040c 	andi	r3,r23,16
10004430:	12c00017 	ldw	r11,0(r2)
10004434:	12800117 	ldw	r10,4(r2)
10004438:	18039726 	beq	r3,zero,10005298 <_dtoa_r+0x1214>
1000443c:	00840074 	movhi	r2,4097
10004440:	10be0c04 	addi	r2,r2,-2000
10004444:	11800817 	ldw	r6,32(r2)
10004448:	11c00917 	ldw	r7,36(r2)
1000444c:	9009883a 	mov	r4,r18
10004450:	980b883a 	mov	r5,r19
10004454:	da801615 	stw	r10,88(sp)
10004458:	dac01515 	stw	r11,84(sp)
1000445c:	00003d80 	call	100003d8 <__divdf3>
10004460:	da801617 	ldw	r10,88(sp)
10004464:	dac01517 	ldw	r11,84(sp)
10004468:	bdc003cc 	andi	r23,r23,15
1000446c:	044000c4 	movi	r17,3
10004470:	d8800e15 	stw	r2,56(sp)
10004474:	182b883a 	mov	r21,r3
10004478:	b8001126 	beq	r23,zero,100044c0 <_dtoa_r+0x43c>
1000447c:	05040074 	movhi	r20,4097
10004480:	a53e0c04 	addi	r20,r20,-2000
10004484:	5805883a 	mov	r2,r11
10004488:	5007883a 	mov	r3,r10
1000448c:	b980004c 	andi	r6,r23,1
10004490:	1009883a 	mov	r4,r2
10004494:	b82fd07a 	srai	r23,r23,1
10004498:	180b883a 	mov	r5,r3
1000449c:	30000426 	beq	r6,zero,100044b0 <_dtoa_r+0x42c>
100044a0:	a1800017 	ldw	r6,0(r20)
100044a4:	a1c00117 	ldw	r7,4(r20)
100044a8:	8c400044 	addi	r17,r17,1
100044ac:	000c4540 	call	1000c454 <__muldf3>
100044b0:	a5000204 	addi	r20,r20,8
100044b4:	b83ff51e 	bne	r23,zero,1000448c <__alt_data_end+0xf800448c>
100044b8:	1017883a 	mov	r11,r2
100044bc:	1815883a 	mov	r10,r3
100044c0:	d9000e17 	ldw	r4,56(sp)
100044c4:	a80b883a 	mov	r5,r21
100044c8:	580d883a 	mov	r6,r11
100044cc:	500f883a 	mov	r7,r10
100044d0:	00003d80 	call	100003d8 <__divdf3>
100044d4:	1029883a 	mov	r20,r2
100044d8:	182b883a 	mov	r21,r3
100044dc:	d9800c17 	ldw	r6,48(sp)
100044e0:	30000626 	beq	r6,zero,100044fc <_dtoa_r+0x478>
100044e4:	a009883a 	mov	r4,r20
100044e8:	a80b883a 	mov	r5,r21
100044ec:	000d883a 	mov	r6,zero
100044f0:	01cffc34 	movhi	r7,16368
100044f4:	000c3740 	call	1000c374 <__ledf2>
100044f8:	10043216 	blt	r2,zero,100055c4 <_dtoa_r+0x1540>
100044fc:	8809883a 	mov	r4,r17
10004500:	000ccc00 	call	1000ccc0 <__floatsidf>
10004504:	1009883a 	mov	r4,r2
10004508:	180b883a 	mov	r5,r3
1000450c:	a00d883a 	mov	r6,r20
10004510:	a80f883a 	mov	r7,r21
10004514:	000c4540 	call	1000c454 <__muldf3>
10004518:	000d883a 	mov	r6,zero
1000451c:	1009883a 	mov	r4,r2
10004520:	180b883a 	mov	r5,r3
10004524:	01d00734 	movhi	r7,16412
10004528:	000ba540 	call	1000ba54 <__adddf3>
1000452c:	1023883a 	mov	r17,r2
10004530:	d9800617 	ldw	r6,24(sp)
10004534:	00bf3034 	movhi	r2,64704
10004538:	1885883a 	add	r2,r3,r2
1000453c:	d8800e15 	stw	r2,56(sp)
10004540:	30032e26 	beq	r6,zero,100051fc <_dtoa_r+0x1178>
10004544:	d8c00517 	ldw	r3,20(sp)
10004548:	da800617 	ldw	r10,24(sp)
1000454c:	d8c01215 	stw	r3,72(sp)
10004550:	d9000b17 	ldw	r4,44(sp)
10004554:	2003b026 	beq	r4,zero,10005418 <_dtoa_r+0x1394>
10004558:	50bfffc4 	addi	r2,r10,-1
1000455c:	100490fa 	slli	r2,r2,3
10004560:	00c40074 	movhi	r3,4097
10004564:	18fe1604 	addi	r3,r3,-1960
10004568:	1885883a 	add	r2,r3,r2
1000456c:	11800017 	ldw	r6,0(r2)
10004570:	11c00117 	ldw	r7,4(r2)
10004574:	d8800717 	ldw	r2,28(sp)
10004578:	0009883a 	mov	r4,zero
1000457c:	014ff834 	movhi	r5,16352
10004580:	da801615 	stw	r10,88(sp)
10004584:	15c00044 	addi	r23,r2,1
10004588:	00003d80 	call	100003d8 <__divdf3>
1000458c:	d9c00e17 	ldw	r7,56(sp)
10004590:	880d883a 	mov	r6,r17
10004594:	1009883a 	mov	r4,r2
10004598:	180b883a 	mov	r5,r3
1000459c:	0000e380 	call	10000e38 <__subdf3>
100045a0:	a80b883a 	mov	r5,r21
100045a4:	a009883a 	mov	r4,r20
100045a8:	d8c01015 	stw	r3,64(sp)
100045ac:	d8800e15 	stw	r2,56(sp)
100045b0:	00017080 	call	10001708 <__fixdfsi>
100045b4:	1009883a 	mov	r4,r2
100045b8:	d8801715 	stw	r2,92(sp)
100045bc:	000ccc00 	call	1000ccc0 <__floatsidf>
100045c0:	a009883a 	mov	r4,r20
100045c4:	a80b883a 	mov	r5,r21
100045c8:	100d883a 	mov	r6,r2
100045cc:	180f883a 	mov	r7,r3
100045d0:	0000e380 	call	10000e38 <__subdf3>
100045d4:	da001717 	ldw	r8,92(sp)
100045d8:	1829883a 	mov	r20,r3
100045dc:	d8c00717 	ldw	r3,28(sp)
100045e0:	d9000e17 	ldw	r4,56(sp)
100045e4:	d9401017 	ldw	r5,64(sp)
100045e8:	42000c04 	addi	r8,r8,48
100045ec:	1023883a 	mov	r17,r2
100045f0:	1a000005 	stb	r8,0(r3)
100045f4:	880d883a 	mov	r6,r17
100045f8:	a00f883a 	mov	r7,r20
100045fc:	402b883a 	mov	r21,r8
10004600:	0000d580 	call	10000d58 <__gedf2>
10004604:	00844516 	blt	zero,r2,1000571c <_dtoa_r+0x1698>
10004608:	0009883a 	mov	r4,zero
1000460c:	014ffc34 	movhi	r5,16368
10004610:	880d883a 	mov	r6,r17
10004614:	a00f883a 	mov	r7,r20
10004618:	0000e380 	call	10000e38 <__subdf3>
1000461c:	d9000e17 	ldw	r4,56(sp)
10004620:	d9401017 	ldw	r5,64(sp)
10004624:	100d883a 	mov	r6,r2
10004628:	180f883a 	mov	r7,r3
1000462c:	0000d580 	call	10000d58 <__gedf2>
10004630:	da801617 	ldw	r10,88(sp)
10004634:	00843616 	blt	zero,r2,10005710 <_dtoa_r+0x168c>
10004638:	00800044 	movi	r2,1
1000463c:	12806e0e 	bge	r2,r10,100047f8 <_dtoa_r+0x774>
10004640:	d9000717 	ldw	r4,28(sp)
10004644:	dd801315 	stw	r22,76(sp)
10004648:	dc001115 	stw	r16,68(sp)
1000464c:	2295883a 	add	r10,r4,r10
10004650:	dcc01415 	stw	r19,80(sp)
10004654:	502d883a 	mov	r22,r10
10004658:	dcc01017 	ldw	r19,64(sp)
1000465c:	b821883a 	mov	r16,r23
10004660:	dc801015 	stw	r18,64(sp)
10004664:	dc800e17 	ldw	r18,56(sp)
10004668:	00000906 	br	10004690 <_dtoa_r+0x60c>
1000466c:	0000e380 	call	10000e38 <__subdf3>
10004670:	1009883a 	mov	r4,r2
10004674:	180b883a 	mov	r5,r3
10004678:	900d883a 	mov	r6,r18
1000467c:	980f883a 	mov	r7,r19
10004680:	000c3740 	call	1000c374 <__ledf2>
10004684:	10040e16 	blt	r2,zero,100056c0 <_dtoa_r+0x163c>
10004688:	b821883a 	mov	r16,r23
1000468c:	bd841026 	beq	r23,r22,100056d0 <_dtoa_r+0x164c>
10004690:	9009883a 	mov	r4,r18
10004694:	980b883a 	mov	r5,r19
10004698:	000d883a 	mov	r6,zero
1000469c:	01d00934 	movhi	r7,16420
100046a0:	000c4540 	call	1000c454 <__muldf3>
100046a4:	000d883a 	mov	r6,zero
100046a8:	01d00934 	movhi	r7,16420
100046ac:	8809883a 	mov	r4,r17
100046b0:	a00b883a 	mov	r5,r20
100046b4:	1025883a 	mov	r18,r2
100046b8:	1827883a 	mov	r19,r3
100046bc:	000c4540 	call	1000c454 <__muldf3>
100046c0:	180b883a 	mov	r5,r3
100046c4:	1009883a 	mov	r4,r2
100046c8:	1823883a 	mov	r17,r3
100046cc:	1029883a 	mov	r20,r2
100046d0:	00017080 	call	10001708 <__fixdfsi>
100046d4:	1009883a 	mov	r4,r2
100046d8:	102b883a 	mov	r21,r2
100046dc:	000ccc00 	call	1000ccc0 <__floatsidf>
100046e0:	a009883a 	mov	r4,r20
100046e4:	880b883a 	mov	r5,r17
100046e8:	100d883a 	mov	r6,r2
100046ec:	180f883a 	mov	r7,r3
100046f0:	0000e380 	call	10000e38 <__subdf3>
100046f4:	ad400c04 	addi	r21,r21,48
100046f8:	1009883a 	mov	r4,r2
100046fc:	180b883a 	mov	r5,r3
10004700:	900d883a 	mov	r6,r18
10004704:	980f883a 	mov	r7,r19
10004708:	85400005 	stb	r21,0(r16)
1000470c:	1023883a 	mov	r17,r2
10004710:	1829883a 	mov	r20,r3
10004714:	000c3740 	call	1000c374 <__ledf2>
10004718:	bdc00044 	addi	r23,r23,1
1000471c:	0009883a 	mov	r4,zero
10004720:	014ffc34 	movhi	r5,16368
10004724:	880d883a 	mov	r6,r17
10004728:	a00f883a 	mov	r7,r20
1000472c:	103fcf0e 	bge	r2,zero,1000466c <__alt_data_end+0xf800466c>
10004730:	d9801217 	ldw	r6,72(sp)
10004734:	dc001117 	ldw	r16,68(sp)
10004738:	d9800515 	stw	r6,20(sp)
1000473c:	8009883a 	mov	r4,r16
10004740:	e00b883a 	mov	r5,fp
10004744:	00077680 	call	10007768 <_Bfree>
10004748:	d8c00517 	ldw	r3,20(sp)
1000474c:	d9002317 	ldw	r4,140(sp)
10004750:	d9802517 	ldw	r6,148(sp)
10004754:	b8000005 	stb	zero,0(r23)
10004758:	18800044 	addi	r2,r3,1
1000475c:	20800015 	stw	r2,0(r4)
10004760:	30027226 	beq	r6,zero,1000512c <_dtoa_r+0x10a8>
10004764:	35c00015 	stw	r23,0(r6)
10004768:	d8800717 	ldw	r2,28(sp)
1000476c:	003e7406 	br	10004140 <__alt_data_end+0xf8004140>
10004770:	00800434 	movhi	r2,16
10004774:	10bfffc4 	addi	r2,r2,-1
10004778:	a8aa703a 	and	r21,r21,r2
1000477c:	a83e801e 	bne	r21,zero,10004180 <__alt_data_end+0xf8004180>
10004780:	00840074 	movhi	r2,4097
10004784:	10bdf804 	addi	r2,r2,-2080
10004788:	003e7f06 	br	10004188 <__alt_data_end+0xf8004188>
1000478c:	10c00204 	addi	r3,r2,8
10004790:	003e8206 	br	1000419c <__alt_data_end+0xf800419c>
10004794:	01400434 	movhi	r5,16
10004798:	297fffc4 	addi	r5,r5,-1
1000479c:	994a703a 	and	r5,r19,r5
100047a0:	9009883a 	mov	r4,r18
100047a4:	8c7f0044 	addi	r17,r17,-1023
100047a8:	294ffc34 	orhi	r5,r5,16368
100047ac:	dd000217 	ldw	r20,8(sp)
100047b0:	d8000f15 	stw	zero,60(sp)
100047b4:	003e9f06 	br	10004234 <__alt_data_end+0xf8004234>
100047b8:	00840074 	movhi	r2,4097
100047bc:	10bdef04 	addi	r2,r2,-2116
100047c0:	003e5f06 	br	10004140 <__alt_data_end+0xf8004140>
100047c4:	80001115 	stw	zero,68(r16)
100047c8:	8009883a 	mov	r4,r16
100047cc:	000b883a 	mov	r5,zero
100047d0:	00076c00 	call	100076c0 <_Balloc>
100047d4:	01bfffc4 	movi	r6,-1
100047d8:	d8800715 	stw	r2,28(sp)
100047dc:	80801015 	stw	r2,64(r16)
100047e0:	00800044 	movi	r2,1
100047e4:	d9800615 	stw	r6,24(sp)
100047e8:	d8800b15 	stw	r2,44(sp)
100047ec:	d8002215 	stw	zero,136(sp)
100047f0:	d9800d15 	stw	r6,52(sp)
100047f4:	d8000315 	stw	zero,12(sp)
100047f8:	d8800117 	ldw	r2,4(sp)
100047fc:	10008e16 	blt	r2,zero,10004a38 <_dtoa_r+0x9b4>
10004800:	d9000517 	ldw	r4,20(sp)
10004804:	00c00384 	movi	r3,14
10004808:	19008b16 	blt	r3,r4,10004a38 <_dtoa_r+0x9b4>
1000480c:	200490fa 	slli	r2,r4,3
10004810:	00c40074 	movhi	r3,4097
10004814:	d9802217 	ldw	r6,136(sp)
10004818:	18fe1604 	addi	r3,r3,-1960
1000481c:	1885883a 	add	r2,r3,r2
10004820:	14400017 	ldw	r17,0(r2)
10004824:	15000117 	ldw	r20,4(r2)
10004828:	3001c716 	blt	r6,zero,10004f48 <_dtoa_r+0xec4>
1000482c:	880d883a 	mov	r6,r17
10004830:	a00f883a 	mov	r7,r20
10004834:	9009883a 	mov	r4,r18
10004838:	980b883a 	mov	r5,r19
1000483c:	00003d80 	call	100003d8 <__divdf3>
10004840:	180b883a 	mov	r5,r3
10004844:	1009883a 	mov	r4,r2
10004848:	00017080 	call	10001708 <__fixdfsi>
1000484c:	1009883a 	mov	r4,r2
10004850:	102d883a 	mov	r22,r2
10004854:	000ccc00 	call	1000ccc0 <__floatsidf>
10004858:	1009883a 	mov	r4,r2
1000485c:	180b883a 	mov	r5,r3
10004860:	880d883a 	mov	r6,r17
10004864:	a00f883a 	mov	r7,r20
10004868:	000c4540 	call	1000c454 <__muldf3>
1000486c:	9009883a 	mov	r4,r18
10004870:	980b883a 	mov	r5,r19
10004874:	100d883a 	mov	r6,r2
10004878:	180f883a 	mov	r7,r3
1000487c:	0000e380 	call	10000e38 <__subdf3>
10004880:	d9000717 	ldw	r4,28(sp)
10004884:	d9800617 	ldw	r6,24(sp)
10004888:	180b883a 	mov	r5,r3
1000488c:	b0c00c04 	addi	r3,r22,48
10004890:	20c00005 	stb	r3,0(r4)
10004894:	25c00044 	addi	r23,r4,1
10004898:	01000044 	movi	r4,1
1000489c:	1011883a 	mov	r8,r2
100048a0:	2807883a 	mov	r3,r5
100048a4:	31003d26 	beq	r6,r4,1000499c <_dtoa_r+0x918>
100048a8:	000d883a 	mov	r6,zero
100048ac:	01d00934 	movhi	r7,16420
100048b0:	1009883a 	mov	r4,r2
100048b4:	000c4540 	call	1000c454 <__muldf3>
100048b8:	1009883a 	mov	r4,r2
100048bc:	180b883a 	mov	r5,r3
100048c0:	000d883a 	mov	r6,zero
100048c4:	000f883a 	mov	r7,zero
100048c8:	1027883a 	mov	r19,r2
100048cc:	182b883a 	mov	r21,r3
100048d0:	000c2f00 	call	1000c2f0 <__eqdf2>
100048d4:	103f9926 	beq	r2,zero,1000473c <__alt_data_end+0xf800473c>
100048d8:	d8c00617 	ldw	r3,24(sp)
100048dc:	d9000717 	ldw	r4,28(sp)
100048e0:	b825883a 	mov	r18,r23
100048e4:	18bfffc4 	addi	r2,r3,-1
100048e8:	20ad883a 	add	r22,r4,r2
100048ec:	dc000315 	stw	r16,12(sp)
100048f0:	00000a06 	br	1000491c <_dtoa_r+0x898>
100048f4:	000c4540 	call	1000c454 <__muldf3>
100048f8:	1009883a 	mov	r4,r2
100048fc:	180b883a 	mov	r5,r3
10004900:	000d883a 	mov	r6,zero
10004904:	000f883a 	mov	r7,zero
10004908:	1027883a 	mov	r19,r2
1000490c:	182b883a 	mov	r21,r3
10004910:	b825883a 	mov	r18,r23
10004914:	000c2f00 	call	1000c2f0 <__eqdf2>
10004918:	10022626 	beq	r2,zero,100051b4 <_dtoa_r+0x1130>
1000491c:	880d883a 	mov	r6,r17
10004920:	a00f883a 	mov	r7,r20
10004924:	9809883a 	mov	r4,r19
10004928:	a80b883a 	mov	r5,r21
1000492c:	00003d80 	call	100003d8 <__divdf3>
10004930:	180b883a 	mov	r5,r3
10004934:	1009883a 	mov	r4,r2
10004938:	00017080 	call	10001708 <__fixdfsi>
1000493c:	1009883a 	mov	r4,r2
10004940:	1021883a 	mov	r16,r2
10004944:	000ccc00 	call	1000ccc0 <__floatsidf>
10004948:	1009883a 	mov	r4,r2
1000494c:	180b883a 	mov	r5,r3
10004950:	880d883a 	mov	r6,r17
10004954:	a00f883a 	mov	r7,r20
10004958:	000c4540 	call	1000c454 <__muldf3>
1000495c:	9809883a 	mov	r4,r19
10004960:	a80b883a 	mov	r5,r21
10004964:	100d883a 	mov	r6,r2
10004968:	180f883a 	mov	r7,r3
1000496c:	0000e380 	call	10000e38 <__subdf3>
10004970:	82000c04 	addi	r8,r16,48
10004974:	92000005 	stb	r8,0(r18)
10004978:	1009883a 	mov	r4,r2
1000497c:	180b883a 	mov	r5,r3
10004980:	000d883a 	mov	r6,zero
10004984:	01d00934 	movhi	r7,16420
10004988:	1011883a 	mov	r8,r2
1000498c:	bdc00044 	addi	r23,r23,1
10004990:	95bfd81e 	bne	r18,r22,100048f4 <__alt_data_end+0xf80048f4>
10004994:	802d883a 	mov	r22,r16
10004998:	dc000317 	ldw	r16,12(sp)
1000499c:	4009883a 	mov	r4,r8
100049a0:	180b883a 	mov	r5,r3
100049a4:	400d883a 	mov	r6,r8
100049a8:	180f883a 	mov	r7,r3
100049ac:	000ba540 	call	1000ba54 <__adddf3>
100049b0:	8809883a 	mov	r4,r17
100049b4:	a00b883a 	mov	r5,r20
100049b8:	100d883a 	mov	r6,r2
100049bc:	180f883a 	mov	r7,r3
100049c0:	1027883a 	mov	r19,r2
100049c4:	1825883a 	mov	r18,r3
100049c8:	000c3740 	call	1000c374 <__ledf2>
100049cc:	10000816 	blt	r2,zero,100049f0 <_dtoa_r+0x96c>
100049d0:	8809883a 	mov	r4,r17
100049d4:	a00b883a 	mov	r5,r20
100049d8:	980d883a 	mov	r6,r19
100049dc:	900f883a 	mov	r7,r18
100049e0:	000c2f00 	call	1000c2f0 <__eqdf2>
100049e4:	103f551e 	bne	r2,zero,1000473c <__alt_data_end+0xf800473c>
100049e8:	b580004c 	andi	r22,r22,1
100049ec:	b03f5326 	beq	r22,zero,1000473c <__alt_data_end+0xf800473c>
100049f0:	bd7fffc3 	ldbu	r21,-1(r23)
100049f4:	b8bfffc4 	addi	r2,r23,-1
100049f8:	1007883a 	mov	r3,r2
100049fc:	01400e44 	movi	r5,57
10004a00:	d9800717 	ldw	r6,28(sp)
10004a04:	00000506 	br	10004a1c <_dtoa_r+0x998>
10004a08:	18ffffc4 	addi	r3,r3,-1
10004a0c:	30825e26 	beq	r6,r2,10005388 <_dtoa_r+0x1304>
10004a10:	1d400003 	ldbu	r21,0(r3)
10004a14:	102f883a 	mov	r23,r2
10004a18:	10bfffc4 	addi	r2,r2,-1
10004a1c:	a9003fcc 	andi	r4,r21,255
10004a20:	2100201c 	xori	r4,r4,128
10004a24:	213fe004 	addi	r4,r4,-128
10004a28:	217ff726 	beq	r4,r5,10004a08 <__alt_data_end+0xf8004a08>
10004a2c:	aa000044 	addi	r8,r21,1
10004a30:	12000005 	stb	r8,0(r2)
10004a34:	003f4106 	br	1000473c <__alt_data_end+0xf800473c>
10004a38:	d8c00b17 	ldw	r3,44(sp)
10004a3c:	18006726 	beq	r3,zero,10004bdc <_dtoa_r+0xb58>
10004a40:	d9000317 	ldw	r4,12(sp)
10004a44:	00c00044 	movi	r3,1
10004a48:	19016a0e 	bge	r3,r4,10004ff4 <_dtoa_r+0xf70>
10004a4c:	d8800617 	ldw	r2,24(sp)
10004a50:	d8c00917 	ldw	r3,36(sp)
10004a54:	157fffc4 	addi	r21,r2,-1
10004a58:	1d420716 	blt	r3,r21,10005278 <_dtoa_r+0x11f4>
10004a5c:	1d6bc83a 	sub	r21,r3,r21
10004a60:	d8800617 	ldw	r2,24(sp)
10004a64:	1002c716 	blt	r2,zero,10005584 <_dtoa_r+0x1500>
10004a68:	dd000817 	ldw	r20,32(sp)
10004a6c:	d8800617 	ldw	r2,24(sp)
10004a70:	d9800817 	ldw	r6,32(sp)
10004a74:	8009883a 	mov	r4,r16
10004a78:	01400044 	movi	r5,1
10004a7c:	308d883a 	add	r6,r6,r2
10004a80:	d9800815 	stw	r6,32(sp)
10004a84:	b0ad883a 	add	r22,r22,r2
10004a88:	0007ae80 	call	10007ae8 <__i2b>
10004a8c:	1023883a 	mov	r17,r2
10004a90:	a0000826 	beq	r20,zero,10004ab4 <_dtoa_r+0xa30>
10004a94:	0580070e 	bge	zero,r22,10004ab4 <_dtoa_r+0xa30>
10004a98:	b005883a 	mov	r2,r22
10004a9c:	a5812016 	blt	r20,r22,10004f20 <_dtoa_r+0xe9c>
10004aa0:	d8c00817 	ldw	r3,32(sp)
10004aa4:	a0a9c83a 	sub	r20,r20,r2
10004aa8:	b0adc83a 	sub	r22,r22,r2
10004aac:	1887c83a 	sub	r3,r3,r2
10004ab0:	d8c00815 	stw	r3,32(sp)
10004ab4:	d9000917 	ldw	r4,36(sp)
10004ab8:	0100140e 	bge	zero,r4,10004b0c <_dtoa_r+0xa88>
10004abc:	d9800b17 	ldw	r6,44(sp)
10004ac0:	3001e526 	beq	r6,zero,10005258 <_dtoa_r+0x11d4>
10004ac4:	05400e0e 	bge	zero,r21,10004b00 <_dtoa_r+0xa7c>
10004ac8:	880b883a 	mov	r5,r17
10004acc:	8009883a 	mov	r4,r16
10004ad0:	a80d883a 	mov	r6,r21
10004ad4:	0007db40 	call	10007db4 <__pow5mult>
10004ad8:	e00d883a 	mov	r6,fp
10004adc:	8009883a 	mov	r4,r16
10004ae0:	100b883a 	mov	r5,r2
10004ae4:	1023883a 	mov	r17,r2
10004ae8:	0007b240 	call	10007b24 <__multiply>
10004aec:	102f883a 	mov	r23,r2
10004af0:	e00b883a 	mov	r5,fp
10004af4:	8009883a 	mov	r4,r16
10004af8:	00077680 	call	10007768 <_Bfree>
10004afc:	b839883a 	mov	fp,r23
10004b00:	d8800917 	ldw	r2,36(sp)
10004b04:	154dc83a 	sub	r6,r2,r21
10004b08:	3001281e 	bne	r6,zero,10004fac <_dtoa_r+0xf28>
10004b0c:	05c00044 	movi	r23,1
10004b10:	8009883a 	mov	r4,r16
10004b14:	b80b883a 	mov	r5,r23
10004b18:	0007ae80 	call	10007ae8 <__i2b>
10004b1c:	d8c00a17 	ldw	r3,40(sp)
10004b20:	102b883a 	mov	r21,r2
10004b24:	00c0310e 	bge	zero,r3,10004bec <_dtoa_r+0xb68>
10004b28:	8009883a 	mov	r4,r16
10004b2c:	100b883a 	mov	r5,r2
10004b30:	180d883a 	mov	r6,r3
10004b34:	0007db40 	call	10007db4 <__pow5mult>
10004b38:	d9000317 	ldw	r4,12(sp)
10004b3c:	102b883a 	mov	r21,r2
10004b40:	b9011f0e 	bge	r23,r4,10004fc0 <_dtoa_r+0xf3c>
10004b44:	0027883a 	mov	r19,zero
10004b48:	a8800417 	ldw	r2,16(r21)
10004b4c:	10800104 	addi	r2,r2,4
10004b50:	1085883a 	add	r2,r2,r2
10004b54:	1085883a 	add	r2,r2,r2
10004b58:	a885883a 	add	r2,r21,r2
10004b5c:	11000017 	ldw	r4,0(r2)
10004b60:	00079d00 	call	100079d0 <__hi0bits>
10004b64:	00c00804 	movi	r3,32
10004b68:	1885c83a 	sub	r2,r3,r2
10004b6c:	00002506 	br	10004c04 <_dtoa_r+0xb80>
10004b70:	01800044 	movi	r6,1
10004b74:	d9800c15 	stw	r6,48(sp)
10004b78:	003dec06 	br	1000432c <__alt_data_end+0xf800432c>
10004b7c:	d8c00817 	ldw	r3,32(sp)
10004b80:	d9000517 	ldw	r4,20(sp)
10004b84:	d8000a15 	stw	zero,40(sp)
10004b88:	1907c83a 	sub	r3,r3,r4
10004b8c:	010dc83a 	sub	r6,zero,r4
10004b90:	d8c00815 	stw	r3,32(sp)
10004b94:	d9800915 	stw	r6,36(sp)
10004b98:	003ded06 	br	10004350 <__alt_data_end+0xf8004350>
10004b9c:	05adc83a 	sub	r22,zero,r22
10004ba0:	dd800815 	stw	r22,32(sp)
10004ba4:	002d883a 	mov	r22,zero
10004ba8:	003de406 	br	1000433c <__alt_data_end+0xf800433c>
10004bac:	d9000517 	ldw	r4,20(sp)
10004bb0:	000ccc00 	call	1000ccc0 <__floatsidf>
10004bb4:	1009883a 	mov	r4,r2
10004bb8:	180b883a 	mov	r5,r3
10004bbc:	b00d883a 	mov	r6,r22
10004bc0:	a80f883a 	mov	r7,r21
10004bc4:	000c2f00 	call	1000c2f0 <__eqdf2>
10004bc8:	103dc726 	beq	r2,zero,100042e8 <__alt_data_end+0xf80042e8>
10004bcc:	d8800517 	ldw	r2,20(sp)
10004bd0:	10bfffc4 	addi	r2,r2,-1
10004bd4:	d8800515 	stw	r2,20(sp)
10004bd8:	003dc306 	br	100042e8 <__alt_data_end+0xf80042e8>
10004bdc:	dd400917 	ldw	r21,36(sp)
10004be0:	dd000817 	ldw	r20,32(sp)
10004be4:	0023883a 	mov	r17,zero
10004be8:	003fa906 	br	10004a90 <__alt_data_end+0xf8004a90>
10004bec:	d9800317 	ldw	r6,12(sp)
10004bf0:	b981670e 	bge	r23,r6,10005190 <_dtoa_r+0x110c>
10004bf4:	0027883a 	mov	r19,zero
10004bf8:	d8c00a17 	ldw	r3,40(sp)
10004bfc:	183fd21e 	bne	r3,zero,10004b48 <__alt_data_end+0xf8004b48>
10004c00:	00800044 	movi	r2,1
10004c04:	1585883a 	add	r2,r2,r22
10004c08:	108007cc 	andi	r2,r2,31
10004c0c:	10005f26 	beq	r2,zero,10004d8c <_dtoa_r+0xd08>
10004c10:	00c00804 	movi	r3,32
10004c14:	1887c83a 	sub	r3,r3,r2
10004c18:	01000104 	movi	r4,4
10004c1c:	20c2dd0e 	bge	r4,r3,10005794 <_dtoa_r+0x1710>
10004c20:	d9000817 	ldw	r4,32(sp)
10004c24:	00c00704 	movi	r3,28
10004c28:	1885c83a 	sub	r2,r3,r2
10004c2c:	2089883a 	add	r4,r4,r2
10004c30:	d9000815 	stw	r4,32(sp)
10004c34:	a0a9883a 	add	r20,r20,r2
10004c38:	b0ad883a 	add	r22,r22,r2
10004c3c:	d8800817 	ldw	r2,32(sp)
10004c40:	0080050e 	bge	zero,r2,10004c58 <_dtoa_r+0xbd4>
10004c44:	e00b883a 	mov	r5,fp
10004c48:	8009883a 	mov	r4,r16
10004c4c:	100d883a 	mov	r6,r2
10004c50:	0007ef40 	call	10007ef4 <__lshift>
10004c54:	1039883a 	mov	fp,r2
10004c58:	0580050e 	bge	zero,r22,10004c70 <_dtoa_r+0xbec>
10004c5c:	a80b883a 	mov	r5,r21
10004c60:	8009883a 	mov	r4,r16
10004c64:	b00d883a 	mov	r6,r22
10004c68:	0007ef40 	call	10007ef4 <__lshift>
10004c6c:	102b883a 	mov	r21,r2
10004c70:	d8c00c17 	ldw	r3,48(sp)
10004c74:	1801161e 	bne	r3,zero,100050d0 <_dtoa_r+0x104c>
10004c78:	d8c00617 	ldw	r3,24(sp)
10004c7c:	00c12d0e 	bge	zero,r3,10005134 <_dtoa_r+0x10b0>
10004c80:	d8c00b17 	ldw	r3,44(sp)
10004c84:	1800571e 	bne	r3,zero,10004de4 <_dtoa_r+0xd60>
10004c88:	dc800717 	ldw	r18,28(sp)
10004c8c:	dcc00617 	ldw	r19,24(sp)
10004c90:	9029883a 	mov	r20,r18
10004c94:	00000206 	br	10004ca0 <_dtoa_r+0xc1c>
10004c98:	00077900 	call	10007790 <__multadd>
10004c9c:	1039883a 	mov	fp,r2
10004ca0:	e009883a 	mov	r4,fp
10004ca4:	a80b883a 	mov	r5,r21
10004ca8:	0003e5c0 	call	10003e5c <quorem>
10004cac:	10800c04 	addi	r2,r2,48
10004cb0:	90800005 	stb	r2,0(r18)
10004cb4:	94800044 	addi	r18,r18,1
10004cb8:	9507c83a 	sub	r3,r18,r20
10004cbc:	8009883a 	mov	r4,r16
10004cc0:	e00b883a 	mov	r5,fp
10004cc4:	01800284 	movi	r6,10
10004cc8:	000f883a 	mov	r7,zero
10004ccc:	1cfff216 	blt	r3,r19,10004c98 <__alt_data_end+0xf8004c98>
10004cd0:	1011883a 	mov	r8,r2
10004cd4:	d8800617 	ldw	r2,24(sp)
10004cd8:	00822e0e 	bge	zero,r2,10005594 <_dtoa_r+0x1510>
10004cdc:	d9000717 	ldw	r4,28(sp)
10004ce0:	0025883a 	mov	r18,zero
10004ce4:	20af883a 	add	r23,r4,r2
10004ce8:	e00b883a 	mov	r5,fp
10004cec:	01800044 	movi	r6,1
10004cf0:	8009883a 	mov	r4,r16
10004cf4:	da001715 	stw	r8,92(sp)
10004cf8:	0007ef40 	call	10007ef4 <__lshift>
10004cfc:	1009883a 	mov	r4,r2
10004d00:	a80b883a 	mov	r5,r21
10004d04:	1039883a 	mov	fp,r2
10004d08:	000803c0 	call	1000803c <__mcmp>
10004d0c:	da001717 	ldw	r8,92(sp)
10004d10:	00816e0e 	bge	zero,r2,100052cc <_dtoa_r+0x1248>
10004d14:	b93fffc3 	ldbu	r4,-1(r23)
10004d18:	b8bfffc4 	addi	r2,r23,-1
10004d1c:	1007883a 	mov	r3,r2
10004d20:	01800e44 	movi	r6,57
10004d24:	d9c00717 	ldw	r7,28(sp)
10004d28:	00000506 	br	10004d40 <_dtoa_r+0xcbc>
10004d2c:	18ffffc4 	addi	r3,r3,-1
10004d30:	38811926 	beq	r7,r2,10005198 <_dtoa_r+0x1114>
10004d34:	19000003 	ldbu	r4,0(r3)
10004d38:	102f883a 	mov	r23,r2
10004d3c:	10bfffc4 	addi	r2,r2,-1
10004d40:	21403fcc 	andi	r5,r4,255
10004d44:	2940201c 	xori	r5,r5,128
10004d48:	297fe004 	addi	r5,r5,-128
10004d4c:	29bff726 	beq	r5,r6,10004d2c <__alt_data_end+0xf8004d2c>
10004d50:	21000044 	addi	r4,r4,1
10004d54:	11000005 	stb	r4,0(r2)
10004d58:	8009883a 	mov	r4,r16
10004d5c:	a80b883a 	mov	r5,r21
10004d60:	00077680 	call	10007768 <_Bfree>
10004d64:	883e7526 	beq	r17,zero,1000473c <__alt_data_end+0xf800473c>
10004d68:	90000426 	beq	r18,zero,10004d7c <_dtoa_r+0xcf8>
10004d6c:	94400326 	beq	r18,r17,10004d7c <_dtoa_r+0xcf8>
10004d70:	8009883a 	mov	r4,r16
10004d74:	900b883a 	mov	r5,r18
10004d78:	00077680 	call	10007768 <_Bfree>
10004d7c:	8009883a 	mov	r4,r16
10004d80:	880b883a 	mov	r5,r17
10004d84:	00077680 	call	10007768 <_Bfree>
10004d88:	003e6c06 	br	1000473c <__alt_data_end+0xf800473c>
10004d8c:	00800704 	movi	r2,28
10004d90:	d9800817 	ldw	r6,32(sp)
10004d94:	a0a9883a 	add	r20,r20,r2
10004d98:	b0ad883a 	add	r22,r22,r2
10004d9c:	308d883a 	add	r6,r6,r2
10004da0:	d9800815 	stw	r6,32(sp)
10004da4:	003fa506 	br	10004c3c <__alt_data_end+0xf8004c3c>
10004da8:	013efb84 	movi	r4,-1042
10004dac:	246bc83a 	sub	r21,r4,r17
10004db0:	9548983a 	sll	r4,r18,r21
10004db4:	003d1806 	br	10004218 <__alt_data_end+0xf8004218>
10004db8:	d8000c15 	stw	zero,48(sp)
10004dbc:	003d5b06 	br	1000432c <__alt_data_end+0xf800432c>
10004dc0:	880b883a 	mov	r5,r17
10004dc4:	8009883a 	mov	r4,r16
10004dc8:	01800284 	movi	r6,10
10004dcc:	000f883a 	mov	r7,zero
10004dd0:	00077900 	call	10007790 <__multadd>
10004dd4:	1023883a 	mov	r17,r2
10004dd8:	d8800d17 	ldw	r2,52(sp)
10004ddc:	0082550e 	bge	zero,r2,10005734 <_dtoa_r+0x16b0>
10004de0:	d8800615 	stw	r2,24(sp)
10004de4:	0500050e 	bge	zero,r20,10004dfc <_dtoa_r+0xd78>
10004de8:	880b883a 	mov	r5,r17
10004dec:	8009883a 	mov	r4,r16
10004df0:	a00d883a 	mov	r6,r20
10004df4:	0007ef40 	call	10007ef4 <__lshift>
10004df8:	1023883a 	mov	r17,r2
10004dfc:	98016a1e 	bne	r19,zero,100053a8 <_dtoa_r+0x1324>
10004e00:	8829883a 	mov	r20,r17
10004e04:	d9000617 	ldw	r4,24(sp)
10004e08:	dcc00717 	ldw	r19,28(sp)
10004e0c:	9480004c 	andi	r18,r18,1
10004e10:	20bfffc4 	addi	r2,r4,-1
10004e14:	9885883a 	add	r2,r19,r2
10004e18:	d8800415 	stw	r2,16(sp)
10004e1c:	dc800615 	stw	r18,24(sp)
10004e20:	e009883a 	mov	r4,fp
10004e24:	a80b883a 	mov	r5,r21
10004e28:	0003e5c0 	call	10003e5c <quorem>
10004e2c:	e009883a 	mov	r4,fp
10004e30:	880b883a 	mov	r5,r17
10004e34:	102f883a 	mov	r23,r2
10004e38:	000803c0 	call	1000803c <__mcmp>
10004e3c:	8009883a 	mov	r4,r16
10004e40:	a80b883a 	mov	r5,r21
10004e44:	a00d883a 	mov	r6,r20
10004e48:	102d883a 	mov	r22,r2
10004e4c:	000809c0 	call	1000809c <__mdiff>
10004e50:	1007883a 	mov	r3,r2
10004e54:	10800317 	ldw	r2,12(r2)
10004e58:	bc800c04 	addi	r18,r23,48
10004e5c:	1000971e 	bne	r2,zero,100050bc <_dtoa_r+0x1038>
10004e60:	180b883a 	mov	r5,r3
10004e64:	e009883a 	mov	r4,fp
10004e68:	d8c01515 	stw	r3,84(sp)
10004e6c:	000803c0 	call	1000803c <__mcmp>
10004e70:	d8c01517 	ldw	r3,84(sp)
10004e74:	8009883a 	mov	r4,r16
10004e78:	d8801515 	stw	r2,84(sp)
10004e7c:	180b883a 	mov	r5,r3
10004e80:	00077680 	call	10007768 <_Bfree>
10004e84:	d8801517 	ldw	r2,84(sp)
10004e88:	1000041e 	bne	r2,zero,10004e9c <_dtoa_r+0xe18>
10004e8c:	d9800317 	ldw	r6,12(sp)
10004e90:	3000021e 	bne	r6,zero,10004e9c <_dtoa_r+0xe18>
10004e94:	d8c00617 	ldw	r3,24(sp)
10004e98:	18007626 	beq	r3,zero,10005074 <_dtoa_r+0xff0>
10004e9c:	b0005b16 	blt	r22,zero,1000500c <_dtoa_r+0xf88>
10004ea0:	b000041e 	bne	r22,zero,10004eb4 <_dtoa_r+0xe30>
10004ea4:	d9000317 	ldw	r4,12(sp)
10004ea8:	2000021e 	bne	r4,zero,10004eb4 <_dtoa_r+0xe30>
10004eac:	d8c00617 	ldw	r3,24(sp)
10004eb0:	18005626 	beq	r3,zero,1000500c <_dtoa_r+0xf88>
10004eb4:	00814d16 	blt	zero,r2,100053ec <_dtoa_r+0x1368>
10004eb8:	d8c00417 	ldw	r3,16(sp)
10004ebc:	9d800044 	addi	r22,r19,1
10004ec0:	9c800005 	stb	r18,0(r19)
10004ec4:	b02f883a 	mov	r23,r22
10004ec8:	98c14c26 	beq	r19,r3,100053fc <_dtoa_r+0x1378>
10004ecc:	e00b883a 	mov	r5,fp
10004ed0:	8009883a 	mov	r4,r16
10004ed4:	01800284 	movi	r6,10
10004ed8:	000f883a 	mov	r7,zero
10004edc:	00077900 	call	10007790 <__multadd>
10004ee0:	1039883a 	mov	fp,r2
10004ee4:	8d006d26 	beq	r17,r20,1000509c <_dtoa_r+0x1018>
10004ee8:	880b883a 	mov	r5,r17
10004eec:	01800284 	movi	r6,10
10004ef0:	000f883a 	mov	r7,zero
10004ef4:	8009883a 	mov	r4,r16
10004ef8:	00077900 	call	10007790 <__multadd>
10004efc:	a00b883a 	mov	r5,r20
10004f00:	8009883a 	mov	r4,r16
10004f04:	01800284 	movi	r6,10
10004f08:	000f883a 	mov	r7,zero
10004f0c:	1023883a 	mov	r17,r2
10004f10:	00077900 	call	10007790 <__multadd>
10004f14:	1029883a 	mov	r20,r2
10004f18:	b027883a 	mov	r19,r22
10004f1c:	003fc006 	br	10004e20 <__alt_data_end+0xf8004e20>
10004f20:	a005883a 	mov	r2,r20
10004f24:	003ede06 	br	10004aa0 <__alt_data_end+0xf8004aa0>
10004f28:	01000044 	movi	r4,1
10004f2c:	d9000b15 	stw	r4,44(sp)
10004f30:	d9802217 	ldw	r6,136(sp)
10004f34:	0180dc0e 	bge	zero,r6,100052a8 <_dtoa_r+0x1224>
10004f38:	3023883a 	mov	r17,r6
10004f3c:	d9800d15 	stw	r6,52(sp)
10004f40:	d9800615 	stw	r6,24(sp)
10004f44:	003d1e06 	br	100043c0 <__alt_data_end+0xf80043c0>
10004f48:	d8800617 	ldw	r2,24(sp)
10004f4c:	00be3716 	blt	zero,r2,1000482c <__alt_data_end+0xf800482c>
10004f50:	1000be1e 	bne	r2,zero,1000524c <_dtoa_r+0x11c8>
10004f54:	8809883a 	mov	r4,r17
10004f58:	a00b883a 	mov	r5,r20
10004f5c:	000d883a 	mov	r6,zero
10004f60:	01d00534 	movhi	r7,16404
10004f64:	000c4540 	call	1000c454 <__muldf3>
10004f68:	1009883a 	mov	r4,r2
10004f6c:	180b883a 	mov	r5,r3
10004f70:	900d883a 	mov	r6,r18
10004f74:	980f883a 	mov	r7,r19
10004f78:	0000d580 	call	10000d58 <__gedf2>
10004f7c:	002b883a 	mov	r21,zero
10004f80:	0023883a 	mov	r17,zero
10004f84:	10007a16 	blt	r2,zero,10005170 <_dtoa_r+0x10ec>
10004f88:	d9002217 	ldw	r4,136(sp)
10004f8c:	ddc00717 	ldw	r23,28(sp)
10004f90:	0108303a 	nor	r4,zero,r4
10004f94:	d9000515 	stw	r4,20(sp)
10004f98:	8009883a 	mov	r4,r16
10004f9c:	a80b883a 	mov	r5,r21
10004fa0:	00077680 	call	10007768 <_Bfree>
10004fa4:	883f751e 	bne	r17,zero,10004d7c <__alt_data_end+0xf8004d7c>
10004fa8:	003de406 	br	1000473c <__alt_data_end+0xf800473c>
10004fac:	e00b883a 	mov	r5,fp
10004fb0:	8009883a 	mov	r4,r16
10004fb4:	0007db40 	call	10007db4 <__pow5mult>
10004fb8:	1039883a 	mov	fp,r2
10004fbc:	003ed306 	br	10004b0c <__alt_data_end+0xf8004b0c>
10004fc0:	903ee01e 	bne	r18,zero,10004b44 <__alt_data_end+0xf8004b44>
10004fc4:	00800434 	movhi	r2,16
10004fc8:	10bfffc4 	addi	r2,r2,-1
10004fcc:	9884703a 	and	r2,r19,r2
10004fd0:	103f081e 	bne	r2,zero,10004bf4 <__alt_data_end+0xf8004bf4>
10004fd4:	9cdffc2c 	andhi	r19,r19,32752
10004fd8:	983f0626 	beq	r19,zero,10004bf4 <__alt_data_end+0xf8004bf4>
10004fdc:	d8800817 	ldw	r2,32(sp)
10004fe0:	b5800044 	addi	r22,r22,1
10004fe4:	04c00044 	movi	r19,1
10004fe8:	10800044 	addi	r2,r2,1
10004fec:	d8800815 	stw	r2,32(sp)
10004ff0:	003f0106 	br	10004bf8 <__alt_data_end+0xf8004bf8>
10004ff4:	d9800f17 	ldw	r6,60(sp)
10004ff8:	30016826 	beq	r6,zero,1000559c <_dtoa_r+0x1518>
10004ffc:	10810cc4 	addi	r2,r2,1075
10005000:	dd400917 	ldw	r21,36(sp)
10005004:	dd000817 	ldw	r20,32(sp)
10005008:	003e9906 	br	10004a70 <__alt_data_end+0xf8004a70>
1000500c:	9011883a 	mov	r8,r18
10005010:	4007883a 	mov	r3,r8
10005014:	e02d883a 	mov	r22,fp
10005018:	0080100e 	bge	zero,r2,1000505c <_dtoa_r+0xfd8>
1000501c:	01800044 	movi	r6,1
10005020:	8009883a 	mov	r4,r16
10005024:	e00b883a 	mov	r5,fp
10005028:	da001515 	stw	r8,84(sp)
1000502c:	da001715 	stw	r8,92(sp)
10005030:	0007ef40 	call	10007ef4 <__lshift>
10005034:	1009883a 	mov	r4,r2
10005038:	a80b883a 	mov	r5,r21
1000503c:	102d883a 	mov	r22,r2
10005040:	000803c0 	call	1000803c <__mcmp>
10005044:	d8c01517 	ldw	r3,84(sp)
10005048:	da001717 	ldw	r8,92(sp)
1000504c:	0081a50e 	bge	zero,r2,100056e4 <_dtoa_r+0x1660>
10005050:	00800e44 	movi	r2,57
10005054:	40817b26 	beq	r8,r2,10005644 <_dtoa_r+0x15c0>
10005058:	40c00044 	addi	r3,r8,1
1000505c:	8825883a 	mov	r18,r17
10005060:	9dc00044 	addi	r23,r19,1
10005064:	98c00005 	stb	r3,0(r19)
10005068:	a023883a 	mov	r17,r20
1000506c:	b039883a 	mov	fp,r22
10005070:	003f3906 	br	10004d58 <__alt_data_end+0xf8004d58>
10005074:	00800e44 	movi	r2,57
10005078:	9011883a 	mov	r8,r18
1000507c:	90817226 	beq	r18,r2,10005648 <_dtoa_r+0x15c4>
10005080:	0580010e 	bge	zero,r22,10005088 <_dtoa_r+0x1004>
10005084:	ba000c44 	addi	r8,r23,49
10005088:	8825883a 	mov	r18,r17
1000508c:	9dc00044 	addi	r23,r19,1
10005090:	9a000005 	stb	r8,0(r19)
10005094:	a023883a 	mov	r17,r20
10005098:	003f2f06 	br	10004d58 <__alt_data_end+0xf8004d58>
1000509c:	880b883a 	mov	r5,r17
100050a0:	8009883a 	mov	r4,r16
100050a4:	01800284 	movi	r6,10
100050a8:	000f883a 	mov	r7,zero
100050ac:	00077900 	call	10007790 <__multadd>
100050b0:	1023883a 	mov	r17,r2
100050b4:	1029883a 	mov	r20,r2
100050b8:	003f9706 	br	10004f18 <__alt_data_end+0xf8004f18>
100050bc:	8009883a 	mov	r4,r16
100050c0:	180b883a 	mov	r5,r3
100050c4:	00077680 	call	10007768 <_Bfree>
100050c8:	00800044 	movi	r2,1
100050cc:	003f7306 	br	10004e9c <__alt_data_end+0xf8004e9c>
100050d0:	e009883a 	mov	r4,fp
100050d4:	a80b883a 	mov	r5,r21
100050d8:	000803c0 	call	1000803c <__mcmp>
100050dc:	103ee60e 	bge	r2,zero,10004c78 <__alt_data_end+0xf8004c78>
100050e0:	8009883a 	mov	r4,r16
100050e4:	e00b883a 	mov	r5,fp
100050e8:	01800284 	movi	r6,10
100050ec:	000f883a 	mov	r7,zero
100050f0:	00077900 	call	10007790 <__multadd>
100050f4:	d9000517 	ldw	r4,20(sp)
100050f8:	d9800b17 	ldw	r6,44(sp)
100050fc:	1039883a 	mov	fp,r2
10005100:	213fffc4 	addi	r4,r4,-1
10005104:	d9000515 	stw	r4,20(sp)
10005108:	303f2d1e 	bne	r6,zero,10004dc0 <__alt_data_end+0xf8004dc0>
1000510c:	d9000d17 	ldw	r4,52(sp)
10005110:	0101780e 	bge	zero,r4,100056f4 <_dtoa_r+0x1670>
10005114:	d9000615 	stw	r4,24(sp)
10005118:	003edb06 	br	10004c88 <__alt_data_end+0xf8004c88>
1000511c:	00800084 	movi	r2,2
10005120:	30818e1e 	bne	r6,r2,1000575c <_dtoa_r+0x16d8>
10005124:	d8000b15 	stw	zero,44(sp)
10005128:	003f8106 	br	10004f30 <__alt_data_end+0xf8004f30>
1000512c:	d8800717 	ldw	r2,28(sp)
10005130:	003c0306 	br	10004140 <__alt_data_end+0xf8004140>
10005134:	d9000317 	ldw	r4,12(sp)
10005138:	00800084 	movi	r2,2
1000513c:	113ed00e 	bge	r2,r4,10004c80 <__alt_data_end+0xf8004c80>
10005140:	d8c00617 	ldw	r3,24(sp)
10005144:	183f901e 	bne	r3,zero,10004f88 <__alt_data_end+0xf8004f88>
10005148:	a80b883a 	mov	r5,r21
1000514c:	8009883a 	mov	r4,r16
10005150:	01800144 	movi	r6,5
10005154:	000f883a 	mov	r7,zero
10005158:	00077900 	call	10007790 <__multadd>
1000515c:	e009883a 	mov	r4,fp
10005160:	100b883a 	mov	r5,r2
10005164:	102b883a 	mov	r21,r2
10005168:	000803c0 	call	1000803c <__mcmp>
1000516c:	00bf860e 	bge	zero,r2,10004f88 <__alt_data_end+0xf8004f88>
10005170:	d9800717 	ldw	r6,28(sp)
10005174:	00800c44 	movi	r2,49
10005178:	30800005 	stb	r2,0(r6)
1000517c:	d8800517 	ldw	r2,20(sp)
10005180:	35c00044 	addi	r23,r6,1
10005184:	10800044 	addi	r2,r2,1
10005188:	d8800515 	stw	r2,20(sp)
1000518c:	003f8206 	br	10004f98 <__alt_data_end+0xf8004f98>
10005190:	903e981e 	bne	r18,zero,10004bf4 <__alt_data_end+0xf8004bf4>
10005194:	003f8b06 	br	10004fc4 <__alt_data_end+0xf8004fc4>
10005198:	d9800517 	ldw	r6,20(sp)
1000519c:	d8c00717 	ldw	r3,28(sp)
100051a0:	00800c44 	movi	r2,49
100051a4:	31800044 	addi	r6,r6,1
100051a8:	d9800515 	stw	r6,20(sp)
100051ac:	18800005 	stb	r2,0(r3)
100051b0:	003ee906 	br	10004d58 <__alt_data_end+0xf8004d58>
100051b4:	dc000317 	ldw	r16,12(sp)
100051b8:	003d6006 	br	1000473c <__alt_data_end+0xf800473c>
100051bc:	8809883a 	mov	r4,r17
100051c0:	000ccc00 	call	1000ccc0 <__floatsidf>
100051c4:	a009883a 	mov	r4,r20
100051c8:	a80b883a 	mov	r5,r21
100051cc:	100d883a 	mov	r6,r2
100051d0:	180f883a 	mov	r7,r3
100051d4:	000c4540 	call	1000c454 <__muldf3>
100051d8:	1009883a 	mov	r4,r2
100051dc:	180b883a 	mov	r5,r3
100051e0:	000d883a 	mov	r6,zero
100051e4:	01d00734 	movhi	r7,16412
100051e8:	000ba540 	call	1000ba54 <__adddf3>
100051ec:	1023883a 	mov	r17,r2
100051f0:	00bf3034 	movhi	r2,64704
100051f4:	1885883a 	add	r2,r3,r2
100051f8:	d8800e15 	stw	r2,56(sp)
100051fc:	a009883a 	mov	r4,r20
10005200:	a80b883a 	mov	r5,r21
10005204:	000d883a 	mov	r6,zero
10005208:	01d00534 	movhi	r7,16404
1000520c:	0000e380 	call	10000e38 <__subdf3>
10005210:	d9c00e17 	ldw	r7,56(sp)
10005214:	1009883a 	mov	r4,r2
10005218:	180b883a 	mov	r5,r3
1000521c:	880d883a 	mov	r6,r17
10005220:	102b883a 	mov	r21,r2
10005224:	1829883a 	mov	r20,r3
10005228:	0000d580 	call	10000d58 <__gedf2>
1000522c:	00807716 	blt	zero,r2,1000540c <_dtoa_r+0x1388>
10005230:	d8800e17 	ldw	r2,56(sp)
10005234:	a809883a 	mov	r4,r21
10005238:	a00b883a 	mov	r5,r20
1000523c:	11e0003c 	xorhi	r7,r2,32768
10005240:	880d883a 	mov	r6,r17
10005244:	000c3740 	call	1000c374 <__ledf2>
10005248:	103d6b0e 	bge	r2,zero,100047f8 <__alt_data_end+0xf80047f8>
1000524c:	002b883a 	mov	r21,zero
10005250:	0023883a 	mov	r17,zero
10005254:	003f4c06 	br	10004f88 <__alt_data_end+0xf8004f88>
10005258:	d9800917 	ldw	r6,36(sp)
1000525c:	e00b883a 	mov	r5,fp
10005260:	8009883a 	mov	r4,r16
10005264:	0007db40 	call	10007db4 <__pow5mult>
10005268:	1039883a 	mov	fp,r2
1000526c:	003e2706 	br	10004b0c <__alt_data_end+0xf8004b0c>
10005270:	d8000b15 	stw	zero,44(sp)
10005274:	003c4906 	br	1000439c <__alt_data_end+0xf800439c>
10005278:	d9000917 	ldw	r4,36(sp)
1000527c:	d9800a17 	ldw	r6,40(sp)
10005280:	dd400915 	stw	r21,36(sp)
10005284:	a905c83a 	sub	r2,r21,r4
10005288:	308d883a 	add	r6,r6,r2
1000528c:	d9800a15 	stw	r6,40(sp)
10005290:	002b883a 	mov	r21,zero
10005294:	003df206 	br	10004a60 <__alt_data_end+0xf8004a60>
10005298:	dc800e15 	stw	r18,56(sp)
1000529c:	982b883a 	mov	r21,r19
100052a0:	04400084 	movi	r17,2
100052a4:	003c7406 	br	10004478 <__alt_data_end+0xf8004478>
100052a8:	04400044 	movi	r17,1
100052ac:	dc400d15 	stw	r17,52(sp)
100052b0:	dc400615 	stw	r17,24(sp)
100052b4:	dc402215 	stw	r17,136(sp)
100052b8:	80001115 	stw	zero,68(r16)
100052bc:	000b883a 	mov	r5,zero
100052c0:	003c4a06 	br	100043ec <__alt_data_end+0xf80043ec>
100052c4:	3023883a 	mov	r17,r6
100052c8:	003ffb06 	br	100052b8 <__alt_data_end+0xf80052b8>
100052cc:	1000021e 	bne	r2,zero,100052d8 <_dtoa_r+0x1254>
100052d0:	4200004c 	andi	r8,r8,1
100052d4:	403e8f1e 	bne	r8,zero,10004d14 <__alt_data_end+0xf8004d14>
100052d8:	01000c04 	movi	r4,48
100052dc:	00000106 	br	100052e4 <_dtoa_r+0x1260>
100052e0:	102f883a 	mov	r23,r2
100052e4:	b8bfffc4 	addi	r2,r23,-1
100052e8:	10c00007 	ldb	r3,0(r2)
100052ec:	193ffc26 	beq	r3,r4,100052e0 <__alt_data_end+0xf80052e0>
100052f0:	003e9906 	br	10004d58 <__alt_data_end+0xf8004d58>
100052f4:	d9000517 	ldw	r4,20(sp)
100052f8:	012fc83a 	sub	r23,zero,r4
100052fc:	b800ad26 	beq	r23,zero,100055b4 <_dtoa_r+0x1530>
10005300:	b88003cc 	andi	r2,r23,15
10005304:	100490fa 	slli	r2,r2,3
10005308:	00c40074 	movhi	r3,4097
1000530c:	18fe1604 	addi	r3,r3,-1960
10005310:	1885883a 	add	r2,r3,r2
10005314:	11800017 	ldw	r6,0(r2)
10005318:	11c00117 	ldw	r7,4(r2)
1000531c:	b82fd13a 	srai	r23,r23,4
10005320:	9009883a 	mov	r4,r18
10005324:	980b883a 	mov	r5,r19
10005328:	000c4540 	call	1000c454 <__muldf3>
1000532c:	1029883a 	mov	r20,r2
10005330:	182b883a 	mov	r21,r3
10005334:	b800f426 	beq	r23,zero,10005708 <_dtoa_r+0x1684>
10005338:	02040074 	movhi	r8,4097
1000533c:	423e0c04 	addi	r8,r8,-2000
10005340:	8029883a 	mov	r20,r16
10005344:	04400084 	movi	r17,2
10005348:	4021883a 	mov	r16,r8
1000534c:	b980004c 	andi	r6,r23,1
10005350:	1009883a 	mov	r4,r2
10005354:	b82fd07a 	srai	r23,r23,1
10005358:	180b883a 	mov	r5,r3
1000535c:	30000426 	beq	r6,zero,10005370 <_dtoa_r+0x12ec>
10005360:	81800017 	ldw	r6,0(r16)
10005364:	81c00117 	ldw	r7,4(r16)
10005368:	8c400044 	addi	r17,r17,1
1000536c:	000c4540 	call	1000c454 <__muldf3>
10005370:	84000204 	addi	r16,r16,8
10005374:	b83ff51e 	bne	r23,zero,1000534c <__alt_data_end+0xf800534c>
10005378:	a021883a 	mov	r16,r20
1000537c:	182b883a 	mov	r21,r3
10005380:	1029883a 	mov	r20,r2
10005384:	003c5506 	br	100044dc <__alt_data_end+0xf80044dc>
10005388:	d9800517 	ldw	r6,20(sp)
1000538c:	d9000717 	ldw	r4,28(sp)
10005390:	00c00c04 	movi	r3,48
10005394:	31800044 	addi	r6,r6,1
10005398:	d9800515 	stw	r6,20(sp)
1000539c:	20c00005 	stb	r3,0(r4)
100053a0:	02000c44 	movi	r8,49
100053a4:	003da206 	br	10004a30 <__alt_data_end+0xf8004a30>
100053a8:	89400117 	ldw	r5,4(r17)
100053ac:	8009883a 	mov	r4,r16
100053b0:	00076c00 	call	100076c0 <_Balloc>
100053b4:	89800417 	ldw	r6,16(r17)
100053b8:	11000304 	addi	r4,r2,12
100053bc:	89400304 	addi	r5,r17,12
100053c0:	31800084 	addi	r6,r6,2
100053c4:	318d883a 	add	r6,r6,r6
100053c8:	318d883a 	add	r6,r6,r6
100053cc:	1027883a 	mov	r19,r2
100053d0:	00073080 	call	10007308 <memcpy>
100053d4:	8009883a 	mov	r4,r16
100053d8:	980b883a 	mov	r5,r19
100053dc:	01800044 	movi	r6,1
100053e0:	0007ef40 	call	10007ef4 <__lshift>
100053e4:	1029883a 	mov	r20,r2
100053e8:	003e8606 	br	10004e04 <__alt_data_end+0xf8004e04>
100053ec:	00800e44 	movi	r2,57
100053f0:	90809526 	beq	r18,r2,10005648 <_dtoa_r+0x15c4>
100053f4:	92000044 	addi	r8,r18,1
100053f8:	003f2306 	br	10005088 <__alt_data_end+0xf8005088>
100053fc:	9011883a 	mov	r8,r18
10005400:	8825883a 	mov	r18,r17
10005404:	a023883a 	mov	r17,r20
10005408:	003e3706 	br	10004ce8 <__alt_data_end+0xf8004ce8>
1000540c:	002b883a 	mov	r21,zero
10005410:	0023883a 	mov	r17,zero
10005414:	003f5606 	br	10005170 <__alt_data_end+0xf8005170>
10005418:	51bfffc4 	addi	r6,r10,-1
1000541c:	300490fa 	slli	r2,r6,3
10005420:	00c40074 	movhi	r3,4097
10005424:	18fe1604 	addi	r3,r3,-1960
10005428:	1885883a 	add	r2,r3,r2
1000542c:	d9c00e17 	ldw	r7,56(sp)
10005430:	11000017 	ldw	r4,0(r2)
10005434:	11400117 	ldw	r5,4(r2)
10005438:	d8800717 	ldw	r2,28(sp)
1000543c:	d9801015 	stw	r6,64(sp)
10005440:	880d883a 	mov	r6,r17
10005444:	da801615 	stw	r10,88(sp)
10005448:	15c00044 	addi	r23,r2,1
1000544c:	000c4540 	call	1000c454 <__muldf3>
10005450:	a80b883a 	mov	r5,r21
10005454:	a009883a 	mov	r4,r20
10005458:	d8c01115 	stw	r3,68(sp)
1000545c:	d8800e15 	stw	r2,56(sp)
10005460:	00017080 	call	10001708 <__fixdfsi>
10005464:	1009883a 	mov	r4,r2
10005468:	1023883a 	mov	r17,r2
1000546c:	000ccc00 	call	1000ccc0 <__floatsidf>
10005470:	a009883a 	mov	r4,r20
10005474:	a80b883a 	mov	r5,r21
10005478:	100d883a 	mov	r6,r2
1000547c:	180f883a 	mov	r7,r3
10005480:	0000e380 	call	10000e38 <__subdf3>
10005484:	1813883a 	mov	r9,r3
10005488:	d8c00717 	ldw	r3,28(sp)
1000548c:	8c400c04 	addi	r17,r17,48
10005490:	1011883a 	mov	r8,r2
10005494:	1c400005 	stb	r17,0(r3)
10005498:	da801617 	ldw	r10,88(sp)
1000549c:	00800044 	movi	r2,1
100054a0:	50802326 	beq	r10,r2,10005530 <_dtoa_r+0x14ac>
100054a4:	d8800717 	ldw	r2,28(sp)
100054a8:	b82b883a 	mov	r21,r23
100054ac:	dc001315 	stw	r16,76(sp)
100054b0:	12a9883a 	add	r20,r2,r10
100054b4:	4807883a 	mov	r3,r9
100054b8:	4005883a 	mov	r2,r8
100054bc:	dc801415 	stw	r18,80(sp)
100054c0:	000d883a 	mov	r6,zero
100054c4:	01d00934 	movhi	r7,16420
100054c8:	1009883a 	mov	r4,r2
100054cc:	180b883a 	mov	r5,r3
100054d0:	000c4540 	call	1000c454 <__muldf3>
100054d4:	180b883a 	mov	r5,r3
100054d8:	1009883a 	mov	r4,r2
100054dc:	1821883a 	mov	r16,r3
100054e0:	1025883a 	mov	r18,r2
100054e4:	00017080 	call	10001708 <__fixdfsi>
100054e8:	1009883a 	mov	r4,r2
100054ec:	1023883a 	mov	r17,r2
100054f0:	000ccc00 	call	1000ccc0 <__floatsidf>
100054f4:	9009883a 	mov	r4,r18
100054f8:	800b883a 	mov	r5,r16
100054fc:	100d883a 	mov	r6,r2
10005500:	180f883a 	mov	r7,r3
10005504:	8c400c04 	addi	r17,r17,48
10005508:	0000e380 	call	10000e38 <__subdf3>
1000550c:	ad400044 	addi	r21,r21,1
10005510:	ac7fffc5 	stb	r17,-1(r21)
10005514:	ad3fea1e 	bne	r21,r20,100054c0 <__alt_data_end+0xf80054c0>
10005518:	1813883a 	mov	r9,r3
1000551c:	d8c01017 	ldw	r3,64(sp)
10005520:	dc001317 	ldw	r16,76(sp)
10005524:	dc801417 	ldw	r18,80(sp)
10005528:	1011883a 	mov	r8,r2
1000552c:	b8ef883a 	add	r23,r23,r3
10005530:	d9000e17 	ldw	r4,56(sp)
10005534:	d9401117 	ldw	r5,68(sp)
10005538:	000d883a 	mov	r6,zero
1000553c:	01cff834 	movhi	r7,16352
10005540:	da001715 	stw	r8,92(sp)
10005544:	da401515 	stw	r9,84(sp)
10005548:	000ba540 	call	1000ba54 <__adddf3>
1000554c:	da001717 	ldw	r8,92(sp)
10005550:	da401517 	ldw	r9,84(sp)
10005554:	1009883a 	mov	r4,r2
10005558:	400d883a 	mov	r6,r8
1000555c:	480f883a 	mov	r7,r9
10005560:	180b883a 	mov	r5,r3
10005564:	000c3740 	call	1000c374 <__ledf2>
10005568:	da001717 	ldw	r8,92(sp)
1000556c:	da401517 	ldw	r9,84(sp)
10005570:	10003b0e 	bge	r2,zero,10005660 <_dtoa_r+0x15dc>
10005574:	d9001217 	ldw	r4,72(sp)
10005578:	bd7fffc3 	ldbu	r21,-1(r23)
1000557c:	d9000515 	stw	r4,20(sp)
10005580:	003d1c06 	br	100049f4 <__alt_data_end+0xf80049f4>
10005584:	d8c00817 	ldw	r3,32(sp)
10005588:	18a9c83a 	sub	r20,r3,r2
1000558c:	0005883a 	mov	r2,zero
10005590:	003d3706 	br	10004a70 <__alt_data_end+0xf8004a70>
10005594:	00800044 	movi	r2,1
10005598:	003dd006 	br	10004cdc <__alt_data_end+0xf8004cdc>
1000559c:	d8c00217 	ldw	r3,8(sp)
100055a0:	00800d84 	movi	r2,54
100055a4:	dd400917 	ldw	r21,36(sp)
100055a8:	10c5c83a 	sub	r2,r2,r3
100055ac:	dd000817 	ldw	r20,32(sp)
100055b0:	003d2f06 	br	10004a70 <__alt_data_end+0xf8004a70>
100055b4:	9029883a 	mov	r20,r18
100055b8:	982b883a 	mov	r21,r19
100055bc:	04400084 	movi	r17,2
100055c0:	003bc606 	br	100044dc <__alt_data_end+0xf80044dc>
100055c4:	d8800617 	ldw	r2,24(sp)
100055c8:	103efc26 	beq	r2,zero,100051bc <__alt_data_end+0xf80051bc>
100055cc:	d8c00d17 	ldw	r3,52(sp)
100055d0:	00fc890e 	bge	zero,r3,100047f8 <__alt_data_end+0xf80047f8>
100055d4:	a80b883a 	mov	r5,r21
100055d8:	a009883a 	mov	r4,r20
100055dc:	000d883a 	mov	r6,zero
100055e0:	01d00934 	movhi	r7,16420
100055e4:	000c4540 	call	1000c454 <__muldf3>
100055e8:	89000044 	addi	r4,r17,1
100055ec:	1029883a 	mov	r20,r2
100055f0:	182b883a 	mov	r21,r3
100055f4:	000ccc00 	call	1000ccc0 <__floatsidf>
100055f8:	a009883a 	mov	r4,r20
100055fc:	a80b883a 	mov	r5,r21
10005600:	100d883a 	mov	r6,r2
10005604:	180f883a 	mov	r7,r3
10005608:	000c4540 	call	1000c454 <__muldf3>
1000560c:	1009883a 	mov	r4,r2
10005610:	180b883a 	mov	r5,r3
10005614:	000d883a 	mov	r6,zero
10005618:	01d00734 	movhi	r7,16412
1000561c:	000ba540 	call	1000ba54 <__adddf3>
10005620:	d9000517 	ldw	r4,20(sp)
10005624:	1023883a 	mov	r17,r2
10005628:	00bf3034 	movhi	r2,64704
1000562c:	213fffc4 	addi	r4,r4,-1
10005630:	1885883a 	add	r2,r3,r2
10005634:	d9001215 	stw	r4,72(sp)
10005638:	d8800e15 	stw	r2,56(sp)
1000563c:	da800d17 	ldw	r10,52(sp)
10005640:	003bc306 	br	10004550 <__alt_data_end+0xf8004550>
10005644:	b039883a 	mov	fp,r22
10005648:	01000e44 	movi	r4,57
1000564c:	8825883a 	mov	r18,r17
10005650:	9dc00044 	addi	r23,r19,1
10005654:	99000005 	stb	r4,0(r19)
10005658:	a023883a 	mov	r17,r20
1000565c:	003dae06 	br	10004d18 <__alt_data_end+0xf8004d18>
10005660:	d9800e17 	ldw	r6,56(sp)
10005664:	d9c01117 	ldw	r7,68(sp)
10005668:	0009883a 	mov	r4,zero
1000566c:	014ff834 	movhi	r5,16352
10005670:	da001715 	stw	r8,92(sp)
10005674:	da401515 	stw	r9,84(sp)
10005678:	0000e380 	call	10000e38 <__subdf3>
1000567c:	da001717 	ldw	r8,92(sp)
10005680:	da401517 	ldw	r9,84(sp)
10005684:	1009883a 	mov	r4,r2
10005688:	180b883a 	mov	r5,r3
1000568c:	400d883a 	mov	r6,r8
10005690:	480f883a 	mov	r7,r9
10005694:	0000d580 	call	10000d58 <__gedf2>
10005698:	00bc570e 	bge	zero,r2,100047f8 <__alt_data_end+0xf80047f8>
1000569c:	01000c04 	movi	r4,48
100056a0:	00000106 	br	100056a8 <_dtoa_r+0x1624>
100056a4:	102f883a 	mov	r23,r2
100056a8:	b8bfffc4 	addi	r2,r23,-1
100056ac:	10c00007 	ldb	r3,0(r2)
100056b0:	193ffc26 	beq	r3,r4,100056a4 <__alt_data_end+0xf80056a4>
100056b4:	d9801217 	ldw	r6,72(sp)
100056b8:	d9800515 	stw	r6,20(sp)
100056bc:	003c1f06 	br	1000473c <__alt_data_end+0xf800473c>
100056c0:	d8801217 	ldw	r2,72(sp)
100056c4:	dc001117 	ldw	r16,68(sp)
100056c8:	d8800515 	stw	r2,20(sp)
100056cc:	003cc906 	br	100049f4 <__alt_data_end+0xf80049f4>
100056d0:	dd801317 	ldw	r22,76(sp)
100056d4:	dc001117 	ldw	r16,68(sp)
100056d8:	dcc01417 	ldw	r19,80(sp)
100056dc:	dc801017 	ldw	r18,64(sp)
100056e0:	003c4506 	br	100047f8 <__alt_data_end+0xf80047f8>
100056e4:	103e5d1e 	bne	r2,zero,1000505c <__alt_data_end+0xf800505c>
100056e8:	4080004c 	andi	r2,r8,1
100056ec:	103e5b26 	beq	r2,zero,1000505c <__alt_data_end+0xf800505c>
100056f0:	003e5706 	br	10005050 <__alt_data_end+0xf8005050>
100056f4:	d8c00317 	ldw	r3,12(sp)
100056f8:	00800084 	movi	r2,2
100056fc:	10c00a16 	blt	r2,r3,10005728 <_dtoa_r+0x16a4>
10005700:	d9000d17 	ldw	r4,52(sp)
10005704:	003e8306 	br	10005114 <__alt_data_end+0xf8005114>
10005708:	04400084 	movi	r17,2
1000570c:	003b7306 	br	100044dc <__alt_data_end+0xf80044dc>
10005710:	d9801217 	ldw	r6,72(sp)
10005714:	d9800515 	stw	r6,20(sp)
10005718:	003cb606 	br	100049f4 <__alt_data_end+0xf80049f4>
1000571c:	d9001217 	ldw	r4,72(sp)
10005720:	d9000515 	stw	r4,20(sp)
10005724:	003c0506 	br	1000473c <__alt_data_end+0xf800473c>
10005728:	d9800d17 	ldw	r6,52(sp)
1000572c:	d9800615 	stw	r6,24(sp)
10005730:	003e8306 	br	10005140 <__alt_data_end+0xf8005140>
10005734:	d9800317 	ldw	r6,12(sp)
10005738:	00800084 	movi	r2,2
1000573c:	11800216 	blt	r2,r6,10005748 <_dtoa_r+0x16c4>
10005740:	d8800d17 	ldw	r2,52(sp)
10005744:	003da606 	br	10004de0 <__alt_data_end+0xf8004de0>
10005748:	d8800d17 	ldw	r2,52(sp)
1000574c:	d8800615 	stw	r2,24(sp)
10005750:	003e7b06 	br	10005140 <__alt_data_end+0xf8005140>
10005754:	05000044 	movi	r20,1
10005758:	003b0506 	br	10004370 <__alt_data_end+0xf8004370>
1000575c:	8009883a 	mov	r4,r16
10005760:	80001115 	stw	zero,68(r16)
10005764:	000b883a 	mov	r5,zero
10005768:	00076c00 	call	100076c0 <_Balloc>
1000576c:	d8800715 	stw	r2,28(sp)
10005770:	d8c00717 	ldw	r3,28(sp)
10005774:	00bfffc4 	movi	r2,-1
10005778:	01000044 	movi	r4,1
1000577c:	d8800615 	stw	r2,24(sp)
10005780:	80c01015 	stw	r3,64(r16)
10005784:	d9000b15 	stw	r4,44(sp)
10005788:	d8002215 	stw	zero,136(sp)
1000578c:	d8800d15 	stw	r2,52(sp)
10005790:	003c1906 	br	100047f8 <__alt_data_end+0xf80047f8>
10005794:	193d2926 	beq	r3,r4,10004c3c <__alt_data_end+0xf8004c3c>
10005798:	00c00f04 	movi	r3,60
1000579c:	1885c83a 	sub	r2,r3,r2
100057a0:	003d7b06 	br	10004d90 <__alt_data_end+0xf8004d90>
100057a4:	000b883a 	mov	r5,zero
100057a8:	003b1006 	br	100043ec <__alt_data_end+0xf80043ec>

100057ac <_fflush_r>:
100057ac:	defffb04 	addi	sp,sp,-20
100057b0:	dcc00315 	stw	r19,12(sp)
100057b4:	dc000015 	stw	r16,0(sp)
100057b8:	dfc00415 	stw	ra,16(sp)
100057bc:	dc800215 	stw	r18,8(sp)
100057c0:	dc400115 	stw	r17,4(sp)
100057c4:	2027883a 	mov	r19,r4
100057c8:	2821883a 	mov	r16,r5
100057cc:	20000226 	beq	r4,zero,100057d8 <_fflush_r+0x2c>
100057d0:	20800e17 	ldw	r2,56(r4)
100057d4:	10005326 	beq	r2,zero,10005924 <_fflush_r+0x178>
100057d8:	8080030b 	ldhu	r2,12(r16)
100057dc:	10ffffcc 	andi	r3,r2,65535
100057e0:	18e0001c 	xori	r3,r3,32768
100057e4:	18e00004 	addi	r3,r3,-32768
100057e8:	18002c26 	beq	r3,zero,1000589c <_fflush_r+0xf0>
100057ec:	10c0020c 	andi	r3,r2,8
100057f0:	1800321e 	bne	r3,zero,100058bc <_fflush_r+0x110>
100057f4:	80c00117 	ldw	r3,4(r16)
100057f8:	10820014 	ori	r2,r2,2048
100057fc:	8080030d 	sth	r2,12(r16)
10005800:	00c0570e 	bge	zero,r3,10005960 <_fflush_r+0x1b4>
10005804:	82000a17 	ldw	r8,40(r16)
10005808:	40002426 	beq	r8,zero,1000589c <_fflush_r+0xf0>
1000580c:	9c400017 	ldw	r17,0(r19)
10005810:	10c4000c 	andi	r3,r2,4096
10005814:	98000015 	stw	zero,0(r19)
10005818:	18004626 	beq	r3,zero,10005934 <_fflush_r+0x188>
1000581c:	81801417 	ldw	r6,80(r16)
10005820:	10c0010c 	andi	r3,r2,4
10005824:	18000626 	beq	r3,zero,10005840 <_fflush_r+0x94>
10005828:	80c00117 	ldw	r3,4(r16)
1000582c:	80800c17 	ldw	r2,48(r16)
10005830:	30cdc83a 	sub	r6,r6,r3
10005834:	10000226 	beq	r2,zero,10005840 <_fflush_r+0x94>
10005838:	80800f17 	ldw	r2,60(r16)
1000583c:	308dc83a 	sub	r6,r6,r2
10005840:	81400717 	ldw	r5,28(r16)
10005844:	9809883a 	mov	r4,r19
10005848:	000f883a 	mov	r7,zero
1000584c:	403ee83a 	callr	r8
10005850:	00ffffc4 	movi	r3,-1
10005854:	10c04526 	beq	r2,r3,1000596c <_fflush_r+0x1c0>
10005858:	80c0030b 	ldhu	r3,12(r16)
1000585c:	81000417 	ldw	r4,16(r16)
10005860:	80000115 	stw	zero,4(r16)
10005864:	197dffcc 	andi	r5,r3,63487
10005868:	8140030d 	sth	r5,12(r16)
1000586c:	81000015 	stw	r4,0(r16)
10005870:	18c4000c 	andi	r3,r3,4096
10005874:	18000126 	beq	r3,zero,1000587c <_fflush_r+0xd0>
10005878:	80801415 	stw	r2,80(r16)
1000587c:	81400c17 	ldw	r5,48(r16)
10005880:	9c400015 	stw	r17,0(r19)
10005884:	28000526 	beq	r5,zero,1000589c <_fflush_r+0xf0>
10005888:	80801004 	addi	r2,r16,64
1000588c:	28800226 	beq	r5,r2,10005898 <_fflush_r+0xec>
10005890:	9809883a 	mov	r4,r19
10005894:	0005edc0 	call	10005edc <_free_r>
10005898:	80000c15 	stw	zero,48(r16)
1000589c:	0005883a 	mov	r2,zero
100058a0:	dfc00417 	ldw	ra,16(sp)
100058a4:	dcc00317 	ldw	r19,12(sp)
100058a8:	dc800217 	ldw	r18,8(sp)
100058ac:	dc400117 	ldw	r17,4(sp)
100058b0:	dc000017 	ldw	r16,0(sp)
100058b4:	dec00504 	addi	sp,sp,20
100058b8:	f800283a 	ret
100058bc:	84800417 	ldw	r18,16(r16)
100058c0:	903ff626 	beq	r18,zero,1000589c <__alt_data_end+0xf800589c>
100058c4:	84400017 	ldw	r17,0(r16)
100058c8:	108000cc 	andi	r2,r2,3
100058cc:	84800015 	stw	r18,0(r16)
100058d0:	8ca3c83a 	sub	r17,r17,r18
100058d4:	10001526 	beq	r2,zero,1000592c <_fflush_r+0x180>
100058d8:	0005883a 	mov	r2,zero
100058dc:	80800215 	stw	r2,8(r16)
100058e0:	04400316 	blt	zero,r17,100058f0 <_fflush_r+0x144>
100058e4:	003fed06 	br	1000589c <__alt_data_end+0xf800589c>
100058e8:	90a5883a 	add	r18,r18,r2
100058ec:	047feb0e 	bge	zero,r17,1000589c <__alt_data_end+0xf800589c>
100058f0:	80800917 	ldw	r2,36(r16)
100058f4:	81400717 	ldw	r5,28(r16)
100058f8:	880f883a 	mov	r7,r17
100058fc:	900d883a 	mov	r6,r18
10005900:	9809883a 	mov	r4,r19
10005904:	103ee83a 	callr	r2
10005908:	88a3c83a 	sub	r17,r17,r2
1000590c:	00bff616 	blt	zero,r2,100058e8 <__alt_data_end+0xf80058e8>
10005910:	80c0030b 	ldhu	r3,12(r16)
10005914:	00bfffc4 	movi	r2,-1
10005918:	18c01014 	ori	r3,r3,64
1000591c:	80c0030d 	sth	r3,12(r16)
10005920:	003fdf06 	br	100058a0 <__alt_data_end+0xf80058a0>
10005924:	0005d680 	call	10005d68 <__sinit>
10005928:	003fab06 	br	100057d8 <__alt_data_end+0xf80057d8>
1000592c:	80800517 	ldw	r2,20(r16)
10005930:	003fea06 	br	100058dc <__alt_data_end+0xf80058dc>
10005934:	81400717 	ldw	r5,28(r16)
10005938:	000d883a 	mov	r6,zero
1000593c:	9809883a 	mov	r4,r19
10005940:	01c00044 	movi	r7,1
10005944:	403ee83a 	callr	r8
10005948:	100d883a 	mov	r6,r2
1000594c:	00bfffc4 	movi	r2,-1
10005950:	30801326 	beq	r6,r2,100059a0 <_fflush_r+0x1f4>
10005954:	8080030b 	ldhu	r2,12(r16)
10005958:	82000a17 	ldw	r8,40(r16)
1000595c:	003fb006 	br	10005820 <__alt_data_end+0xf8005820>
10005960:	80c00f17 	ldw	r3,60(r16)
10005964:	00ffa716 	blt	zero,r3,10005804 <__alt_data_end+0xf8005804>
10005968:	003fcc06 	br	1000589c <__alt_data_end+0xf800589c>
1000596c:	98c00017 	ldw	r3,0(r19)
10005970:	183fb926 	beq	r3,zero,10005858 <__alt_data_end+0xf8005858>
10005974:	01000744 	movi	r4,29
10005978:	19000226 	beq	r3,r4,10005984 <_fflush_r+0x1d8>
1000597c:	01000584 	movi	r4,22
10005980:	1900101e 	bne	r3,r4,100059c4 <_fflush_r+0x218>
10005984:	8080030b 	ldhu	r2,12(r16)
10005988:	80c00417 	ldw	r3,16(r16)
1000598c:	80000115 	stw	zero,4(r16)
10005990:	10bdffcc 	andi	r2,r2,63487
10005994:	8080030d 	sth	r2,12(r16)
10005998:	80c00015 	stw	r3,0(r16)
1000599c:	003fb706 	br	1000587c <__alt_data_end+0xf800587c>
100059a0:	98800017 	ldw	r2,0(r19)
100059a4:	103feb26 	beq	r2,zero,10005954 <__alt_data_end+0xf8005954>
100059a8:	00c00744 	movi	r3,29
100059ac:	10c00226 	beq	r2,r3,100059b8 <_fflush_r+0x20c>
100059b0:	00c00584 	movi	r3,22
100059b4:	10ffd61e 	bne	r2,r3,10005910 <__alt_data_end+0xf8005910>
100059b8:	9c400015 	stw	r17,0(r19)
100059bc:	0005883a 	mov	r2,zero
100059c0:	003fb706 	br	100058a0 <__alt_data_end+0xf80058a0>
100059c4:	80c0030b 	ldhu	r3,12(r16)
100059c8:	18c01014 	ori	r3,r3,64
100059cc:	80c0030d 	sth	r3,12(r16)
100059d0:	003fb306 	br	100058a0 <__alt_data_end+0xf80058a0>

100059d4 <fflush>:
100059d4:	20000526 	beq	r4,zero,100059ec <fflush+0x18>
100059d8:	00840074 	movhi	r2,4097
100059dc:	10850904 	addi	r2,r2,5156
100059e0:	200b883a 	mov	r5,r4
100059e4:	11000017 	ldw	r4,0(r2)
100059e8:	00057ac1 	jmpi	100057ac <_fflush_r>
100059ec:	00840074 	movhi	r2,4097
100059f0:	10850804 	addi	r2,r2,5152
100059f4:	11000017 	ldw	r4,0(r2)
100059f8:	01440034 	movhi	r5,4096
100059fc:	2955eb04 	addi	r5,r5,22444
10005a00:	00067281 	jmpi	10006728 <_fwalk_reent>

10005a04 <__fp_lock>:
10005a04:	0005883a 	mov	r2,zero
10005a08:	f800283a 	ret

10005a0c <__fp_unlock>:
10005a0c:	0005883a 	mov	r2,zero
10005a10:	f800283a 	ret

10005a14 <_cleanup_r>:
10005a14:	01440074 	movhi	r5,4097
10005a18:	2969cd04 	addi	r5,r5,-22732
10005a1c:	00066701 	jmpi	10006670 <_fwalk>

10005a20 <__sinit.part.1>:
10005a20:	defff604 	addi	sp,sp,-40
10005a24:	00c40034 	movhi	r3,4096
10005a28:	dfc00915 	stw	ra,36(sp)
10005a2c:	df000815 	stw	fp,32(sp)
10005a30:	ddc00715 	stw	r23,28(sp)
10005a34:	dd800615 	stw	r22,24(sp)
10005a38:	dd400515 	stw	r21,20(sp)
10005a3c:	dd000415 	stw	r20,16(sp)
10005a40:	dcc00315 	stw	r19,12(sp)
10005a44:	dc800215 	stw	r18,8(sp)
10005a48:	dc400115 	stw	r17,4(sp)
10005a4c:	dc000015 	stw	r16,0(sp)
10005a50:	18d68504 	addi	r3,r3,23060
10005a54:	24000117 	ldw	r16,4(r4)
10005a58:	20c00f15 	stw	r3,60(r4)
10005a5c:	07000044 	movi	fp,1
10005a60:	00c000c4 	movi	r3,3
10005a64:	2080bb04 	addi	r2,r4,748
10005a68:	20c0b915 	stw	r3,740(r4)
10005a6c:	27000e15 	stw	fp,56(r4)
10005a70:	2080ba15 	stw	r2,744(r4)
10005a74:	2000b815 	stw	zero,736(r4)
10005a78:	05c00204 	movi	r23,8
10005a7c:	00800104 	movi	r2,4
10005a80:	2025883a 	mov	r18,r4
10005a84:	b80d883a 	mov	r6,r23
10005a88:	81001704 	addi	r4,r16,92
10005a8c:	000b883a 	mov	r5,zero
10005a90:	80000015 	stw	zero,0(r16)
10005a94:	80000115 	stw	zero,4(r16)
10005a98:	80000215 	stw	zero,8(r16)
10005a9c:	8080030d 	sth	r2,12(r16)
10005aa0:	80001915 	stw	zero,100(r16)
10005aa4:	8000038d 	sth	zero,14(r16)
10005aa8:	80000415 	stw	zero,16(r16)
10005aac:	80000515 	stw	zero,20(r16)
10005ab0:	80000615 	stw	zero,24(r16)
10005ab4:	000759c0 	call	1000759c <memset>
10005ab8:	05840074 	movhi	r22,4097
10005abc:	94400217 	ldw	r17,8(r18)
10005ac0:	05440074 	movhi	r21,4097
10005ac4:	05040074 	movhi	r20,4097
10005ac8:	04c40074 	movhi	r19,4097
10005acc:	b5a35c04 	addi	r22,r22,-29328
10005ad0:	ad637304 	addi	r21,r21,-29236
10005ad4:	a5239204 	addi	r20,r20,-29112
10005ad8:	9ce3a904 	addi	r19,r19,-29020
10005adc:	85800815 	stw	r22,32(r16)
10005ae0:	85400915 	stw	r21,36(r16)
10005ae4:	85000a15 	stw	r20,40(r16)
10005ae8:	84c00b15 	stw	r19,44(r16)
10005aec:	84000715 	stw	r16,28(r16)
10005af0:	00800284 	movi	r2,10
10005af4:	89001704 	addi	r4,r17,92
10005af8:	b80d883a 	mov	r6,r23
10005afc:	000b883a 	mov	r5,zero
10005b00:	88000015 	stw	zero,0(r17)
10005b04:	88000115 	stw	zero,4(r17)
10005b08:	88000215 	stw	zero,8(r17)
10005b0c:	8880030d 	sth	r2,12(r17)
10005b10:	88001915 	stw	zero,100(r17)
10005b14:	8f00038d 	sth	fp,14(r17)
10005b18:	88000415 	stw	zero,16(r17)
10005b1c:	88000515 	stw	zero,20(r17)
10005b20:	88000615 	stw	zero,24(r17)
10005b24:	000759c0 	call	1000759c <memset>
10005b28:	94000317 	ldw	r16,12(r18)
10005b2c:	00800484 	movi	r2,18
10005b30:	8c400715 	stw	r17,28(r17)
10005b34:	8d800815 	stw	r22,32(r17)
10005b38:	8d400915 	stw	r21,36(r17)
10005b3c:	8d000a15 	stw	r20,40(r17)
10005b40:	8cc00b15 	stw	r19,44(r17)
10005b44:	8080030d 	sth	r2,12(r16)
10005b48:	00800084 	movi	r2,2
10005b4c:	80000015 	stw	zero,0(r16)
10005b50:	80000115 	stw	zero,4(r16)
10005b54:	80000215 	stw	zero,8(r16)
10005b58:	80001915 	stw	zero,100(r16)
10005b5c:	8080038d 	sth	r2,14(r16)
10005b60:	80000415 	stw	zero,16(r16)
10005b64:	80000515 	stw	zero,20(r16)
10005b68:	80000615 	stw	zero,24(r16)
10005b6c:	81001704 	addi	r4,r16,92
10005b70:	000b883a 	mov	r5,zero
10005b74:	b80d883a 	mov	r6,r23
10005b78:	000759c0 	call	1000759c <memset>
10005b7c:	84000715 	stw	r16,28(r16)
10005b80:	85800815 	stw	r22,32(r16)
10005b84:	85400915 	stw	r21,36(r16)
10005b88:	85000a15 	stw	r20,40(r16)
10005b8c:	84c00b15 	stw	r19,44(r16)
10005b90:	dfc00917 	ldw	ra,36(sp)
10005b94:	df000817 	ldw	fp,32(sp)
10005b98:	ddc00717 	ldw	r23,28(sp)
10005b9c:	dd800617 	ldw	r22,24(sp)
10005ba0:	dd400517 	ldw	r21,20(sp)
10005ba4:	dd000417 	ldw	r20,16(sp)
10005ba8:	dcc00317 	ldw	r19,12(sp)
10005bac:	dc800217 	ldw	r18,8(sp)
10005bb0:	dc400117 	ldw	r17,4(sp)
10005bb4:	dc000017 	ldw	r16,0(sp)
10005bb8:	dec00a04 	addi	sp,sp,40
10005bbc:	f800283a 	ret

10005bc0 <__sfmoreglue>:
10005bc0:	defffc04 	addi	sp,sp,-16
10005bc4:	dc800215 	stw	r18,8(sp)
10005bc8:	2825883a 	mov	r18,r5
10005bcc:	dc000015 	stw	r16,0(sp)
10005bd0:	01401a04 	movi	r5,104
10005bd4:	2021883a 	mov	r16,r4
10005bd8:	9009883a 	mov	r4,r18
10005bdc:	dfc00315 	stw	ra,12(sp)
10005be0:	dc400115 	stw	r17,4(sp)
10005be4:	00019c40 	call	100019c4 <__mulsi3>
10005be8:	8009883a 	mov	r4,r16
10005bec:	11400304 	addi	r5,r2,12
10005bf0:	1023883a 	mov	r17,r2
10005bf4:	0006a780 	call	10006a78 <_malloc_r>
10005bf8:	1021883a 	mov	r16,r2
10005bfc:	10000726 	beq	r2,zero,10005c1c <__sfmoreglue+0x5c>
10005c00:	11000304 	addi	r4,r2,12
10005c04:	10000015 	stw	zero,0(r2)
10005c08:	14800115 	stw	r18,4(r2)
10005c0c:	11000215 	stw	r4,8(r2)
10005c10:	000b883a 	mov	r5,zero
10005c14:	880d883a 	mov	r6,r17
10005c18:	000759c0 	call	1000759c <memset>
10005c1c:	8005883a 	mov	r2,r16
10005c20:	dfc00317 	ldw	ra,12(sp)
10005c24:	dc800217 	ldw	r18,8(sp)
10005c28:	dc400117 	ldw	r17,4(sp)
10005c2c:	dc000017 	ldw	r16,0(sp)
10005c30:	dec00404 	addi	sp,sp,16
10005c34:	f800283a 	ret

10005c38 <__sfp>:
10005c38:	00840074 	movhi	r2,4097
10005c3c:	defffb04 	addi	sp,sp,-20
10005c40:	10850804 	addi	r2,r2,5152
10005c44:	dc800215 	stw	r18,8(sp)
10005c48:	14800017 	ldw	r18,0(r2)
10005c4c:	dcc00315 	stw	r19,12(sp)
10005c50:	dfc00415 	stw	ra,16(sp)
10005c54:	90800e17 	ldw	r2,56(r18)
10005c58:	dc400115 	stw	r17,4(sp)
10005c5c:	dc000015 	stw	r16,0(sp)
10005c60:	2027883a 	mov	r19,r4
10005c64:	1000021e 	bne	r2,zero,10005c70 <__sfp+0x38>
10005c68:	9009883a 	mov	r4,r18
10005c6c:	0005a200 	call	10005a20 <__sinit.part.1>
10005c70:	9480b804 	addi	r18,r18,736
10005c74:	047fffc4 	movi	r17,-1
10005c78:	91400117 	ldw	r5,4(r18)
10005c7c:	94000217 	ldw	r16,8(r18)
10005c80:	297fffc4 	addi	r5,r5,-1
10005c84:	28000a16 	blt	r5,zero,10005cb0 <__sfp+0x78>
10005c88:	8080030f 	ldh	r2,12(r16)
10005c8c:	10000c26 	beq	r2,zero,10005cc0 <__sfp+0x88>
10005c90:	80c01d04 	addi	r3,r16,116
10005c94:	00000206 	br	10005ca0 <__sfp+0x68>
10005c98:	18bfe60f 	ldh	r2,-104(r3)
10005c9c:	10000826 	beq	r2,zero,10005cc0 <__sfp+0x88>
10005ca0:	297fffc4 	addi	r5,r5,-1
10005ca4:	1c3ffd04 	addi	r16,r3,-12
10005ca8:	18c01a04 	addi	r3,r3,104
10005cac:	2c7ffa1e 	bne	r5,r17,10005c98 <__alt_data_end+0xf8005c98>
10005cb0:	90800017 	ldw	r2,0(r18)
10005cb4:	10001d26 	beq	r2,zero,10005d2c <__sfp+0xf4>
10005cb8:	1025883a 	mov	r18,r2
10005cbc:	003fee06 	br	10005c78 <__alt_data_end+0xf8005c78>
10005cc0:	00bfffc4 	movi	r2,-1
10005cc4:	8080038d 	sth	r2,14(r16)
10005cc8:	00800044 	movi	r2,1
10005ccc:	8080030d 	sth	r2,12(r16)
10005cd0:	80001915 	stw	zero,100(r16)
10005cd4:	80000015 	stw	zero,0(r16)
10005cd8:	80000215 	stw	zero,8(r16)
10005cdc:	80000115 	stw	zero,4(r16)
10005ce0:	80000415 	stw	zero,16(r16)
10005ce4:	80000515 	stw	zero,20(r16)
10005ce8:	80000615 	stw	zero,24(r16)
10005cec:	81001704 	addi	r4,r16,92
10005cf0:	000b883a 	mov	r5,zero
10005cf4:	01800204 	movi	r6,8
10005cf8:	000759c0 	call	1000759c <memset>
10005cfc:	8005883a 	mov	r2,r16
10005d00:	80000c15 	stw	zero,48(r16)
10005d04:	80000d15 	stw	zero,52(r16)
10005d08:	80001115 	stw	zero,68(r16)
10005d0c:	80001215 	stw	zero,72(r16)
10005d10:	dfc00417 	ldw	ra,16(sp)
10005d14:	dcc00317 	ldw	r19,12(sp)
10005d18:	dc800217 	ldw	r18,8(sp)
10005d1c:	dc400117 	ldw	r17,4(sp)
10005d20:	dc000017 	ldw	r16,0(sp)
10005d24:	dec00504 	addi	sp,sp,20
10005d28:	f800283a 	ret
10005d2c:	9809883a 	mov	r4,r19
10005d30:	01400104 	movi	r5,4
10005d34:	0005bc00 	call	10005bc0 <__sfmoreglue>
10005d38:	90800015 	stw	r2,0(r18)
10005d3c:	103fde1e 	bne	r2,zero,10005cb8 <__alt_data_end+0xf8005cb8>
10005d40:	00800304 	movi	r2,12
10005d44:	98800015 	stw	r2,0(r19)
10005d48:	0005883a 	mov	r2,zero
10005d4c:	003ff006 	br	10005d10 <__alt_data_end+0xf8005d10>

10005d50 <_cleanup>:
10005d50:	00840074 	movhi	r2,4097
10005d54:	10850804 	addi	r2,r2,5152
10005d58:	11000017 	ldw	r4,0(r2)
10005d5c:	01440074 	movhi	r5,4097
10005d60:	2969cd04 	addi	r5,r5,-22732
10005d64:	00066701 	jmpi	10006670 <_fwalk>

10005d68 <__sinit>:
10005d68:	20800e17 	ldw	r2,56(r4)
10005d6c:	10000126 	beq	r2,zero,10005d74 <__sinit+0xc>
10005d70:	f800283a 	ret
10005d74:	0005a201 	jmpi	10005a20 <__sinit.part.1>

10005d78 <__sfp_lock_acquire>:
10005d78:	f800283a 	ret

10005d7c <__sfp_lock_release>:
10005d7c:	f800283a 	ret

10005d80 <__sinit_lock_acquire>:
10005d80:	f800283a 	ret

10005d84 <__sinit_lock_release>:
10005d84:	f800283a 	ret

10005d88 <__fp_lock_all>:
10005d88:	00840074 	movhi	r2,4097
10005d8c:	10850904 	addi	r2,r2,5156
10005d90:	11000017 	ldw	r4,0(r2)
10005d94:	01440034 	movhi	r5,4096
10005d98:	29568104 	addi	r5,r5,23044
10005d9c:	00066701 	jmpi	10006670 <_fwalk>

10005da0 <__fp_unlock_all>:
10005da0:	00840074 	movhi	r2,4097
10005da4:	10850904 	addi	r2,r2,5156
10005da8:	11000017 	ldw	r4,0(r2)
10005dac:	01440034 	movhi	r5,4096
10005db0:	29568304 	addi	r5,r5,23052
10005db4:	00066701 	jmpi	10006670 <_fwalk>

10005db8 <_malloc_trim_r>:
10005db8:	defffb04 	addi	sp,sp,-20
10005dbc:	dcc00315 	stw	r19,12(sp)
10005dc0:	04c40074 	movhi	r19,4097
10005dc4:	dc800215 	stw	r18,8(sp)
10005dc8:	dc400115 	stw	r17,4(sp)
10005dcc:	dc000015 	stw	r16,0(sp)
10005dd0:	dfc00415 	stw	ra,16(sp)
10005dd4:	2821883a 	mov	r16,r5
10005dd8:	9cff8404 	addi	r19,r19,-496
10005ddc:	2025883a 	mov	r18,r4
10005de0:	000d3700 	call	1000d370 <__malloc_lock>
10005de4:	98800217 	ldw	r2,8(r19)
10005de8:	14400117 	ldw	r17,4(r2)
10005dec:	00bfff04 	movi	r2,-4
10005df0:	88a2703a 	and	r17,r17,r2
10005df4:	8c21c83a 	sub	r16,r17,r16
10005df8:	8403fbc4 	addi	r16,r16,4079
10005dfc:	8020d33a 	srli	r16,r16,12
10005e00:	0083ffc4 	movi	r2,4095
10005e04:	843fffc4 	addi	r16,r16,-1
10005e08:	8020933a 	slli	r16,r16,12
10005e0c:	1400060e 	bge	r2,r16,10005e28 <_malloc_trim_r+0x70>
10005e10:	9009883a 	mov	r4,r18
10005e14:	000b883a 	mov	r5,zero
10005e18:	0008d1c0 	call	10008d1c <_sbrk_r>
10005e1c:	98c00217 	ldw	r3,8(r19)
10005e20:	1c47883a 	add	r3,r3,r17
10005e24:	10c00a26 	beq	r2,r3,10005e50 <_malloc_trim_r+0x98>
10005e28:	9009883a 	mov	r4,r18
10005e2c:	000d3900 	call	1000d390 <__malloc_unlock>
10005e30:	0005883a 	mov	r2,zero
10005e34:	dfc00417 	ldw	ra,16(sp)
10005e38:	dcc00317 	ldw	r19,12(sp)
10005e3c:	dc800217 	ldw	r18,8(sp)
10005e40:	dc400117 	ldw	r17,4(sp)
10005e44:	dc000017 	ldw	r16,0(sp)
10005e48:	dec00504 	addi	sp,sp,20
10005e4c:	f800283a 	ret
10005e50:	9009883a 	mov	r4,r18
10005e54:	040bc83a 	sub	r5,zero,r16
10005e58:	0008d1c0 	call	10008d1c <_sbrk_r>
10005e5c:	00ffffc4 	movi	r3,-1
10005e60:	10c00d26 	beq	r2,r3,10005e98 <_malloc_trim_r+0xe0>
10005e64:	00c40074 	movhi	r3,4097
10005e68:	18cbe104 	addi	r3,r3,12164
10005e6c:	18800017 	ldw	r2,0(r3)
10005e70:	99000217 	ldw	r4,8(r19)
10005e74:	8c23c83a 	sub	r17,r17,r16
10005e78:	8c400054 	ori	r17,r17,1
10005e7c:	1421c83a 	sub	r16,r2,r16
10005e80:	24400115 	stw	r17,4(r4)
10005e84:	9009883a 	mov	r4,r18
10005e88:	1c000015 	stw	r16,0(r3)
10005e8c:	000d3900 	call	1000d390 <__malloc_unlock>
10005e90:	00800044 	movi	r2,1
10005e94:	003fe706 	br	10005e34 <__alt_data_end+0xf8005e34>
10005e98:	9009883a 	mov	r4,r18
10005e9c:	000b883a 	mov	r5,zero
10005ea0:	0008d1c0 	call	10008d1c <_sbrk_r>
10005ea4:	99000217 	ldw	r4,8(r19)
10005ea8:	014003c4 	movi	r5,15
10005eac:	1107c83a 	sub	r3,r2,r4
10005eb0:	28ffdd0e 	bge	r5,r3,10005e28 <__alt_data_end+0xf8005e28>
10005eb4:	01440074 	movhi	r5,4097
10005eb8:	29450b04 	addi	r5,r5,5164
10005ebc:	29400017 	ldw	r5,0(r5)
10005ec0:	18c00054 	ori	r3,r3,1
10005ec4:	20c00115 	stw	r3,4(r4)
10005ec8:	00c40074 	movhi	r3,4097
10005ecc:	1145c83a 	sub	r2,r2,r5
10005ed0:	18cbe104 	addi	r3,r3,12164
10005ed4:	18800015 	stw	r2,0(r3)
10005ed8:	003fd306 	br	10005e28 <__alt_data_end+0xf8005e28>

10005edc <_free_r>:
10005edc:	28004c26 	beq	r5,zero,10006010 <_free_r+0x134>
10005ee0:	defffd04 	addi	sp,sp,-12
10005ee4:	dc400115 	stw	r17,4(sp)
10005ee8:	dc000015 	stw	r16,0(sp)
10005eec:	2023883a 	mov	r17,r4
10005ef0:	2821883a 	mov	r16,r5
10005ef4:	dfc00215 	stw	ra,8(sp)
10005ef8:	000d3700 	call	1000d370 <__malloc_lock>
10005efc:	813fff17 	ldw	r4,-4(r16)
10005f00:	00bfff84 	movi	r2,-2
10005f04:	02440074 	movhi	r9,4097
10005f08:	81bffe04 	addi	r6,r16,-8
10005f0c:	2084703a 	and	r2,r4,r2
10005f10:	4a7f8404 	addi	r9,r9,-496
10005f14:	308b883a 	add	r5,r6,r2
10005f18:	2a000117 	ldw	r8,4(r5)
10005f1c:	49c00217 	ldw	r7,8(r9)
10005f20:	00ffff04 	movi	r3,-4
10005f24:	40c6703a 	and	r3,r8,r3
10005f28:	39405326 	beq	r7,r5,10006078 <_free_r+0x19c>
10005f2c:	28c00115 	stw	r3,4(r5)
10005f30:	2100004c 	andi	r4,r4,1
10005f34:	2000091e 	bne	r4,zero,10005f5c <_free_r+0x80>
10005f38:	81fffe17 	ldw	r7,-8(r16)
10005f3c:	4a000204 	addi	r8,r9,8
10005f40:	31cdc83a 	sub	r6,r6,r7
10005f44:	31000217 	ldw	r4,8(r6)
10005f48:	11c5883a 	add	r2,r2,r7
10005f4c:	22006126 	beq	r4,r8,100060d4 <_free_r+0x1f8>
10005f50:	31c00317 	ldw	r7,12(r6)
10005f54:	21c00315 	stw	r7,12(r4)
10005f58:	39000215 	stw	r4,8(r7)
10005f5c:	28c9883a 	add	r4,r5,r3
10005f60:	21c00117 	ldw	r7,4(r4)
10005f64:	39c0004c 	andi	r7,r7,1
10005f68:	38000d1e 	bne	r7,zero,10005fa0 <_free_r+0xc4>
10005f6c:	29000217 	ldw	r4,8(r5)
10005f70:	10c5883a 	add	r2,r2,r3
10005f74:	00c40074 	movhi	r3,4097
10005f78:	18ff8604 	addi	r3,r3,-488
10005f7c:	20c07526 	beq	r4,r3,10006154 <_free_r+0x278>
10005f80:	29c00317 	ldw	r7,12(r5)
10005f84:	11400054 	ori	r5,r2,1
10005f88:	3087883a 	add	r3,r6,r2
10005f8c:	21c00315 	stw	r7,12(r4)
10005f90:	39000215 	stw	r4,8(r7)
10005f94:	31400115 	stw	r5,4(r6)
10005f98:	18800015 	stw	r2,0(r3)
10005f9c:	00000406 	br	10005fb0 <_free_r+0xd4>
10005fa0:	10c00054 	ori	r3,r2,1
10005fa4:	30c00115 	stw	r3,4(r6)
10005fa8:	3087883a 	add	r3,r6,r2
10005fac:	18800015 	stw	r2,0(r3)
10005fb0:	00c07fc4 	movi	r3,511
10005fb4:	18801736 	bltu	r3,r2,10006014 <_free_r+0x138>
10005fb8:	1004d0fa 	srli	r2,r2,3
10005fbc:	01400044 	movi	r5,1
10005fc0:	49000117 	ldw	r4,4(r9)
10005fc4:	1087883a 	add	r3,r2,r2
10005fc8:	18c7883a 	add	r3,r3,r3
10005fcc:	1005d0ba 	srai	r2,r2,2
10005fd0:	18c7883a 	add	r3,r3,r3
10005fd4:	1a47883a 	add	r3,r3,r9
10005fd8:	19c00217 	ldw	r7,8(r3)
10005fdc:	2884983a 	sll	r2,r5,r2
10005fe0:	30c00315 	stw	r3,12(r6)
10005fe4:	31c00215 	stw	r7,8(r6)
10005fe8:	1104b03a 	or	r2,r2,r4
10005fec:	19800215 	stw	r6,8(r3)
10005ff0:	48800115 	stw	r2,4(r9)
10005ff4:	39800315 	stw	r6,12(r7)
10005ff8:	8809883a 	mov	r4,r17
10005ffc:	dfc00217 	ldw	ra,8(sp)
10006000:	dc400117 	ldw	r17,4(sp)
10006004:	dc000017 	ldw	r16,0(sp)
10006008:	dec00304 	addi	sp,sp,12
1000600c:	000d3901 	jmpi	1000d390 <__malloc_unlock>
10006010:	f800283a 	ret
10006014:	1006d27a 	srli	r3,r2,9
10006018:	01000104 	movi	r4,4
1000601c:	20c04036 	bltu	r4,r3,10006120 <_free_r+0x244>
10006020:	1006d1ba 	srli	r3,r2,6
10006024:	19400e04 	addi	r5,r3,56
10006028:	2947883a 	add	r3,r5,r5
1000602c:	18c7883a 	add	r3,r3,r3
10006030:	18c7883a 	add	r3,r3,r3
10006034:	1a49883a 	add	r4,r3,r9
10006038:	20c00217 	ldw	r3,8(r4)
1000603c:	01c40074 	movhi	r7,4097
10006040:	39ff8404 	addi	r7,r7,-496
10006044:	19003b26 	beq	r3,r4,10006134 <_free_r+0x258>
10006048:	01ffff04 	movi	r7,-4
1000604c:	19400117 	ldw	r5,4(r3)
10006050:	29ca703a 	and	r5,r5,r7
10006054:	1140022e 	bgeu	r2,r5,10006060 <_free_r+0x184>
10006058:	18c00217 	ldw	r3,8(r3)
1000605c:	20fffb1e 	bne	r4,r3,1000604c <__alt_data_end+0xf800604c>
10006060:	18800317 	ldw	r2,12(r3)
10006064:	30800315 	stw	r2,12(r6)
10006068:	30c00215 	stw	r3,8(r6)
1000606c:	11800215 	stw	r6,8(r2)
10006070:	19800315 	stw	r6,12(r3)
10006074:	003fe006 	br	10005ff8 <__alt_data_end+0xf8005ff8>
10006078:	2100004c 	andi	r4,r4,1
1000607c:	1885883a 	add	r2,r3,r2
10006080:	2000071e 	bne	r4,zero,100060a0 <_free_r+0x1c4>
10006084:	817ffe17 	ldw	r5,-8(r16)
10006088:	314dc83a 	sub	r6,r6,r5
1000608c:	30c00317 	ldw	r3,12(r6)
10006090:	31000217 	ldw	r4,8(r6)
10006094:	1145883a 	add	r2,r2,r5
10006098:	20c00315 	stw	r3,12(r4)
1000609c:	19000215 	stw	r4,8(r3)
100060a0:	10c00054 	ori	r3,r2,1
100060a4:	30c00115 	stw	r3,4(r6)
100060a8:	00c40074 	movhi	r3,4097
100060ac:	18c50c04 	addi	r3,r3,5168
100060b0:	18c00017 	ldw	r3,0(r3)
100060b4:	49800215 	stw	r6,8(r9)
100060b8:	10ffcf36 	bltu	r2,r3,10005ff8 <__alt_data_end+0xf8005ff8>
100060bc:	00840074 	movhi	r2,4097
100060c0:	108bd804 	addi	r2,r2,12128
100060c4:	11400017 	ldw	r5,0(r2)
100060c8:	8809883a 	mov	r4,r17
100060cc:	0005db80 	call	10005db8 <_malloc_trim_r>
100060d0:	003fc906 	br	10005ff8 <__alt_data_end+0xf8005ff8>
100060d4:	28c9883a 	add	r4,r5,r3
100060d8:	21000117 	ldw	r4,4(r4)
100060dc:	2100004c 	andi	r4,r4,1
100060e0:	20000a1e 	bne	r4,zero,1000610c <_free_r+0x230>
100060e4:	29000317 	ldw	r4,12(r5)
100060e8:	29400217 	ldw	r5,8(r5)
100060ec:	10c5883a 	add	r2,r2,r3
100060f0:	10c00054 	ori	r3,r2,1
100060f4:	29000315 	stw	r4,12(r5)
100060f8:	21400215 	stw	r5,8(r4)
100060fc:	30c00115 	stw	r3,4(r6)
10006100:	308d883a 	add	r6,r6,r2
10006104:	30800015 	stw	r2,0(r6)
10006108:	003fbb06 	br	10005ff8 <__alt_data_end+0xf8005ff8>
1000610c:	10c00054 	ori	r3,r2,1
10006110:	30c00115 	stw	r3,4(r6)
10006114:	308d883a 	add	r6,r6,r2
10006118:	30800015 	stw	r2,0(r6)
1000611c:	003fb606 	br	10005ff8 <__alt_data_end+0xf8005ff8>
10006120:	01000504 	movi	r4,20
10006124:	20c01436 	bltu	r4,r3,10006178 <_free_r+0x29c>
10006128:	194016c4 	addi	r5,r3,91
1000612c:	2947883a 	add	r3,r5,r5
10006130:	003fbe06 	br	1000602c <__alt_data_end+0xf800602c>
10006134:	280bd0ba 	srai	r5,r5,2
10006138:	00800044 	movi	r2,1
1000613c:	39000117 	ldw	r4,4(r7)
10006140:	114a983a 	sll	r5,r2,r5
10006144:	1805883a 	mov	r2,r3
10006148:	2908b03a 	or	r4,r5,r4
1000614c:	39000115 	stw	r4,4(r7)
10006150:	003fc406 	br	10006064 <__alt_data_end+0xf8006064>
10006154:	49800515 	stw	r6,20(r9)
10006158:	49800415 	stw	r6,16(r9)
1000615c:	10c00054 	ori	r3,r2,1
10006160:	31000315 	stw	r4,12(r6)
10006164:	31000215 	stw	r4,8(r6)
10006168:	30c00115 	stw	r3,4(r6)
1000616c:	308d883a 	add	r6,r6,r2
10006170:	30800015 	stw	r2,0(r6)
10006174:	003fa006 	br	10005ff8 <__alt_data_end+0xf8005ff8>
10006178:	01001504 	movi	r4,84
1000617c:	20c00436 	bltu	r4,r3,10006190 <_free_r+0x2b4>
10006180:	1006d33a 	srli	r3,r2,12
10006184:	19401b84 	addi	r5,r3,110
10006188:	2947883a 	add	r3,r5,r5
1000618c:	003fa706 	br	1000602c <__alt_data_end+0xf800602c>
10006190:	01005504 	movi	r4,340
10006194:	20c00436 	bltu	r4,r3,100061a8 <_free_r+0x2cc>
10006198:	1006d3fa 	srli	r3,r2,15
1000619c:	19401dc4 	addi	r5,r3,119
100061a0:	2947883a 	add	r3,r5,r5
100061a4:	003fa106 	br	1000602c <__alt_data_end+0xf800602c>
100061a8:	01015504 	movi	r4,1364
100061ac:	20c00436 	bltu	r4,r3,100061c0 <_free_r+0x2e4>
100061b0:	1006d4ba 	srli	r3,r2,18
100061b4:	19401f04 	addi	r5,r3,124
100061b8:	2947883a 	add	r3,r5,r5
100061bc:	003f9b06 	br	1000602c <__alt_data_end+0xf800602c>
100061c0:	00c03f04 	movi	r3,252
100061c4:	01401f84 	movi	r5,126
100061c8:	003f9806 	br	1000602c <__alt_data_end+0xf800602c>

100061cc <__sfvwrite_r>:
100061cc:	30800217 	ldw	r2,8(r6)
100061d0:	10004526 	beq	r2,zero,100062e8 <__sfvwrite_r+0x11c>
100061d4:	28c0030b 	ldhu	r3,12(r5)
100061d8:	defff404 	addi	sp,sp,-48
100061dc:	dd400715 	stw	r21,28(sp)
100061e0:	dcc00515 	stw	r19,20(sp)
100061e4:	dc000215 	stw	r16,8(sp)
100061e8:	dfc00b15 	stw	ra,44(sp)
100061ec:	df000a15 	stw	fp,40(sp)
100061f0:	ddc00915 	stw	r23,36(sp)
100061f4:	dd800815 	stw	r22,32(sp)
100061f8:	dd000615 	stw	r20,24(sp)
100061fc:	dc800415 	stw	r18,16(sp)
10006200:	dc400315 	stw	r17,12(sp)
10006204:	1880020c 	andi	r2,r3,8
10006208:	2821883a 	mov	r16,r5
1000620c:	202b883a 	mov	r21,r4
10006210:	3027883a 	mov	r19,r6
10006214:	10002526 	beq	r2,zero,100062ac <__sfvwrite_r+0xe0>
10006218:	28800417 	ldw	r2,16(r5)
1000621c:	10002326 	beq	r2,zero,100062ac <__sfvwrite_r+0xe0>
10006220:	1880008c 	andi	r2,r3,2
10006224:	9c400017 	ldw	r17,0(r19)
10006228:	10003126 	beq	r2,zero,100062f0 <__sfvwrite_r+0x124>
1000622c:	0029883a 	mov	r20,zero
10006230:	0025883a 	mov	r18,zero
10006234:	05810004 	movi	r22,1024
10006238:	a00d883a 	mov	r6,r20
1000623c:	a809883a 	mov	r4,r21
10006240:	90002526 	beq	r18,zero,100062d8 <__sfvwrite_r+0x10c>
10006244:	900f883a 	mov	r7,r18
10006248:	81400717 	ldw	r5,28(r16)
1000624c:	b480012e 	bgeu	r22,r18,10006254 <__sfvwrite_r+0x88>
10006250:	01c10004 	movi	r7,1024
10006254:	80800917 	ldw	r2,36(r16)
10006258:	103ee83a 	callr	r2
1000625c:	0080510e 	bge	zero,r2,100063a4 <__sfvwrite_r+0x1d8>
10006260:	98c00217 	ldw	r3,8(r19)
10006264:	a0a9883a 	add	r20,r20,r2
10006268:	90a5c83a 	sub	r18,r18,r2
1000626c:	1885c83a 	sub	r2,r3,r2
10006270:	98800215 	stw	r2,8(r19)
10006274:	103ff01e 	bne	r2,zero,10006238 <__alt_data_end+0xf8006238>
10006278:	0005883a 	mov	r2,zero
1000627c:	dfc00b17 	ldw	ra,44(sp)
10006280:	df000a17 	ldw	fp,40(sp)
10006284:	ddc00917 	ldw	r23,36(sp)
10006288:	dd800817 	ldw	r22,32(sp)
1000628c:	dd400717 	ldw	r21,28(sp)
10006290:	dd000617 	ldw	r20,24(sp)
10006294:	dcc00517 	ldw	r19,20(sp)
10006298:	dc800417 	ldw	r18,16(sp)
1000629c:	dc400317 	ldw	r17,12(sp)
100062a0:	dc000217 	ldw	r16,8(sp)
100062a4:	dec00c04 	addi	sp,sp,48
100062a8:	f800283a 	ret
100062ac:	a809883a 	mov	r4,r21
100062b0:	800b883a 	mov	r5,r16
100062b4:	0003d2c0 	call	10003d2c <__swsetup_r>
100062b8:	80c0030b 	ldhu	r3,12(r16)
100062bc:	103fd826 	beq	r2,zero,10006220 <__alt_data_end+0xf8006220>
100062c0:	18c01014 	ori	r3,r3,64
100062c4:	80c0030d 	sth	r3,12(r16)
100062c8:	00c00244 	movi	r3,9
100062cc:	00bfffc4 	movi	r2,-1
100062d0:	a8c00015 	stw	r3,0(r21)
100062d4:	003fe906 	br	1000627c <__alt_data_end+0xf800627c>
100062d8:	8d000017 	ldw	r20,0(r17)
100062dc:	8c800117 	ldw	r18,4(r17)
100062e0:	8c400204 	addi	r17,r17,8
100062e4:	003fd406 	br	10006238 <__alt_data_end+0xf8006238>
100062e8:	0005883a 	mov	r2,zero
100062ec:	f800283a 	ret
100062f0:	1880004c 	andi	r2,r3,1
100062f4:	1000301e 	bne	r2,zero,100063b8 <__sfvwrite_r+0x1ec>
100062f8:	002f883a 	mov	r23,zero
100062fc:	0025883a 	mov	r18,zero
10006300:	90001c26 	beq	r18,zero,10006374 <__sfvwrite_r+0x1a8>
10006304:	1880800c 	andi	r2,r3,512
10006308:	85000217 	ldw	r20,8(r16)
1000630c:	10006c26 	beq	r2,zero,100064c0 <__sfvwrite_r+0x2f4>
10006310:	a02d883a 	mov	r22,r20
10006314:	95008536 	bltu	r18,r20,1000652c <__sfvwrite_r+0x360>
10006318:	1881200c 	andi	r2,r3,1152
1000631c:	10009d1e 	bne	r2,zero,10006594 <__sfvwrite_r+0x3c8>
10006320:	81000017 	ldw	r4,0(r16)
10006324:	a039883a 	mov	fp,r20
10006328:	9029883a 	mov	r20,r18
1000632c:	b80b883a 	mov	r5,r23
10006330:	b00d883a 	mov	r6,r22
10006334:	00074400 	call	10007440 <memmove>
10006338:	80c00217 	ldw	r3,8(r16)
1000633c:	81000017 	ldw	r4,0(r16)
10006340:	9005883a 	mov	r2,r18
10006344:	1f39c83a 	sub	fp,r3,fp
10006348:	258f883a 	add	r7,r4,r22
1000634c:	87000215 	stw	fp,8(r16)
10006350:	81c00015 	stw	r7,0(r16)
10006354:	98c00217 	ldw	r3,8(r19)
10006358:	b8af883a 	add	r23,r23,r2
1000635c:	90a5c83a 	sub	r18,r18,r2
10006360:	1d05c83a 	sub	r2,r3,r20
10006364:	98800215 	stw	r2,8(r19)
10006368:	103fc326 	beq	r2,zero,10006278 <__alt_data_end+0xf8006278>
1000636c:	80c0030b 	ldhu	r3,12(r16)
10006370:	903fe41e 	bne	r18,zero,10006304 <__alt_data_end+0xf8006304>
10006374:	8dc00017 	ldw	r23,0(r17)
10006378:	8c800117 	ldw	r18,4(r17)
1000637c:	8c400204 	addi	r17,r17,8
10006380:	003fdf06 	br	10006300 <__alt_data_end+0xf8006300>
10006384:	00087080 	call	10008708 <_realloc_r>
10006388:	102d883a 	mov	r22,r2
1000638c:	1000a01e 	bne	r2,zero,10006610 <__sfvwrite_r+0x444>
10006390:	81400417 	ldw	r5,16(r16)
10006394:	a809883a 	mov	r4,r21
10006398:	0005edc0 	call	10005edc <_free_r>
1000639c:	00800304 	movi	r2,12
100063a0:	a8800015 	stw	r2,0(r21)
100063a4:	80c0030b 	ldhu	r3,12(r16)
100063a8:	00bfffc4 	movi	r2,-1
100063ac:	18c01014 	ori	r3,r3,64
100063b0:	80c0030d 	sth	r3,12(r16)
100063b4:	003fb106 	br	1000627c <__alt_data_end+0xf800627c>
100063b8:	0029883a 	mov	r20,zero
100063bc:	0011883a 	mov	r8,zero
100063c0:	0039883a 	mov	fp,zero
100063c4:	0025883a 	mov	r18,zero
100063c8:	90001f26 	beq	r18,zero,10006448 <__sfvwrite_r+0x27c>
100063cc:	40006826 	beq	r8,zero,10006570 <__sfvwrite_r+0x3a4>
100063d0:	a02f883a 	mov	r23,r20
100063d4:	9500012e 	bgeu	r18,r20,100063dc <__sfvwrite_r+0x210>
100063d8:	902f883a 	mov	r23,r18
100063dc:	81000017 	ldw	r4,0(r16)
100063e0:	80800417 	ldw	r2,16(r16)
100063e4:	b82d883a 	mov	r22,r23
100063e8:	81800217 	ldw	r6,8(r16)
100063ec:	81c00517 	ldw	r7,20(r16)
100063f0:	1100022e 	bgeu	r2,r4,100063fc <__sfvwrite_r+0x230>
100063f4:	31c7883a 	add	r3,r6,r7
100063f8:	1dc01816 	blt	r3,r23,1000645c <__sfvwrite_r+0x290>
100063fc:	b9c03f16 	blt	r23,r7,100064fc <__sfvwrite_r+0x330>
10006400:	80800917 	ldw	r2,36(r16)
10006404:	81400717 	ldw	r5,28(r16)
10006408:	a809883a 	mov	r4,r21
1000640c:	da000115 	stw	r8,4(sp)
10006410:	e00d883a 	mov	r6,fp
10006414:	103ee83a 	callr	r2
10006418:	102d883a 	mov	r22,r2
1000641c:	da000117 	ldw	r8,4(sp)
10006420:	00bfe00e 	bge	zero,r2,100063a4 <__alt_data_end+0xf80063a4>
10006424:	a5a9c83a 	sub	r20,r20,r22
10006428:	a0001f26 	beq	r20,zero,100064a8 <__sfvwrite_r+0x2dc>
1000642c:	98800217 	ldw	r2,8(r19)
10006430:	e5b9883a 	add	fp,fp,r22
10006434:	95a5c83a 	sub	r18,r18,r22
10006438:	15adc83a 	sub	r22,r2,r22
1000643c:	9d800215 	stw	r22,8(r19)
10006440:	b03f8d26 	beq	r22,zero,10006278 <__alt_data_end+0xf8006278>
10006444:	903fe11e 	bne	r18,zero,100063cc <__alt_data_end+0xf80063cc>
10006448:	8f000017 	ldw	fp,0(r17)
1000644c:	8c800117 	ldw	r18,4(r17)
10006450:	0011883a 	mov	r8,zero
10006454:	8c400204 	addi	r17,r17,8
10006458:	003fdb06 	br	100063c8 <__alt_data_end+0xf80063c8>
1000645c:	180d883a 	mov	r6,r3
10006460:	e00b883a 	mov	r5,fp
10006464:	da000115 	stw	r8,4(sp)
10006468:	d8c00015 	stw	r3,0(sp)
1000646c:	00074400 	call	10007440 <memmove>
10006470:	d8c00017 	ldw	r3,0(sp)
10006474:	80800017 	ldw	r2,0(r16)
10006478:	a809883a 	mov	r4,r21
1000647c:	800b883a 	mov	r5,r16
10006480:	10c5883a 	add	r2,r2,r3
10006484:	80800015 	stw	r2,0(r16)
10006488:	d8c00015 	stw	r3,0(sp)
1000648c:	00057ac0 	call	100057ac <_fflush_r>
10006490:	d8c00017 	ldw	r3,0(sp)
10006494:	da000117 	ldw	r8,4(sp)
10006498:	103fc21e 	bne	r2,zero,100063a4 <__alt_data_end+0xf80063a4>
1000649c:	182d883a 	mov	r22,r3
100064a0:	a5a9c83a 	sub	r20,r20,r22
100064a4:	a03fe11e 	bne	r20,zero,1000642c <__alt_data_end+0xf800642c>
100064a8:	a809883a 	mov	r4,r21
100064ac:	800b883a 	mov	r5,r16
100064b0:	00057ac0 	call	100057ac <_fflush_r>
100064b4:	103fbb1e 	bne	r2,zero,100063a4 <__alt_data_end+0xf80063a4>
100064b8:	0011883a 	mov	r8,zero
100064bc:	003fdb06 	br	1000642c <__alt_data_end+0xf800642c>
100064c0:	81000017 	ldw	r4,0(r16)
100064c4:	80800417 	ldw	r2,16(r16)
100064c8:	1100012e 	bgeu	r2,r4,100064d0 <__sfvwrite_r+0x304>
100064cc:	a4805a36 	bltu	r20,r18,10006638 <__sfvwrite_r+0x46c>
100064d0:	81c00517 	ldw	r7,20(r16)
100064d4:	91c01a36 	bltu	r18,r7,10006540 <__sfvwrite_r+0x374>
100064d8:	80800917 	ldw	r2,36(r16)
100064dc:	81400717 	ldw	r5,28(r16)
100064e0:	a809883a 	mov	r4,r21
100064e4:	b80d883a 	mov	r6,r23
100064e8:	103ee83a 	callr	r2
100064ec:	1029883a 	mov	r20,r2
100064f0:	00bfac0e 	bge	zero,r2,100063a4 <__alt_data_end+0xf80063a4>
100064f4:	a005883a 	mov	r2,r20
100064f8:	003f9606 	br	10006354 <__alt_data_end+0xf8006354>
100064fc:	b80d883a 	mov	r6,r23
10006500:	e00b883a 	mov	r5,fp
10006504:	da000115 	stw	r8,4(sp)
10006508:	00074400 	call	10007440 <memmove>
1000650c:	80800217 	ldw	r2,8(r16)
10006510:	80c00017 	ldw	r3,0(r16)
10006514:	da000117 	ldw	r8,4(sp)
10006518:	15c5c83a 	sub	r2,r2,r23
1000651c:	1def883a 	add	r23,r3,r23
10006520:	80800215 	stw	r2,8(r16)
10006524:	85c00015 	stw	r23,0(r16)
10006528:	003fbe06 	br	10006424 <__alt_data_end+0xf8006424>
1000652c:	81000017 	ldw	r4,0(r16)
10006530:	9039883a 	mov	fp,r18
10006534:	9029883a 	mov	r20,r18
10006538:	902d883a 	mov	r22,r18
1000653c:	003f7b06 	br	1000632c <__alt_data_end+0xf800632c>
10006540:	b80b883a 	mov	r5,r23
10006544:	900d883a 	mov	r6,r18
10006548:	00074400 	call	10007440 <memmove>
1000654c:	80c00217 	ldw	r3,8(r16)
10006550:	80800017 	ldw	r2,0(r16)
10006554:	9029883a 	mov	r20,r18
10006558:	1c87c83a 	sub	r3,r3,r18
1000655c:	1485883a 	add	r2,r2,r18
10006560:	80800015 	stw	r2,0(r16)
10006564:	80c00215 	stw	r3,8(r16)
10006568:	9005883a 	mov	r2,r18
1000656c:	003f7906 	br	10006354 <__alt_data_end+0xf8006354>
10006570:	e009883a 	mov	r4,fp
10006574:	01400284 	movi	r5,10
10006578:	900d883a 	mov	r6,r18
1000657c:	00072200 	call	10007220 <memchr>
10006580:	10003826 	beq	r2,zero,10006664 <__sfvwrite_r+0x498>
10006584:	10800044 	addi	r2,r2,1
10006588:	1729c83a 	sub	r20,r2,fp
1000658c:	02000044 	movi	r8,1
10006590:	003f8f06 	br	100063d0 <__alt_data_end+0xf80063d0>
10006594:	80800517 	ldw	r2,20(r16)
10006598:	81400417 	ldw	r5,16(r16)
1000659c:	87000017 	ldw	fp,0(r16)
100065a0:	10a9883a 	add	r20,r2,r2
100065a4:	a085883a 	add	r2,r20,r2
100065a8:	1028d7fa 	srli	r20,r2,31
100065ac:	e179c83a 	sub	fp,fp,r5
100065b0:	e1000044 	addi	r4,fp,1
100065b4:	a085883a 	add	r2,r20,r2
100065b8:	1029d07a 	srai	r20,r2,1
100065bc:	2485883a 	add	r2,r4,r18
100065c0:	a00d883a 	mov	r6,r20
100065c4:	a080022e 	bgeu	r20,r2,100065d0 <__sfvwrite_r+0x404>
100065c8:	1029883a 	mov	r20,r2
100065cc:	100d883a 	mov	r6,r2
100065d0:	18c1000c 	andi	r3,r3,1024
100065d4:	a809883a 	mov	r4,r21
100065d8:	183f6a26 	beq	r3,zero,10006384 <__alt_data_end+0xf8006384>
100065dc:	300b883a 	mov	r5,r6
100065e0:	0006a780 	call	10006a78 <_malloc_r>
100065e4:	102d883a 	mov	r22,r2
100065e8:	103f6c26 	beq	r2,zero,1000639c <__alt_data_end+0xf800639c>
100065ec:	81400417 	ldw	r5,16(r16)
100065f0:	1009883a 	mov	r4,r2
100065f4:	e00d883a 	mov	r6,fp
100065f8:	00073080 	call	10007308 <memcpy>
100065fc:	8080030b 	ldhu	r2,12(r16)
10006600:	00fedfc4 	movi	r3,-1153
10006604:	10c4703a 	and	r2,r2,r3
10006608:	10802014 	ori	r2,r2,128
1000660c:	8080030d 	sth	r2,12(r16)
10006610:	b709883a 	add	r4,r22,fp
10006614:	a707c83a 	sub	r3,r20,fp
10006618:	85800415 	stw	r22,16(r16)
1000661c:	85000515 	stw	r20,20(r16)
10006620:	81000015 	stw	r4,0(r16)
10006624:	9039883a 	mov	fp,r18
10006628:	80c00215 	stw	r3,8(r16)
1000662c:	9029883a 	mov	r20,r18
10006630:	902d883a 	mov	r22,r18
10006634:	003f3d06 	br	1000632c <__alt_data_end+0xf800632c>
10006638:	b80b883a 	mov	r5,r23
1000663c:	a00d883a 	mov	r6,r20
10006640:	00074400 	call	10007440 <memmove>
10006644:	80800017 	ldw	r2,0(r16)
10006648:	a809883a 	mov	r4,r21
1000664c:	800b883a 	mov	r5,r16
10006650:	1505883a 	add	r2,r2,r20
10006654:	80800015 	stw	r2,0(r16)
10006658:	00057ac0 	call	100057ac <_fflush_r>
1000665c:	103fa526 	beq	r2,zero,100064f4 <__alt_data_end+0xf80064f4>
10006660:	003f5006 	br	100063a4 <__alt_data_end+0xf80063a4>
10006664:	95000044 	addi	r20,r18,1
10006668:	02000044 	movi	r8,1
1000666c:	003f5806 	br	100063d0 <__alt_data_end+0xf80063d0>

10006670 <_fwalk>:
10006670:	defff804 	addi	sp,sp,-32
10006674:	dd400515 	stw	r21,20(sp)
10006678:	2540b804 	addi	r21,r4,736
1000667c:	dd800615 	stw	r22,24(sp)
10006680:	dd000415 	stw	r20,16(sp)
10006684:	dfc00715 	stw	ra,28(sp)
10006688:	dcc00315 	stw	r19,12(sp)
1000668c:	dc800215 	stw	r18,8(sp)
10006690:	dc400115 	stw	r17,4(sp)
10006694:	dc000015 	stw	r16,0(sp)
10006698:	2829883a 	mov	r20,r5
1000669c:	002d883a 	mov	r22,zero
100066a0:	0005d780 	call	10005d78 <__sfp_lock_acquire>
100066a4:	a8001426 	beq	r21,zero,100066f8 <_fwalk+0x88>
100066a8:	04ffffc4 	movi	r19,-1
100066ac:	ac400117 	ldw	r17,4(r21)
100066b0:	ac800217 	ldw	r18,8(r21)
100066b4:	8c7fffc4 	addi	r17,r17,-1
100066b8:	88000d16 	blt	r17,zero,100066f0 <_fwalk+0x80>
100066bc:	94000304 	addi	r16,r18,12
100066c0:	94800384 	addi	r18,r18,14
100066c4:	80c0000f 	ldh	r3,0(r16)
100066c8:	8c7fffc4 	addi	r17,r17,-1
100066cc:	813ffd04 	addi	r4,r16,-12
100066d0:	18000426 	beq	r3,zero,100066e4 <_fwalk+0x74>
100066d4:	90c0000f 	ldh	r3,0(r18)
100066d8:	1cc00226 	beq	r3,r19,100066e4 <_fwalk+0x74>
100066dc:	a03ee83a 	callr	r20
100066e0:	b0acb03a 	or	r22,r22,r2
100066e4:	84001a04 	addi	r16,r16,104
100066e8:	94801a04 	addi	r18,r18,104
100066ec:	8cfff51e 	bne	r17,r19,100066c4 <__alt_data_end+0xf80066c4>
100066f0:	ad400017 	ldw	r21,0(r21)
100066f4:	a83fed1e 	bne	r21,zero,100066ac <__alt_data_end+0xf80066ac>
100066f8:	0005d7c0 	call	10005d7c <__sfp_lock_release>
100066fc:	b005883a 	mov	r2,r22
10006700:	dfc00717 	ldw	ra,28(sp)
10006704:	dd800617 	ldw	r22,24(sp)
10006708:	dd400517 	ldw	r21,20(sp)
1000670c:	dd000417 	ldw	r20,16(sp)
10006710:	dcc00317 	ldw	r19,12(sp)
10006714:	dc800217 	ldw	r18,8(sp)
10006718:	dc400117 	ldw	r17,4(sp)
1000671c:	dc000017 	ldw	r16,0(sp)
10006720:	dec00804 	addi	sp,sp,32
10006724:	f800283a 	ret

10006728 <_fwalk_reent>:
10006728:	defff804 	addi	sp,sp,-32
1000672c:	dd400515 	stw	r21,20(sp)
10006730:	2540b804 	addi	r21,r4,736
10006734:	dd800615 	stw	r22,24(sp)
10006738:	dd000415 	stw	r20,16(sp)
1000673c:	dcc00315 	stw	r19,12(sp)
10006740:	dfc00715 	stw	ra,28(sp)
10006744:	dc800215 	stw	r18,8(sp)
10006748:	dc400115 	stw	r17,4(sp)
1000674c:	dc000015 	stw	r16,0(sp)
10006750:	2027883a 	mov	r19,r4
10006754:	2829883a 	mov	r20,r5
10006758:	002d883a 	mov	r22,zero
1000675c:	0005d780 	call	10005d78 <__sfp_lock_acquire>
10006760:	a8001326 	beq	r21,zero,100067b0 <_fwalk_reent+0x88>
10006764:	04bfffc4 	movi	r18,-1
10006768:	ac400117 	ldw	r17,4(r21)
1000676c:	ac000217 	ldw	r16,8(r21)
10006770:	8c7fffc4 	addi	r17,r17,-1
10006774:	88000c16 	blt	r17,zero,100067a8 <_fwalk_reent+0x80>
10006778:	84000304 	addi	r16,r16,12
1000677c:	80c0000f 	ldh	r3,0(r16)
10006780:	8c7fffc4 	addi	r17,r17,-1
10006784:	817ffd04 	addi	r5,r16,-12
10006788:	18000526 	beq	r3,zero,100067a0 <_fwalk_reent+0x78>
1000678c:	80c0008f 	ldh	r3,2(r16)
10006790:	9809883a 	mov	r4,r19
10006794:	1c800226 	beq	r3,r18,100067a0 <_fwalk_reent+0x78>
10006798:	a03ee83a 	callr	r20
1000679c:	b0acb03a 	or	r22,r22,r2
100067a0:	84001a04 	addi	r16,r16,104
100067a4:	8cbff51e 	bne	r17,r18,1000677c <__alt_data_end+0xf800677c>
100067a8:	ad400017 	ldw	r21,0(r21)
100067ac:	a83fee1e 	bne	r21,zero,10006768 <__alt_data_end+0xf8006768>
100067b0:	0005d7c0 	call	10005d7c <__sfp_lock_release>
100067b4:	b005883a 	mov	r2,r22
100067b8:	dfc00717 	ldw	ra,28(sp)
100067bc:	dd800617 	ldw	r22,24(sp)
100067c0:	dd400517 	ldw	r21,20(sp)
100067c4:	dd000417 	ldw	r20,16(sp)
100067c8:	dcc00317 	ldw	r19,12(sp)
100067cc:	dc800217 	ldw	r18,8(sp)
100067d0:	dc400117 	ldw	r17,4(sp)
100067d4:	dc000017 	ldw	r16,0(sp)
100067d8:	dec00804 	addi	sp,sp,32
100067dc:	f800283a 	ret

100067e0 <_setlocale_r>:
100067e0:	30001b26 	beq	r6,zero,10006850 <_setlocale_r+0x70>
100067e4:	01440074 	movhi	r5,4097
100067e8:	defffe04 	addi	sp,sp,-8
100067ec:	297dfc04 	addi	r5,r5,-2064
100067f0:	3009883a 	mov	r4,r6
100067f4:	dc000015 	stw	r16,0(sp)
100067f8:	dfc00115 	stw	ra,4(sp)
100067fc:	3021883a 	mov	r16,r6
10006800:	0008eac0 	call	10008eac <strcmp>
10006804:	1000061e 	bne	r2,zero,10006820 <_setlocale_r+0x40>
10006808:	00840074 	movhi	r2,4097
1000680c:	10bddd04 	addi	r2,r2,-2188
10006810:	dfc00117 	ldw	ra,4(sp)
10006814:	dc000017 	ldw	r16,0(sp)
10006818:	dec00204 	addi	sp,sp,8
1000681c:	f800283a 	ret
10006820:	01440074 	movhi	r5,4097
10006824:	297ddd04 	addi	r5,r5,-2188
10006828:	8009883a 	mov	r4,r16
1000682c:	0008eac0 	call	10008eac <strcmp>
10006830:	103ff526 	beq	r2,zero,10006808 <__alt_data_end+0xf8006808>
10006834:	01440074 	movhi	r5,4097
10006838:	297de704 	addi	r5,r5,-2148
1000683c:	8009883a 	mov	r4,r16
10006840:	0008eac0 	call	10008eac <strcmp>
10006844:	103ff026 	beq	r2,zero,10006808 <__alt_data_end+0xf8006808>
10006848:	0005883a 	mov	r2,zero
1000684c:	003ff006 	br	10006810 <__alt_data_end+0xf8006810>
10006850:	00840074 	movhi	r2,4097
10006854:	10bddd04 	addi	r2,r2,-2188
10006858:	f800283a 	ret

1000685c <__locale_charset>:
1000685c:	00840074 	movhi	r2,4097
10006860:	10bf6e04 	addi	r2,r2,-584
10006864:	f800283a 	ret

10006868 <__locale_mb_cur_max>:
10006868:	00840074 	movhi	r2,4097
1000686c:	10850a04 	addi	r2,r2,5160
10006870:	10800017 	ldw	r2,0(r2)
10006874:	f800283a 	ret

10006878 <__locale_msgcharset>:
10006878:	00840074 	movhi	r2,4097
1000687c:	10bf6604 	addi	r2,r2,-616
10006880:	f800283a 	ret

10006884 <__locale_cjk_lang>:
10006884:	0005883a 	mov	r2,zero
10006888:	f800283a 	ret

1000688c <_localeconv_r>:
1000688c:	00840074 	movhi	r2,4097
10006890:	10bf7604 	addi	r2,r2,-552
10006894:	f800283a 	ret

10006898 <setlocale>:
10006898:	00c40074 	movhi	r3,4097
1000689c:	18c50904 	addi	r3,r3,5156
100068a0:	2005883a 	mov	r2,r4
100068a4:	19000017 	ldw	r4,0(r3)
100068a8:	280d883a 	mov	r6,r5
100068ac:	100b883a 	mov	r5,r2
100068b0:	00067e01 	jmpi	100067e0 <_setlocale_r>

100068b4 <localeconv>:
100068b4:	00840074 	movhi	r2,4097
100068b8:	10bf7604 	addi	r2,r2,-552
100068bc:	f800283a 	ret

100068c0 <__smakebuf_r>:
100068c0:	2880030b 	ldhu	r2,12(r5)
100068c4:	10c0008c 	andi	r3,r2,2
100068c8:	1800401e 	bne	r3,zero,100069cc <__smakebuf_r+0x10c>
100068cc:	deffec04 	addi	sp,sp,-80
100068d0:	dc000f15 	stw	r16,60(sp)
100068d4:	2821883a 	mov	r16,r5
100068d8:	2940038f 	ldh	r5,14(r5)
100068dc:	dc401015 	stw	r17,64(sp)
100068e0:	dfc01315 	stw	ra,76(sp)
100068e4:	dcc01215 	stw	r19,72(sp)
100068e8:	dc801115 	stw	r18,68(sp)
100068ec:	2023883a 	mov	r17,r4
100068f0:	28001b16 	blt	r5,zero,10006960 <__smakebuf_r+0xa0>
100068f4:	d80d883a 	mov	r6,sp
100068f8:	000a9240 	call	1000a924 <_fstat_r>
100068fc:	10001716 	blt	r2,zero,1000695c <__smakebuf_r+0x9c>
10006900:	d8800117 	ldw	r2,4(sp)
10006904:	00e00014 	movui	r3,32768
10006908:	10bc000c 	andi	r2,r2,61440
1000690c:	10c03726 	beq	r2,r3,100069ec <__smakebuf_r+0x12c>
10006910:	80c0030b 	ldhu	r3,12(r16)
10006914:	18c20014 	ori	r3,r3,2048
10006918:	80c0030d 	sth	r3,12(r16)
1000691c:	00c80004 	movi	r3,8192
10006920:	10c03c1e 	bne	r2,r3,10006a14 <__smakebuf_r+0x154>
10006924:	8140038f 	ldh	r5,14(r16)
10006928:	8809883a 	mov	r4,r17
1000692c:	000a97c0 	call	1000a97c <_isatty_r>
10006930:	10004e26 	beq	r2,zero,10006a6c <__smakebuf_r+0x1ac>
10006934:	8080030b 	ldhu	r2,12(r16)
10006938:	04c00044 	movi	r19,1
1000693c:	80c010c4 	addi	r3,r16,67
10006940:	14c4b03a 	or	r2,r2,r19
10006944:	8080030d 	sth	r2,12(r16)
10006948:	80c00015 	stw	r3,0(r16)
1000694c:	80c00415 	stw	r3,16(r16)
10006950:	84c00515 	stw	r19,20(r16)
10006954:	04810004 	movi	r18,1024
10006958:	00000706 	br	10006978 <__smakebuf_r+0xb8>
1000695c:	8080030b 	ldhu	r2,12(r16)
10006960:	10c0200c 	andi	r3,r2,128
10006964:	18001f1e 	bne	r3,zero,100069e4 <__smakebuf_r+0x124>
10006968:	04810004 	movi	r18,1024
1000696c:	10820014 	ori	r2,r2,2048
10006970:	8080030d 	sth	r2,12(r16)
10006974:	0027883a 	mov	r19,zero
10006978:	8809883a 	mov	r4,r17
1000697c:	900b883a 	mov	r5,r18
10006980:	0006a780 	call	10006a78 <_malloc_r>
10006984:	10002e26 	beq	r2,zero,10006a40 <__smakebuf_r+0x180>
10006988:	80c0030b 	ldhu	r3,12(r16)
1000698c:	01040034 	movhi	r4,4096
10006990:	21168504 	addi	r4,r4,23060
10006994:	89000f15 	stw	r4,60(r17)
10006998:	18c02014 	ori	r3,r3,128
1000699c:	80c0030d 	sth	r3,12(r16)
100069a0:	80800015 	stw	r2,0(r16)
100069a4:	80800415 	stw	r2,16(r16)
100069a8:	84800515 	stw	r18,20(r16)
100069ac:	98001c1e 	bne	r19,zero,10006a20 <__smakebuf_r+0x160>
100069b0:	dfc01317 	ldw	ra,76(sp)
100069b4:	dcc01217 	ldw	r19,72(sp)
100069b8:	dc801117 	ldw	r18,68(sp)
100069bc:	dc401017 	ldw	r17,64(sp)
100069c0:	dc000f17 	ldw	r16,60(sp)
100069c4:	dec01404 	addi	sp,sp,80
100069c8:	f800283a 	ret
100069cc:	288010c4 	addi	r2,r5,67
100069d0:	28800015 	stw	r2,0(r5)
100069d4:	28800415 	stw	r2,16(r5)
100069d8:	00800044 	movi	r2,1
100069dc:	28800515 	stw	r2,20(r5)
100069e0:	f800283a 	ret
100069e4:	04801004 	movi	r18,64
100069e8:	003fe006 	br	1000696c <__alt_data_end+0xf800696c>
100069ec:	81000a17 	ldw	r4,40(r16)
100069f0:	00c40074 	movhi	r3,4097
100069f4:	18e39204 	addi	r3,r3,-29112
100069f8:	20ffc51e 	bne	r4,r3,10006910 <__alt_data_end+0xf8006910>
100069fc:	80c0030b 	ldhu	r3,12(r16)
10006a00:	01010004 	movi	r4,1024
10006a04:	81001315 	stw	r4,76(r16)
10006a08:	1906b03a 	or	r3,r3,r4
10006a0c:	80c0030d 	sth	r3,12(r16)
10006a10:	003fc206 	br	1000691c <__alt_data_end+0xf800691c>
10006a14:	0027883a 	mov	r19,zero
10006a18:	04810004 	movi	r18,1024
10006a1c:	003fd606 	br	10006978 <__alt_data_end+0xf8006978>
10006a20:	8140038f 	ldh	r5,14(r16)
10006a24:	8809883a 	mov	r4,r17
10006a28:	000a97c0 	call	1000a97c <_isatty_r>
10006a2c:	103fe026 	beq	r2,zero,100069b0 <__alt_data_end+0xf80069b0>
10006a30:	8080030b 	ldhu	r2,12(r16)
10006a34:	10800054 	ori	r2,r2,1
10006a38:	8080030d 	sth	r2,12(r16)
10006a3c:	003fdc06 	br	100069b0 <__alt_data_end+0xf80069b0>
10006a40:	8080030b 	ldhu	r2,12(r16)
10006a44:	10c0800c 	andi	r3,r2,512
10006a48:	183fd91e 	bne	r3,zero,100069b0 <__alt_data_end+0xf80069b0>
10006a4c:	10800094 	ori	r2,r2,2
10006a50:	80c010c4 	addi	r3,r16,67
10006a54:	8080030d 	sth	r2,12(r16)
10006a58:	00800044 	movi	r2,1
10006a5c:	80c00015 	stw	r3,0(r16)
10006a60:	80c00415 	stw	r3,16(r16)
10006a64:	80800515 	stw	r2,20(r16)
10006a68:	003fd106 	br	100069b0 <__alt_data_end+0xf80069b0>
10006a6c:	04c00044 	movi	r19,1
10006a70:	04810004 	movi	r18,1024
10006a74:	003fc006 	br	10006978 <__alt_data_end+0xf8006978>

10006a78 <_malloc_r>:
10006a78:	defff504 	addi	sp,sp,-44
10006a7c:	dc800315 	stw	r18,12(sp)
10006a80:	dfc00a15 	stw	ra,40(sp)
10006a84:	df000915 	stw	fp,36(sp)
10006a88:	ddc00815 	stw	r23,32(sp)
10006a8c:	dd800715 	stw	r22,28(sp)
10006a90:	dd400615 	stw	r21,24(sp)
10006a94:	dd000515 	stw	r20,20(sp)
10006a98:	dcc00415 	stw	r19,16(sp)
10006a9c:	dc400215 	stw	r17,8(sp)
10006aa0:	dc000115 	stw	r16,4(sp)
10006aa4:	288002c4 	addi	r2,r5,11
10006aa8:	00c00584 	movi	r3,22
10006aac:	2025883a 	mov	r18,r4
10006ab0:	18802a2e 	bgeu	r3,r2,10006b5c <_malloc_r+0xe4>
10006ab4:	047ffe04 	movi	r17,-8
10006ab8:	1462703a 	and	r17,r2,r17
10006abc:	88009e16 	blt	r17,zero,10006d38 <_malloc_r+0x2c0>
10006ac0:	89409d36 	bltu	r17,r5,10006d38 <_malloc_r+0x2c0>
10006ac4:	000d3700 	call	1000d370 <__malloc_lock>
10006ac8:	00807dc4 	movi	r2,503
10006acc:	14402736 	bltu	r2,r17,10006b6c <_malloc_r+0xf4>
10006ad0:	8806d0fa 	srli	r3,r17,3
10006ad4:	04c40074 	movhi	r19,4097
10006ad8:	9cff8404 	addi	r19,r19,-496
10006adc:	18c5883a 	add	r2,r3,r3
10006ae0:	1085883a 	add	r2,r2,r2
10006ae4:	1085883a 	add	r2,r2,r2
10006ae8:	9885883a 	add	r2,r19,r2
10006aec:	14000317 	ldw	r16,12(r2)
10006af0:	80814a26 	beq	r16,r2,1000701c <_malloc_r+0x5a4>
10006af4:	80c00117 	ldw	r3,4(r16)
10006af8:	81000317 	ldw	r4,12(r16)
10006afc:	00bfff04 	movi	r2,-4
10006b00:	1884703a 	and	r2,r3,r2
10006b04:	81400217 	ldw	r5,8(r16)
10006b08:	8085883a 	add	r2,r16,r2
10006b0c:	10c00117 	ldw	r3,4(r2)
10006b10:	29000315 	stw	r4,12(r5)
10006b14:	21400215 	stw	r5,8(r4)
10006b18:	18c00054 	ori	r3,r3,1
10006b1c:	10c00115 	stw	r3,4(r2)
10006b20:	9009883a 	mov	r4,r18
10006b24:	000d3900 	call	1000d390 <__malloc_unlock>
10006b28:	80800204 	addi	r2,r16,8
10006b2c:	dfc00a17 	ldw	ra,40(sp)
10006b30:	df000917 	ldw	fp,36(sp)
10006b34:	ddc00817 	ldw	r23,32(sp)
10006b38:	dd800717 	ldw	r22,28(sp)
10006b3c:	dd400617 	ldw	r21,24(sp)
10006b40:	dd000517 	ldw	r20,20(sp)
10006b44:	dcc00417 	ldw	r19,16(sp)
10006b48:	dc800317 	ldw	r18,12(sp)
10006b4c:	dc400217 	ldw	r17,8(sp)
10006b50:	dc000117 	ldw	r16,4(sp)
10006b54:	dec00b04 	addi	sp,sp,44
10006b58:	f800283a 	ret
10006b5c:	04400404 	movi	r17,16
10006b60:	89407536 	bltu	r17,r5,10006d38 <_malloc_r+0x2c0>
10006b64:	000d3700 	call	1000d370 <__malloc_lock>
10006b68:	003fd906 	br	10006ad0 <__alt_data_end+0xf8006ad0>
10006b6c:	8806d27a 	srli	r3,r17,9
10006b70:	18007526 	beq	r3,zero,10006d48 <_malloc_r+0x2d0>
10006b74:	00800104 	movi	r2,4
10006b78:	10c0ef36 	bltu	r2,r3,10006f38 <_malloc_r+0x4c0>
10006b7c:	8806d1ba 	srli	r3,r17,6
10006b80:	19c00e04 	addi	r7,r3,56
10006b84:	39cb883a 	add	r5,r7,r7
10006b88:	04c40074 	movhi	r19,4097
10006b8c:	294b883a 	add	r5,r5,r5
10006b90:	9cff8404 	addi	r19,r19,-496
10006b94:	294b883a 	add	r5,r5,r5
10006b98:	994b883a 	add	r5,r19,r5
10006b9c:	2c000317 	ldw	r16,12(r5)
10006ba0:	2c000e26 	beq	r5,r16,10006bdc <_malloc_r+0x164>
10006ba4:	80800117 	ldw	r2,4(r16)
10006ba8:	01bfff04 	movi	r6,-4
10006bac:	010003c4 	movi	r4,15
10006bb0:	1184703a 	and	r2,r2,r6
10006bb4:	1447c83a 	sub	r3,r2,r17
10006bb8:	20c00716 	blt	r4,r3,10006bd8 <_malloc_r+0x160>
10006bbc:	1800650e 	bge	r3,zero,10006d54 <_malloc_r+0x2dc>
10006bc0:	84000317 	ldw	r16,12(r16)
10006bc4:	2c000526 	beq	r5,r16,10006bdc <_malloc_r+0x164>
10006bc8:	80800117 	ldw	r2,4(r16)
10006bcc:	1184703a 	and	r2,r2,r6
10006bd0:	1447c83a 	sub	r3,r2,r17
10006bd4:	20fff90e 	bge	r4,r3,10006bbc <__alt_data_end+0xf8006bbc>
10006bd8:	39ffffc4 	addi	r7,r7,-1
10006bdc:	38c00044 	addi	r3,r7,1
10006be0:	01840074 	movhi	r6,4097
10006be4:	9c000417 	ldw	r16,16(r19)
10006be8:	31bf8404 	addi	r6,r6,-496
10006bec:	32400204 	addi	r9,r6,8
10006bf0:	82410326 	beq	r16,r9,10007000 <_malloc_r+0x588>
10006bf4:	81000117 	ldw	r4,4(r16)
10006bf8:	00bfff04 	movi	r2,-4
10006bfc:	208e703a 	and	r7,r4,r2
10006c00:	3c45c83a 	sub	r2,r7,r17
10006c04:	010003c4 	movi	r4,15
10006c08:	2080ee16 	blt	r4,r2,10006fc4 <_malloc_r+0x54c>
10006c0c:	32400515 	stw	r9,20(r6)
10006c10:	32400415 	stw	r9,16(r6)
10006c14:	1000510e 	bge	r2,zero,10006d5c <_malloc_r+0x2e4>
10006c18:	00807fc4 	movi	r2,511
10006c1c:	11c0ce36 	bltu	r2,r7,10006f58 <_malloc_r+0x4e0>
10006c20:	3808d0fa 	srli	r4,r7,3
10006c24:	01c00044 	movi	r7,1
10006c28:	30800117 	ldw	r2,4(r6)
10006c2c:	210b883a 	add	r5,r4,r4
10006c30:	294b883a 	add	r5,r5,r5
10006c34:	2009d0ba 	srai	r4,r4,2
10006c38:	294b883a 	add	r5,r5,r5
10006c3c:	298b883a 	add	r5,r5,r6
10006c40:	2a000217 	ldw	r8,8(r5)
10006c44:	3908983a 	sll	r4,r7,r4
10006c48:	81400315 	stw	r5,12(r16)
10006c4c:	82000215 	stw	r8,8(r16)
10006c50:	2088b03a 	or	r4,r4,r2
10006c54:	2c000215 	stw	r16,8(r5)
10006c58:	31000115 	stw	r4,4(r6)
10006c5c:	44000315 	stw	r16,12(r8)
10006c60:	1805d0ba 	srai	r2,r3,2
10006c64:	01400044 	movi	r5,1
10006c68:	288a983a 	sll	r5,r5,r2
10006c6c:	21404336 	bltu	r4,r5,10006d7c <_malloc_r+0x304>
10006c70:	2144703a 	and	r2,r4,r5
10006c74:	10000a1e 	bne	r2,zero,10006ca0 <_malloc_r+0x228>
10006c78:	00bfff04 	movi	r2,-4
10006c7c:	294b883a 	add	r5,r5,r5
10006c80:	1886703a 	and	r3,r3,r2
10006c84:	2144703a 	and	r2,r4,r5
10006c88:	18c00104 	addi	r3,r3,4
10006c8c:	1000041e 	bne	r2,zero,10006ca0 <_malloc_r+0x228>
10006c90:	294b883a 	add	r5,r5,r5
10006c94:	2144703a 	and	r2,r4,r5
10006c98:	18c00104 	addi	r3,r3,4
10006c9c:	103ffc26 	beq	r2,zero,10006c90 <__alt_data_end+0xf8006c90>
10006ca0:	023fff04 	movi	r8,-4
10006ca4:	01c003c4 	movi	r7,15
10006ca8:	18c5883a 	add	r2,r3,r3
10006cac:	1085883a 	add	r2,r2,r2
10006cb0:	1085883a 	add	r2,r2,r2
10006cb4:	9895883a 	add	r10,r19,r2
10006cb8:	52c00304 	addi	r11,r10,12
10006cbc:	1819883a 	mov	r12,r3
10006cc0:	5c000017 	ldw	r16,0(r11)
10006cc4:	59bffd04 	addi	r6,r11,-12
10006cc8:	8180041e 	bne	r16,r6,10006cdc <_malloc_r+0x264>
10006ccc:	0000ce06 	br	10007008 <_malloc_r+0x590>
10006cd0:	2000d70e 	bge	r4,zero,10007030 <_malloc_r+0x5b8>
10006cd4:	84000317 	ldw	r16,12(r16)
10006cd8:	8180cb26 	beq	r16,r6,10007008 <_malloc_r+0x590>
10006cdc:	80800117 	ldw	r2,4(r16)
10006ce0:	1204703a 	and	r2,r2,r8
10006ce4:	1449c83a 	sub	r4,r2,r17
10006ce8:	393ff90e 	bge	r7,r4,10006cd0 <__alt_data_end+0xf8006cd0>
10006cec:	80800317 	ldw	r2,12(r16)
10006cf0:	80c00217 	ldw	r3,8(r16)
10006cf4:	89400054 	ori	r5,r17,1
10006cf8:	81400115 	stw	r5,4(r16)
10006cfc:	18800315 	stw	r2,12(r3)
10006d00:	10c00215 	stw	r3,8(r2)
10006d04:	8463883a 	add	r17,r16,r17
10006d08:	9c400515 	stw	r17,20(r19)
10006d0c:	9c400415 	stw	r17,16(r19)
10006d10:	20800054 	ori	r2,r4,1
10006d14:	88800115 	stw	r2,4(r17)
10006d18:	8a400315 	stw	r9,12(r17)
10006d1c:	8a400215 	stw	r9,8(r17)
10006d20:	8923883a 	add	r17,r17,r4
10006d24:	89000015 	stw	r4,0(r17)
10006d28:	9009883a 	mov	r4,r18
10006d2c:	000d3900 	call	1000d390 <__malloc_unlock>
10006d30:	80800204 	addi	r2,r16,8
10006d34:	003f7d06 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006d38:	00800304 	movi	r2,12
10006d3c:	90800015 	stw	r2,0(r18)
10006d40:	0005883a 	mov	r2,zero
10006d44:	003f7906 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006d48:	01401f84 	movi	r5,126
10006d4c:	01c00fc4 	movi	r7,63
10006d50:	003f8d06 	br	10006b88 <__alt_data_end+0xf8006b88>
10006d54:	81000317 	ldw	r4,12(r16)
10006d58:	003f6a06 	br	10006b04 <__alt_data_end+0xf8006b04>
10006d5c:	81c5883a 	add	r2,r16,r7
10006d60:	10c00117 	ldw	r3,4(r2)
10006d64:	9009883a 	mov	r4,r18
10006d68:	18c00054 	ori	r3,r3,1
10006d6c:	10c00115 	stw	r3,4(r2)
10006d70:	000d3900 	call	1000d390 <__malloc_unlock>
10006d74:	80800204 	addi	r2,r16,8
10006d78:	003f6c06 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006d7c:	9c000217 	ldw	r16,8(r19)
10006d80:	00bfff04 	movi	r2,-4
10006d84:	85800117 	ldw	r22,4(r16)
10006d88:	b0ac703a 	and	r22,r22,r2
10006d8c:	b4400336 	bltu	r22,r17,10006d9c <_malloc_r+0x324>
10006d90:	b445c83a 	sub	r2,r22,r17
10006d94:	00c003c4 	movi	r3,15
10006d98:	18805d16 	blt	r3,r2,10006f10 <_malloc_r+0x498>
10006d9c:	05c40074 	movhi	r23,4097
10006da0:	00840074 	movhi	r2,4097
10006da4:	bdc50b04 	addi	r23,r23,5164
10006da8:	108bd804 	addi	r2,r2,12128
10006dac:	15400017 	ldw	r21,0(r2)
10006db0:	b9000017 	ldw	r4,0(r23)
10006db4:	00ffffc4 	movi	r3,-1
10006db8:	858d883a 	add	r6,r16,r22
10006dbc:	8d6b883a 	add	r21,r17,r21
10006dc0:	20c0e426 	beq	r4,r3,10007154 <_malloc_r+0x6dc>
10006dc4:	ad4403c4 	addi	r21,r21,4111
10006dc8:	00fc0004 	movi	r3,-4096
10006dcc:	a8ea703a 	and	r21,r21,r3
10006dd0:	9009883a 	mov	r4,r18
10006dd4:	a80b883a 	mov	r5,r21
10006dd8:	d9800015 	stw	r6,0(sp)
10006ddc:	0008d1c0 	call	10008d1c <_sbrk_r>
10006de0:	00ffffc4 	movi	r3,-1
10006de4:	1029883a 	mov	r20,r2
10006de8:	d9800017 	ldw	r6,0(sp)
10006dec:	10c0a426 	beq	r2,r3,10007080 <_malloc_r+0x608>
10006df0:	1180a236 	bltu	r2,r6,1000707c <_malloc_r+0x604>
10006df4:	07040074 	movhi	fp,4097
10006df8:	e70be104 	addi	fp,fp,12164
10006dfc:	e0c00017 	ldw	r3,0(fp)
10006e00:	a8c7883a 	add	r3,r21,r3
10006e04:	e0c00015 	stw	r3,0(fp)
10006e08:	3500da26 	beq	r6,r20,10007174 <_malloc_r+0x6fc>
10006e0c:	b9000017 	ldw	r4,0(r23)
10006e10:	00bfffc4 	movi	r2,-1
10006e14:	2080e426 	beq	r4,r2,100071a8 <_malloc_r+0x730>
10006e18:	a185c83a 	sub	r2,r20,r6
10006e1c:	1885883a 	add	r2,r3,r2
10006e20:	e0800015 	stw	r2,0(fp)
10006e24:	a0c001cc 	andi	r3,r20,7
10006e28:	1800b526 	beq	r3,zero,10007100 <_malloc_r+0x688>
10006e2c:	a0e9c83a 	sub	r20,r20,r3
10006e30:	00840204 	movi	r2,4104
10006e34:	a5000204 	addi	r20,r20,8
10006e38:	10c7c83a 	sub	r3,r2,r3
10006e3c:	a545883a 	add	r2,r20,r21
10006e40:	1083ffcc 	andi	r2,r2,4095
10006e44:	18abc83a 	sub	r21,r3,r2
10006e48:	9009883a 	mov	r4,r18
10006e4c:	a80b883a 	mov	r5,r21
10006e50:	0008d1c0 	call	10008d1c <_sbrk_r>
10006e54:	00ffffc4 	movi	r3,-1
10006e58:	10c0d026 	beq	r2,r3,1000719c <_malloc_r+0x724>
10006e5c:	1507c83a 	sub	r3,r2,r20
10006e60:	a8c7883a 	add	r3,r21,r3
10006e64:	18c00054 	ori	r3,r3,1
10006e68:	e0800017 	ldw	r2,0(fp)
10006e6c:	9d000215 	stw	r20,8(r19)
10006e70:	a0c00115 	stw	r3,4(r20)
10006e74:	a887883a 	add	r3,r21,r2
10006e78:	e0c00015 	stw	r3,0(fp)
10006e7c:	84c00e26 	beq	r16,r19,10006eb8 <_malloc_r+0x440>
10006e80:	018003c4 	movi	r6,15
10006e84:	3580a02e 	bgeu	r6,r22,10007108 <_malloc_r+0x690>
10006e88:	81400117 	ldw	r5,4(r16)
10006e8c:	013ffe04 	movi	r4,-8
10006e90:	b0bffd04 	addi	r2,r22,-12
10006e94:	1104703a 	and	r2,r2,r4
10006e98:	2900004c 	andi	r4,r5,1
10006e9c:	1108b03a 	or	r4,r2,r4
10006ea0:	81000115 	stw	r4,4(r16)
10006ea4:	01400144 	movi	r5,5
10006ea8:	8089883a 	add	r4,r16,r2
10006eac:	21400115 	stw	r5,4(r4)
10006eb0:	21400215 	stw	r5,8(r4)
10006eb4:	3080c036 	bltu	r6,r2,100071b8 <_malloc_r+0x740>
10006eb8:	00840074 	movhi	r2,4097
10006ebc:	108bd704 	addi	r2,r2,12124
10006ec0:	11000017 	ldw	r4,0(r2)
10006ec4:	20c0012e 	bgeu	r4,r3,10006ecc <_malloc_r+0x454>
10006ec8:	10c00015 	stw	r3,0(r2)
10006ecc:	00840074 	movhi	r2,4097
10006ed0:	108bd604 	addi	r2,r2,12120
10006ed4:	11000017 	ldw	r4,0(r2)
10006ed8:	9c000217 	ldw	r16,8(r19)
10006edc:	20c0012e 	bgeu	r4,r3,10006ee4 <_malloc_r+0x46c>
10006ee0:	10c00015 	stw	r3,0(r2)
10006ee4:	80c00117 	ldw	r3,4(r16)
10006ee8:	00bfff04 	movi	r2,-4
10006eec:	1886703a 	and	r3,r3,r2
10006ef0:	1c45c83a 	sub	r2,r3,r17
10006ef4:	1c400236 	bltu	r3,r17,10006f00 <_malloc_r+0x488>
10006ef8:	00c003c4 	movi	r3,15
10006efc:	18800416 	blt	r3,r2,10006f10 <_malloc_r+0x498>
10006f00:	9009883a 	mov	r4,r18
10006f04:	000d3900 	call	1000d390 <__malloc_unlock>
10006f08:	0005883a 	mov	r2,zero
10006f0c:	003f0706 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006f10:	88c00054 	ori	r3,r17,1
10006f14:	80c00115 	stw	r3,4(r16)
10006f18:	8463883a 	add	r17,r16,r17
10006f1c:	10800054 	ori	r2,r2,1
10006f20:	9c400215 	stw	r17,8(r19)
10006f24:	88800115 	stw	r2,4(r17)
10006f28:	9009883a 	mov	r4,r18
10006f2c:	000d3900 	call	1000d390 <__malloc_unlock>
10006f30:	80800204 	addi	r2,r16,8
10006f34:	003efd06 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006f38:	00800504 	movi	r2,20
10006f3c:	10c0482e 	bgeu	r2,r3,10007060 <_malloc_r+0x5e8>
10006f40:	00801504 	movi	r2,84
10006f44:	10c06836 	bltu	r2,r3,100070e8 <_malloc_r+0x670>
10006f48:	8806d33a 	srli	r3,r17,12
10006f4c:	19c01b84 	addi	r7,r3,110
10006f50:	39cb883a 	add	r5,r7,r7
10006f54:	003f0c06 	br	10006b88 <__alt_data_end+0xf8006b88>
10006f58:	3804d27a 	srli	r2,r7,9
10006f5c:	01000104 	movi	r4,4
10006f60:	2080422e 	bgeu	r4,r2,1000706c <_malloc_r+0x5f4>
10006f64:	01000504 	movi	r4,20
10006f68:	20807c36 	bltu	r4,r2,1000715c <_malloc_r+0x6e4>
10006f6c:	110016c4 	addi	r4,r2,91
10006f70:	210b883a 	add	r5,r4,r4
10006f74:	294b883a 	add	r5,r5,r5
10006f78:	294b883a 	add	r5,r5,r5
10006f7c:	994b883a 	add	r5,r19,r5
10006f80:	28800217 	ldw	r2,8(r5)
10006f84:	02040074 	movhi	r8,4097
10006f88:	423f8404 	addi	r8,r8,-496
10006f8c:	11406326 	beq	r2,r5,1000711c <_malloc_r+0x6a4>
10006f90:	01bfff04 	movi	r6,-4
10006f94:	11000117 	ldw	r4,4(r2)
10006f98:	2188703a 	and	r4,r4,r6
10006f9c:	3900022e 	bgeu	r7,r4,10006fa8 <_malloc_r+0x530>
10006fa0:	10800217 	ldw	r2,8(r2)
10006fa4:	28bffb1e 	bne	r5,r2,10006f94 <__alt_data_end+0xf8006f94>
10006fa8:	11800317 	ldw	r6,12(r2)
10006fac:	99000117 	ldw	r4,4(r19)
10006fb0:	81800315 	stw	r6,12(r16)
10006fb4:	80800215 	stw	r2,8(r16)
10006fb8:	34000215 	stw	r16,8(r6)
10006fbc:	14000315 	stw	r16,12(r2)
10006fc0:	003f2706 	br	10006c60 <__alt_data_end+0xf8006c60>
10006fc4:	88c00054 	ori	r3,r17,1
10006fc8:	80c00115 	stw	r3,4(r16)
10006fcc:	8463883a 	add	r17,r16,r17
10006fd0:	34400515 	stw	r17,20(r6)
10006fd4:	34400415 	stw	r17,16(r6)
10006fd8:	10c00054 	ori	r3,r2,1
10006fdc:	8a400315 	stw	r9,12(r17)
10006fe0:	8a400215 	stw	r9,8(r17)
10006fe4:	88c00115 	stw	r3,4(r17)
10006fe8:	88a3883a 	add	r17,r17,r2
10006fec:	88800015 	stw	r2,0(r17)
10006ff0:	9009883a 	mov	r4,r18
10006ff4:	000d3900 	call	1000d390 <__malloc_unlock>
10006ff8:	80800204 	addi	r2,r16,8
10006ffc:	003ecb06 	br	10006b2c <__alt_data_end+0xf8006b2c>
10007000:	31000117 	ldw	r4,4(r6)
10007004:	003f1606 	br	10006c60 <__alt_data_end+0xf8006c60>
10007008:	63000044 	addi	r12,r12,1
1000700c:	608000cc 	andi	r2,r12,3
10007010:	5ac00204 	addi	r11,r11,8
10007014:	103f2a1e 	bne	r2,zero,10006cc0 <__alt_data_end+0xf8006cc0>
10007018:	00002106 	br	100070a0 <_malloc_r+0x628>
1000701c:	80800204 	addi	r2,r16,8
10007020:	84000517 	ldw	r16,20(r16)
10007024:	143eb31e 	bne	r2,r16,10006af4 <__alt_data_end+0xf8006af4>
10007028:	18c00084 	addi	r3,r3,2
1000702c:	003eec06 	br	10006be0 <__alt_data_end+0xf8006be0>
10007030:	8085883a 	add	r2,r16,r2
10007034:	10c00117 	ldw	r3,4(r2)
10007038:	81000317 	ldw	r4,12(r16)
1000703c:	81400217 	ldw	r5,8(r16)
10007040:	18c00054 	ori	r3,r3,1
10007044:	10c00115 	stw	r3,4(r2)
10007048:	29000315 	stw	r4,12(r5)
1000704c:	21400215 	stw	r5,8(r4)
10007050:	9009883a 	mov	r4,r18
10007054:	000d3900 	call	1000d390 <__malloc_unlock>
10007058:	80800204 	addi	r2,r16,8
1000705c:	003eb306 	br	10006b2c <__alt_data_end+0xf8006b2c>
10007060:	19c016c4 	addi	r7,r3,91
10007064:	39cb883a 	add	r5,r7,r7
10007068:	003ec706 	br	10006b88 <__alt_data_end+0xf8006b88>
1000706c:	3804d1ba 	srli	r2,r7,6
10007070:	11000e04 	addi	r4,r2,56
10007074:	210b883a 	add	r5,r4,r4
10007078:	003fbe06 	br	10006f74 <__alt_data_end+0xf8006f74>
1000707c:	84ff5d26 	beq	r16,r19,10006df4 <__alt_data_end+0xf8006df4>
10007080:	9c000217 	ldw	r16,8(r19)
10007084:	00bfff04 	movi	r2,-4
10007088:	80c00117 	ldw	r3,4(r16)
1000708c:	1886703a 	and	r3,r3,r2
10007090:	003f9706 	br	10006ef0 <__alt_data_end+0xf8006ef0>
10007094:	52800017 	ldw	r10,0(r10)
10007098:	18ffffc4 	addi	r3,r3,-1
1000709c:	50805c1e 	bne	r10,r2,10007210 <_malloc_r+0x798>
100070a0:	190000cc 	andi	r4,r3,3
100070a4:	50bffe04 	addi	r2,r10,-8
100070a8:	203ffa1e 	bne	r4,zero,10007094 <__alt_data_end+0xf8007094>
100070ac:	98800117 	ldw	r2,4(r19)
100070b0:	0146303a 	nor	r3,zero,r5
100070b4:	1884703a 	and	r2,r3,r2
100070b8:	98800115 	stw	r2,4(r19)
100070bc:	294b883a 	add	r5,r5,r5
100070c0:	117f2e36 	bltu	r2,r5,10006d7c <__alt_data_end+0xf8006d7c>
100070c4:	283f2d26 	beq	r5,zero,10006d7c <__alt_data_end+0xf8006d7c>
100070c8:	1146703a 	and	r3,r2,r5
100070cc:	1800521e 	bne	r3,zero,10007218 <_malloc_r+0x7a0>
100070d0:	6007883a 	mov	r3,r12
100070d4:	294b883a 	add	r5,r5,r5
100070d8:	1148703a 	and	r4,r2,r5
100070dc:	18c00104 	addi	r3,r3,4
100070e0:	203ffc26 	beq	r4,zero,100070d4 <__alt_data_end+0xf80070d4>
100070e4:	003ef006 	br	10006ca8 <__alt_data_end+0xf8006ca8>
100070e8:	00805504 	movi	r2,340
100070ec:	10c01336 	bltu	r2,r3,1000713c <_malloc_r+0x6c4>
100070f0:	8806d3fa 	srli	r3,r17,15
100070f4:	19c01dc4 	addi	r7,r3,119
100070f8:	39cb883a 	add	r5,r7,r7
100070fc:	003ea206 	br	10006b88 <__alt_data_end+0xf8006b88>
10007100:	00c40004 	movi	r3,4096
10007104:	003f4d06 	br	10006e3c <__alt_data_end+0xf8006e3c>
10007108:	00800044 	movi	r2,1
1000710c:	a0800115 	stw	r2,4(r20)
10007110:	a021883a 	mov	r16,r20
10007114:	0007883a 	mov	r3,zero
10007118:	003f7506 	br	10006ef0 <__alt_data_end+0xf8006ef0>
1000711c:	200bd0ba 	srai	r5,r4,2
10007120:	01800044 	movi	r6,1
10007124:	41000117 	ldw	r4,4(r8)
10007128:	314a983a 	sll	r5,r6,r5
1000712c:	100d883a 	mov	r6,r2
10007130:	2908b03a 	or	r4,r5,r4
10007134:	41000115 	stw	r4,4(r8)
10007138:	003f9d06 	br	10006fb0 <__alt_data_end+0xf8006fb0>
1000713c:	00815504 	movi	r2,1364
10007140:	10c01336 	bltu	r2,r3,10007190 <_malloc_r+0x718>
10007144:	8806d4ba 	srli	r3,r17,18
10007148:	19c01f04 	addi	r7,r3,124
1000714c:	39cb883a 	add	r5,r7,r7
10007150:	003e8d06 	br	10006b88 <__alt_data_end+0xf8006b88>
10007154:	ad400404 	addi	r21,r21,16
10007158:	003f1d06 	br	10006dd0 <__alt_data_end+0xf8006dd0>
1000715c:	01001504 	movi	r4,84
10007160:	20801c36 	bltu	r4,r2,100071d4 <_malloc_r+0x75c>
10007164:	3804d33a 	srli	r2,r7,12
10007168:	11001b84 	addi	r4,r2,110
1000716c:	210b883a 	add	r5,r4,r4
10007170:	003f8006 	br	10006f74 <__alt_data_end+0xf8006f74>
10007174:	3083ffcc 	andi	r2,r6,4095
10007178:	103f241e 	bne	r2,zero,10006e0c <__alt_data_end+0xf8006e0c>
1000717c:	99000217 	ldw	r4,8(r19)
10007180:	ad85883a 	add	r2,r21,r22
10007184:	10800054 	ori	r2,r2,1
10007188:	20800115 	stw	r2,4(r4)
1000718c:	003f4a06 	br	10006eb8 <__alt_data_end+0xf8006eb8>
10007190:	01403f04 	movi	r5,252
10007194:	01c01f84 	movi	r7,126
10007198:	003e7b06 	br	10006b88 <__alt_data_end+0xf8006b88>
1000719c:	00c00044 	movi	r3,1
100071a0:	002b883a 	mov	r21,zero
100071a4:	003f3006 	br	10006e68 <__alt_data_end+0xf8006e68>
100071a8:	00840074 	movhi	r2,4097
100071ac:	10850b04 	addi	r2,r2,5164
100071b0:	15000015 	stw	r20,0(r2)
100071b4:	003f1b06 	br	10006e24 <__alt_data_end+0xf8006e24>
100071b8:	9009883a 	mov	r4,r18
100071bc:	81400204 	addi	r5,r16,8
100071c0:	0005edc0 	call	10005edc <_free_r>
100071c4:	00840074 	movhi	r2,4097
100071c8:	108be104 	addi	r2,r2,12164
100071cc:	10c00017 	ldw	r3,0(r2)
100071d0:	003f3906 	br	10006eb8 <__alt_data_end+0xf8006eb8>
100071d4:	01005504 	movi	r4,340
100071d8:	20800436 	bltu	r4,r2,100071ec <_malloc_r+0x774>
100071dc:	3804d3fa 	srli	r2,r7,15
100071e0:	11001dc4 	addi	r4,r2,119
100071e4:	210b883a 	add	r5,r4,r4
100071e8:	003f6206 	br	10006f74 <__alt_data_end+0xf8006f74>
100071ec:	01015504 	movi	r4,1364
100071f0:	20800436 	bltu	r4,r2,10007204 <_malloc_r+0x78c>
100071f4:	3804d4ba 	srli	r2,r7,18
100071f8:	11001f04 	addi	r4,r2,124
100071fc:	210b883a 	add	r5,r4,r4
10007200:	003f5c06 	br	10006f74 <__alt_data_end+0xf8006f74>
10007204:	01403f04 	movi	r5,252
10007208:	01001f84 	movi	r4,126
1000720c:	003f5906 	br	10006f74 <__alt_data_end+0xf8006f74>
10007210:	98800117 	ldw	r2,4(r19)
10007214:	003fa906 	br	100070bc <__alt_data_end+0xf80070bc>
10007218:	6007883a 	mov	r3,r12
1000721c:	003ea206 	br	10006ca8 <__alt_data_end+0xf8006ca8>

10007220 <memchr>:
10007220:	208000cc 	andi	r2,r4,3
10007224:	280f883a 	mov	r7,r5
10007228:	10003526 	beq	r2,zero,10007300 <memchr+0xe0>
1000722c:	30bfffc4 	addi	r2,r6,-1
10007230:	30001b26 	beq	r6,zero,100072a0 <memchr+0x80>
10007234:	21800003 	ldbu	r6,0(r4)
10007238:	28c03fcc 	andi	r3,r5,255
1000723c:	30c01a26 	beq	r6,r3,100072a8 <memchr+0x88>
10007240:	180d883a 	mov	r6,r3
10007244:	00000406 	br	10007258 <memchr+0x38>
10007248:	10001526 	beq	r2,zero,100072a0 <memchr+0x80>
1000724c:	20c00003 	ldbu	r3,0(r4)
10007250:	10bfffc4 	addi	r2,r2,-1
10007254:	19801426 	beq	r3,r6,100072a8 <memchr+0x88>
10007258:	21000044 	addi	r4,r4,1
1000725c:	20c000cc 	andi	r3,r4,3
10007260:	183ff91e 	bne	r3,zero,10007248 <__alt_data_end+0xf8007248>
10007264:	024000c4 	movi	r9,3
10007268:	48801136 	bltu	r9,r2,100072b0 <memchr+0x90>
1000726c:	10000c26 	beq	r2,zero,100072a0 <memchr+0x80>
10007270:	20c00003 	ldbu	r3,0(r4)
10007274:	29403fcc 	andi	r5,r5,255
10007278:	19400b26 	beq	r3,r5,100072a8 <memchr+0x88>
1000727c:	20c00044 	addi	r3,r4,1
10007280:	2085883a 	add	r2,r4,r2
10007284:	39803fcc 	andi	r6,r7,255
10007288:	00000306 	br	10007298 <memchr+0x78>
1000728c:	18c00044 	addi	r3,r3,1
10007290:	197fffc3 	ldbu	r5,-1(r3)
10007294:	29800426 	beq	r5,r6,100072a8 <memchr+0x88>
10007298:	1809883a 	mov	r4,r3
1000729c:	18bffb1e 	bne	r3,r2,1000728c <__alt_data_end+0xf800728c>
100072a0:	0005883a 	mov	r2,zero
100072a4:	f800283a 	ret
100072a8:	2005883a 	mov	r2,r4
100072ac:	f800283a 	ret
100072b0:	28c03fcc 	andi	r3,r5,255
100072b4:	1810923a 	slli	r8,r3,8
100072b8:	02ffbff4 	movhi	r11,65279
100072bc:	02a02074 	movhi	r10,32897
100072c0:	40c6b03a 	or	r3,r8,r3
100072c4:	1810943a 	slli	r8,r3,16
100072c8:	5affbfc4 	addi	r11,r11,-257
100072cc:	52a02004 	addi	r10,r10,-32640
100072d0:	40d0b03a 	or	r8,r8,r3
100072d4:	20c00017 	ldw	r3,0(r4)
100072d8:	40c6f03a 	xor	r3,r8,r3
100072dc:	1acd883a 	add	r6,r3,r11
100072e0:	00c6303a 	nor	r3,zero,r3
100072e4:	30c6703a 	and	r3,r6,r3
100072e8:	1a86703a 	and	r3,r3,r10
100072ec:	183fdf1e 	bne	r3,zero,1000726c <__alt_data_end+0xf800726c>
100072f0:	10bfff04 	addi	r2,r2,-4
100072f4:	21000104 	addi	r4,r4,4
100072f8:	48bff636 	bltu	r9,r2,100072d4 <__alt_data_end+0xf80072d4>
100072fc:	003fdb06 	br	1000726c <__alt_data_end+0xf800726c>
10007300:	3005883a 	mov	r2,r6
10007304:	003fd706 	br	10007264 <__alt_data_end+0xf8007264>

10007308 <memcpy>:
10007308:	deffff04 	addi	sp,sp,-4
1000730c:	dc000015 	stw	r16,0(sp)
10007310:	00c003c4 	movi	r3,15
10007314:	2005883a 	mov	r2,r4
10007318:	1980432e 	bgeu	r3,r6,10007428 <memcpy+0x120>
1000731c:	2146b03a 	or	r3,r4,r5
10007320:	18c000cc 	andi	r3,r3,3
10007324:	1800421e 	bne	r3,zero,10007430 <memcpy+0x128>
10007328:	343ffc04 	addi	r16,r6,-16
1000732c:	8020d13a 	srli	r16,r16,4
10007330:	28c00104 	addi	r3,r5,4
10007334:	23400104 	addi	r13,r4,4
10007338:	801e913a 	slli	r15,r16,4
1000733c:	2b000204 	addi	r12,r5,8
10007340:	22c00204 	addi	r11,r4,8
10007344:	7bc00504 	addi	r15,r15,20
10007348:	2a800304 	addi	r10,r5,12
1000734c:	22400304 	addi	r9,r4,12
10007350:	2bdf883a 	add	r15,r5,r15
10007354:	2811883a 	mov	r8,r5
10007358:	200f883a 	mov	r7,r4
1000735c:	41000017 	ldw	r4,0(r8)
10007360:	39c00404 	addi	r7,r7,16
10007364:	18c00404 	addi	r3,r3,16
10007368:	393ffc15 	stw	r4,-16(r7)
1000736c:	1bbffc17 	ldw	r14,-16(r3)
10007370:	6b400404 	addi	r13,r13,16
10007374:	5ac00404 	addi	r11,r11,16
10007378:	6bbffc15 	stw	r14,-16(r13)
1000737c:	63800017 	ldw	r14,0(r12)
10007380:	4a400404 	addi	r9,r9,16
10007384:	42000404 	addi	r8,r8,16
10007388:	5bbffc15 	stw	r14,-16(r11)
1000738c:	53800017 	ldw	r14,0(r10)
10007390:	63000404 	addi	r12,r12,16
10007394:	52800404 	addi	r10,r10,16
10007398:	4bbffc15 	stw	r14,-16(r9)
1000739c:	1bffef1e 	bne	r3,r15,1000735c <__alt_data_end+0xf800735c>
100073a0:	81c00044 	addi	r7,r16,1
100073a4:	380e913a 	slli	r7,r7,4
100073a8:	310003cc 	andi	r4,r6,15
100073ac:	02c000c4 	movi	r11,3
100073b0:	11c7883a 	add	r3,r2,r7
100073b4:	29cb883a 	add	r5,r5,r7
100073b8:	59001f2e 	bgeu	r11,r4,10007438 <memcpy+0x130>
100073bc:	1813883a 	mov	r9,r3
100073c0:	2811883a 	mov	r8,r5
100073c4:	200f883a 	mov	r7,r4
100073c8:	42800017 	ldw	r10,0(r8)
100073cc:	4a400104 	addi	r9,r9,4
100073d0:	39ffff04 	addi	r7,r7,-4
100073d4:	4abfff15 	stw	r10,-4(r9)
100073d8:	42000104 	addi	r8,r8,4
100073dc:	59fffa36 	bltu	r11,r7,100073c8 <__alt_data_end+0xf80073c8>
100073e0:	213fff04 	addi	r4,r4,-4
100073e4:	2008d0ba 	srli	r4,r4,2
100073e8:	318000cc 	andi	r6,r6,3
100073ec:	21000044 	addi	r4,r4,1
100073f0:	2109883a 	add	r4,r4,r4
100073f4:	2109883a 	add	r4,r4,r4
100073f8:	1907883a 	add	r3,r3,r4
100073fc:	290b883a 	add	r5,r5,r4
10007400:	30000626 	beq	r6,zero,1000741c <memcpy+0x114>
10007404:	198d883a 	add	r6,r3,r6
10007408:	29c00003 	ldbu	r7,0(r5)
1000740c:	18c00044 	addi	r3,r3,1
10007410:	29400044 	addi	r5,r5,1
10007414:	19ffffc5 	stb	r7,-1(r3)
10007418:	19bffb1e 	bne	r3,r6,10007408 <__alt_data_end+0xf8007408>
1000741c:	dc000017 	ldw	r16,0(sp)
10007420:	dec00104 	addi	sp,sp,4
10007424:	f800283a 	ret
10007428:	2007883a 	mov	r3,r4
1000742c:	003ff406 	br	10007400 <__alt_data_end+0xf8007400>
10007430:	2007883a 	mov	r3,r4
10007434:	003ff306 	br	10007404 <__alt_data_end+0xf8007404>
10007438:	200d883a 	mov	r6,r4
1000743c:	003ff006 	br	10007400 <__alt_data_end+0xf8007400>

10007440 <memmove>:
10007440:	2005883a 	mov	r2,r4
10007444:	29000b2e 	bgeu	r5,r4,10007474 <memmove+0x34>
10007448:	298f883a 	add	r7,r5,r6
1000744c:	21c0092e 	bgeu	r4,r7,10007474 <memmove+0x34>
10007450:	2187883a 	add	r3,r4,r6
10007454:	198bc83a 	sub	r5,r3,r6
10007458:	30004b26 	beq	r6,zero,10007588 <memmove+0x148>
1000745c:	39ffffc4 	addi	r7,r7,-1
10007460:	39000003 	ldbu	r4,0(r7)
10007464:	18ffffc4 	addi	r3,r3,-1
10007468:	19000005 	stb	r4,0(r3)
1000746c:	197ffb1e 	bne	r3,r5,1000745c <__alt_data_end+0xf800745c>
10007470:	f800283a 	ret
10007474:	00c003c4 	movi	r3,15
10007478:	1980412e 	bgeu	r3,r6,10007580 <memmove+0x140>
1000747c:	1146b03a 	or	r3,r2,r5
10007480:	18c000cc 	andi	r3,r3,3
10007484:	1800411e 	bne	r3,zero,1000758c <memmove+0x14c>
10007488:	33fffc04 	addi	r15,r6,-16
1000748c:	781ed13a 	srli	r15,r15,4
10007490:	28c00104 	addi	r3,r5,4
10007494:	13400104 	addi	r13,r2,4
10007498:	781c913a 	slli	r14,r15,4
1000749c:	2b000204 	addi	r12,r5,8
100074a0:	12c00204 	addi	r11,r2,8
100074a4:	73800504 	addi	r14,r14,20
100074a8:	2a800304 	addi	r10,r5,12
100074ac:	12400304 	addi	r9,r2,12
100074b0:	2b9d883a 	add	r14,r5,r14
100074b4:	2811883a 	mov	r8,r5
100074b8:	100f883a 	mov	r7,r2
100074bc:	41000017 	ldw	r4,0(r8)
100074c0:	39c00404 	addi	r7,r7,16
100074c4:	18c00404 	addi	r3,r3,16
100074c8:	393ffc15 	stw	r4,-16(r7)
100074cc:	193ffc17 	ldw	r4,-16(r3)
100074d0:	6b400404 	addi	r13,r13,16
100074d4:	5ac00404 	addi	r11,r11,16
100074d8:	693ffc15 	stw	r4,-16(r13)
100074dc:	61000017 	ldw	r4,0(r12)
100074e0:	4a400404 	addi	r9,r9,16
100074e4:	42000404 	addi	r8,r8,16
100074e8:	593ffc15 	stw	r4,-16(r11)
100074ec:	51000017 	ldw	r4,0(r10)
100074f0:	63000404 	addi	r12,r12,16
100074f4:	52800404 	addi	r10,r10,16
100074f8:	493ffc15 	stw	r4,-16(r9)
100074fc:	1bbfef1e 	bne	r3,r14,100074bc <__alt_data_end+0xf80074bc>
10007500:	79000044 	addi	r4,r15,1
10007504:	2008913a 	slli	r4,r4,4
10007508:	328003cc 	andi	r10,r6,15
1000750c:	02c000c4 	movi	r11,3
10007510:	1107883a 	add	r3,r2,r4
10007514:	290b883a 	add	r5,r5,r4
10007518:	5a801e2e 	bgeu	r11,r10,10007594 <memmove+0x154>
1000751c:	1813883a 	mov	r9,r3
10007520:	2811883a 	mov	r8,r5
10007524:	500f883a 	mov	r7,r10
10007528:	41000017 	ldw	r4,0(r8)
1000752c:	4a400104 	addi	r9,r9,4
10007530:	39ffff04 	addi	r7,r7,-4
10007534:	493fff15 	stw	r4,-4(r9)
10007538:	42000104 	addi	r8,r8,4
1000753c:	59fffa36 	bltu	r11,r7,10007528 <__alt_data_end+0xf8007528>
10007540:	513fff04 	addi	r4,r10,-4
10007544:	2008d0ba 	srli	r4,r4,2
10007548:	318000cc 	andi	r6,r6,3
1000754c:	21000044 	addi	r4,r4,1
10007550:	2109883a 	add	r4,r4,r4
10007554:	2109883a 	add	r4,r4,r4
10007558:	1907883a 	add	r3,r3,r4
1000755c:	290b883a 	add	r5,r5,r4
10007560:	30000926 	beq	r6,zero,10007588 <memmove+0x148>
10007564:	198d883a 	add	r6,r3,r6
10007568:	29c00003 	ldbu	r7,0(r5)
1000756c:	18c00044 	addi	r3,r3,1
10007570:	29400044 	addi	r5,r5,1
10007574:	19ffffc5 	stb	r7,-1(r3)
10007578:	19bffb1e 	bne	r3,r6,10007568 <__alt_data_end+0xf8007568>
1000757c:	f800283a 	ret
10007580:	1007883a 	mov	r3,r2
10007584:	003ff606 	br	10007560 <__alt_data_end+0xf8007560>
10007588:	f800283a 	ret
1000758c:	1007883a 	mov	r3,r2
10007590:	003ff406 	br	10007564 <__alt_data_end+0xf8007564>
10007594:	500d883a 	mov	r6,r10
10007598:	003ff106 	br	10007560 <__alt_data_end+0xf8007560>

1000759c <memset>:
1000759c:	20c000cc 	andi	r3,r4,3
100075a0:	2005883a 	mov	r2,r4
100075a4:	18004326 	beq	r3,zero,100076b4 <memset+0x118>
100075a8:	31ffffc4 	addi	r7,r6,-1
100075ac:	30004026 	beq	r6,zero,100076b0 <memset+0x114>
100075b0:	2813883a 	mov	r9,r5
100075b4:	200d883a 	mov	r6,r4
100075b8:	2007883a 	mov	r3,r4
100075bc:	00000406 	br	100075d0 <memset+0x34>
100075c0:	3a3fffc4 	addi	r8,r7,-1
100075c4:	31800044 	addi	r6,r6,1
100075c8:	38003926 	beq	r7,zero,100076b0 <memset+0x114>
100075cc:	400f883a 	mov	r7,r8
100075d0:	18c00044 	addi	r3,r3,1
100075d4:	32400005 	stb	r9,0(r6)
100075d8:	1a0000cc 	andi	r8,r3,3
100075dc:	403ff81e 	bne	r8,zero,100075c0 <__alt_data_end+0xf80075c0>
100075e0:	010000c4 	movi	r4,3
100075e4:	21c02d2e 	bgeu	r4,r7,1000769c <memset+0x100>
100075e8:	29803fcc 	andi	r6,r5,255
100075ec:	3008923a 	slli	r4,r6,8
100075f0:	218cb03a 	or	r6,r4,r6
100075f4:	3008943a 	slli	r4,r6,16
100075f8:	218cb03a 	or	r6,r4,r6
100075fc:	010003c4 	movi	r4,15
10007600:	21c0182e 	bgeu	r4,r7,10007664 <memset+0xc8>
10007604:	3b3ffc04 	addi	r12,r7,-16
10007608:	6018d13a 	srli	r12,r12,4
1000760c:	1a000104 	addi	r8,r3,4
10007610:	1ac00204 	addi	r11,r3,8
10007614:	6008913a 	slli	r4,r12,4
10007618:	1a800304 	addi	r10,r3,12
1000761c:	1813883a 	mov	r9,r3
10007620:	21000504 	addi	r4,r4,20
10007624:	1909883a 	add	r4,r3,r4
10007628:	49800015 	stw	r6,0(r9)
1000762c:	41800015 	stw	r6,0(r8)
10007630:	59800015 	stw	r6,0(r11)
10007634:	51800015 	stw	r6,0(r10)
10007638:	42000404 	addi	r8,r8,16
1000763c:	4a400404 	addi	r9,r9,16
10007640:	5ac00404 	addi	r11,r11,16
10007644:	52800404 	addi	r10,r10,16
10007648:	413ff71e 	bne	r8,r4,10007628 <__alt_data_end+0xf8007628>
1000764c:	63000044 	addi	r12,r12,1
10007650:	6018913a 	slli	r12,r12,4
10007654:	39c003cc 	andi	r7,r7,15
10007658:	010000c4 	movi	r4,3
1000765c:	1b07883a 	add	r3,r3,r12
10007660:	21c00e2e 	bgeu	r4,r7,1000769c <memset+0x100>
10007664:	1813883a 	mov	r9,r3
10007668:	3811883a 	mov	r8,r7
1000766c:	010000c4 	movi	r4,3
10007670:	49800015 	stw	r6,0(r9)
10007674:	423fff04 	addi	r8,r8,-4
10007678:	4a400104 	addi	r9,r9,4
1000767c:	223ffc36 	bltu	r4,r8,10007670 <__alt_data_end+0xf8007670>
10007680:	393fff04 	addi	r4,r7,-4
10007684:	2008d0ba 	srli	r4,r4,2
10007688:	39c000cc 	andi	r7,r7,3
1000768c:	21000044 	addi	r4,r4,1
10007690:	2109883a 	add	r4,r4,r4
10007694:	2109883a 	add	r4,r4,r4
10007698:	1907883a 	add	r3,r3,r4
1000769c:	38000426 	beq	r7,zero,100076b0 <memset+0x114>
100076a0:	19cf883a 	add	r7,r3,r7
100076a4:	19400005 	stb	r5,0(r3)
100076a8:	18c00044 	addi	r3,r3,1
100076ac:	19fffd1e 	bne	r3,r7,100076a4 <__alt_data_end+0xf80076a4>
100076b0:	f800283a 	ret
100076b4:	2007883a 	mov	r3,r4
100076b8:	300f883a 	mov	r7,r6
100076bc:	003fc806 	br	100075e0 <__alt_data_end+0xf80075e0>

100076c0 <_Balloc>:
100076c0:	20801317 	ldw	r2,76(r4)
100076c4:	defffc04 	addi	sp,sp,-16
100076c8:	dc400115 	stw	r17,4(sp)
100076cc:	dc000015 	stw	r16,0(sp)
100076d0:	dfc00315 	stw	ra,12(sp)
100076d4:	dc800215 	stw	r18,8(sp)
100076d8:	2023883a 	mov	r17,r4
100076dc:	2821883a 	mov	r16,r5
100076e0:	10000f26 	beq	r2,zero,10007720 <_Balloc+0x60>
100076e4:	8407883a 	add	r3,r16,r16
100076e8:	18c7883a 	add	r3,r3,r3
100076ec:	10c7883a 	add	r3,r2,r3
100076f0:	18800017 	ldw	r2,0(r3)
100076f4:	10001126 	beq	r2,zero,1000773c <_Balloc+0x7c>
100076f8:	11000017 	ldw	r4,0(r2)
100076fc:	19000015 	stw	r4,0(r3)
10007700:	10000415 	stw	zero,16(r2)
10007704:	10000315 	stw	zero,12(r2)
10007708:	dfc00317 	ldw	ra,12(sp)
1000770c:	dc800217 	ldw	r18,8(sp)
10007710:	dc400117 	ldw	r17,4(sp)
10007714:	dc000017 	ldw	r16,0(sp)
10007718:	dec00404 	addi	sp,sp,16
1000771c:	f800283a 	ret
10007720:	01400104 	movi	r5,4
10007724:	01800844 	movi	r6,33
10007728:	000a55c0 	call	1000a55c <_calloc_r>
1000772c:	88801315 	stw	r2,76(r17)
10007730:	103fec1e 	bne	r2,zero,100076e4 <__alt_data_end+0xf80076e4>
10007734:	0005883a 	mov	r2,zero
10007738:	003ff306 	br	10007708 <__alt_data_end+0xf8007708>
1000773c:	01400044 	movi	r5,1
10007740:	2c24983a 	sll	r18,r5,r16
10007744:	8809883a 	mov	r4,r17
10007748:	91800144 	addi	r6,r18,5
1000774c:	318d883a 	add	r6,r6,r6
10007750:	318d883a 	add	r6,r6,r6
10007754:	000a55c0 	call	1000a55c <_calloc_r>
10007758:	103ff626 	beq	r2,zero,10007734 <__alt_data_end+0xf8007734>
1000775c:	14000115 	stw	r16,4(r2)
10007760:	14800215 	stw	r18,8(r2)
10007764:	003fe606 	br	10007700 <__alt_data_end+0xf8007700>

10007768 <_Bfree>:
10007768:	28000826 	beq	r5,zero,1000778c <_Bfree+0x24>
1000776c:	28c00117 	ldw	r3,4(r5)
10007770:	20801317 	ldw	r2,76(r4)
10007774:	18c7883a 	add	r3,r3,r3
10007778:	18c7883a 	add	r3,r3,r3
1000777c:	10c5883a 	add	r2,r2,r3
10007780:	10c00017 	ldw	r3,0(r2)
10007784:	28c00015 	stw	r3,0(r5)
10007788:	11400015 	stw	r5,0(r2)
1000778c:	f800283a 	ret

10007790 <__multadd>:
10007790:	defff704 	addi	sp,sp,-36
10007794:	dc800215 	stw	r18,8(sp)
10007798:	2c800417 	ldw	r18,16(r5)
1000779c:	ddc00715 	stw	r23,28(sp)
100077a0:	dd800615 	stw	r22,24(sp)
100077a4:	dd000415 	stw	r20,16(sp)
100077a8:	dcc00315 	stw	r19,12(sp)
100077ac:	dc400115 	stw	r17,4(sp)
100077b0:	dc000015 	stw	r16,0(sp)
100077b4:	dfc00815 	stw	ra,32(sp)
100077b8:	dd400515 	stw	r21,20(sp)
100077bc:	2827883a 	mov	r19,r5
100077c0:	2029883a 	mov	r20,r4
100077c4:	3023883a 	mov	r17,r6
100077c8:	3821883a 	mov	r16,r7
100077cc:	2d800504 	addi	r22,r5,20
100077d0:	002f883a 	mov	r23,zero
100077d4:	b5400017 	ldw	r21,0(r22)
100077d8:	880b883a 	mov	r5,r17
100077dc:	bdc00044 	addi	r23,r23,1
100077e0:	a93fffcc 	andi	r4,r21,65535
100077e4:	00019c40 	call	100019c4 <__mulsi3>
100077e8:	1421883a 	add	r16,r2,r16
100077ec:	a808d43a 	srli	r4,r21,16
100077f0:	802ad43a 	srli	r21,r16,16
100077f4:	880b883a 	mov	r5,r17
100077f8:	00019c40 	call	100019c4 <__mulsi3>
100077fc:	a88f883a 	add	r7,r21,r2
10007800:	3804943a 	slli	r2,r7,16
10007804:	80ffffcc 	andi	r3,r16,65535
10007808:	b5800104 	addi	r22,r22,4
1000780c:	10c7883a 	add	r3,r2,r3
10007810:	b0ffff15 	stw	r3,-4(r22)
10007814:	3820d43a 	srli	r16,r7,16
10007818:	bcbfee16 	blt	r23,r18,100077d4 <__alt_data_end+0xf80077d4>
1000781c:	80000926 	beq	r16,zero,10007844 <__multadd+0xb4>
10007820:	98800217 	ldw	r2,8(r19)
10007824:	9080130e 	bge	r18,r2,10007874 <__multadd+0xe4>
10007828:	90800144 	addi	r2,r18,5
1000782c:	1085883a 	add	r2,r2,r2
10007830:	1085883a 	add	r2,r2,r2
10007834:	9885883a 	add	r2,r19,r2
10007838:	14000015 	stw	r16,0(r2)
1000783c:	94800044 	addi	r18,r18,1
10007840:	9c800415 	stw	r18,16(r19)
10007844:	9805883a 	mov	r2,r19
10007848:	dfc00817 	ldw	ra,32(sp)
1000784c:	ddc00717 	ldw	r23,28(sp)
10007850:	dd800617 	ldw	r22,24(sp)
10007854:	dd400517 	ldw	r21,20(sp)
10007858:	dd000417 	ldw	r20,16(sp)
1000785c:	dcc00317 	ldw	r19,12(sp)
10007860:	dc800217 	ldw	r18,8(sp)
10007864:	dc400117 	ldw	r17,4(sp)
10007868:	dc000017 	ldw	r16,0(sp)
1000786c:	dec00904 	addi	sp,sp,36
10007870:	f800283a 	ret
10007874:	99400117 	ldw	r5,4(r19)
10007878:	a009883a 	mov	r4,r20
1000787c:	29400044 	addi	r5,r5,1
10007880:	00076c00 	call	100076c0 <_Balloc>
10007884:	99800417 	ldw	r6,16(r19)
10007888:	99400304 	addi	r5,r19,12
1000788c:	11000304 	addi	r4,r2,12
10007890:	31800084 	addi	r6,r6,2
10007894:	318d883a 	add	r6,r6,r6
10007898:	318d883a 	add	r6,r6,r6
1000789c:	1023883a 	mov	r17,r2
100078a0:	00073080 	call	10007308 <memcpy>
100078a4:	99000117 	ldw	r4,4(r19)
100078a8:	a0c01317 	ldw	r3,76(r20)
100078ac:	2109883a 	add	r4,r4,r4
100078b0:	2109883a 	add	r4,r4,r4
100078b4:	1907883a 	add	r3,r3,r4
100078b8:	18800017 	ldw	r2,0(r3)
100078bc:	98800015 	stw	r2,0(r19)
100078c0:	1cc00015 	stw	r19,0(r3)
100078c4:	8827883a 	mov	r19,r17
100078c8:	003fd706 	br	10007828 <__alt_data_end+0xf8007828>

100078cc <__s2b>:
100078cc:	defff904 	addi	sp,sp,-28
100078d0:	dc400115 	stw	r17,4(sp)
100078d4:	dc000015 	stw	r16,0(sp)
100078d8:	2023883a 	mov	r17,r4
100078dc:	2821883a 	mov	r16,r5
100078e0:	39000204 	addi	r4,r7,8
100078e4:	01400244 	movi	r5,9
100078e8:	dcc00315 	stw	r19,12(sp)
100078ec:	dc800215 	stw	r18,8(sp)
100078f0:	dfc00615 	stw	ra,24(sp)
100078f4:	dd400515 	stw	r21,20(sp)
100078f8:	dd000415 	stw	r20,16(sp)
100078fc:	3825883a 	mov	r18,r7
10007900:	3027883a 	mov	r19,r6
10007904:	00019040 	call	10001904 <__divsi3>
10007908:	00c00044 	movi	r3,1
1000790c:	000b883a 	mov	r5,zero
10007910:	1880030e 	bge	r3,r2,10007920 <__s2b+0x54>
10007914:	18c7883a 	add	r3,r3,r3
10007918:	29400044 	addi	r5,r5,1
1000791c:	18bffd16 	blt	r3,r2,10007914 <__alt_data_end+0xf8007914>
10007920:	8809883a 	mov	r4,r17
10007924:	00076c00 	call	100076c0 <_Balloc>
10007928:	d8c00717 	ldw	r3,28(sp)
1000792c:	10c00515 	stw	r3,20(r2)
10007930:	00c00044 	movi	r3,1
10007934:	10c00415 	stw	r3,16(r2)
10007938:	00c00244 	movi	r3,9
1000793c:	1cc0210e 	bge	r3,r19,100079c4 <__s2b+0xf8>
10007940:	80eb883a 	add	r21,r16,r3
10007944:	a829883a 	mov	r20,r21
10007948:	84e1883a 	add	r16,r16,r19
1000794c:	a1c00007 	ldb	r7,0(r20)
10007950:	8809883a 	mov	r4,r17
10007954:	a5000044 	addi	r20,r20,1
10007958:	100b883a 	mov	r5,r2
1000795c:	01800284 	movi	r6,10
10007960:	39fff404 	addi	r7,r7,-48
10007964:	00077900 	call	10007790 <__multadd>
10007968:	a43ff81e 	bne	r20,r16,1000794c <__alt_data_end+0xf800794c>
1000796c:	ace1883a 	add	r16,r21,r19
10007970:	843ffe04 	addi	r16,r16,-8
10007974:	9c800a0e 	bge	r19,r18,100079a0 <__s2b+0xd4>
10007978:	94e5c83a 	sub	r18,r18,r19
1000797c:	84a5883a 	add	r18,r16,r18
10007980:	81c00007 	ldb	r7,0(r16)
10007984:	8809883a 	mov	r4,r17
10007988:	84000044 	addi	r16,r16,1
1000798c:	100b883a 	mov	r5,r2
10007990:	01800284 	movi	r6,10
10007994:	39fff404 	addi	r7,r7,-48
10007998:	00077900 	call	10007790 <__multadd>
1000799c:	84bff81e 	bne	r16,r18,10007980 <__alt_data_end+0xf8007980>
100079a0:	dfc00617 	ldw	ra,24(sp)
100079a4:	dd400517 	ldw	r21,20(sp)
100079a8:	dd000417 	ldw	r20,16(sp)
100079ac:	dcc00317 	ldw	r19,12(sp)
100079b0:	dc800217 	ldw	r18,8(sp)
100079b4:	dc400117 	ldw	r17,4(sp)
100079b8:	dc000017 	ldw	r16,0(sp)
100079bc:	dec00704 	addi	sp,sp,28
100079c0:	f800283a 	ret
100079c4:	84000284 	addi	r16,r16,10
100079c8:	1827883a 	mov	r19,r3
100079cc:	003fe906 	br	10007974 <__alt_data_end+0xf8007974>

100079d0 <__hi0bits>:
100079d0:	20bfffec 	andhi	r2,r4,65535
100079d4:	1000141e 	bne	r2,zero,10007a28 <__hi0bits+0x58>
100079d8:	2008943a 	slli	r4,r4,16
100079dc:	00800404 	movi	r2,16
100079e0:	20ffc02c 	andhi	r3,r4,65280
100079e4:	1800021e 	bne	r3,zero,100079f0 <__hi0bits+0x20>
100079e8:	2008923a 	slli	r4,r4,8
100079ec:	10800204 	addi	r2,r2,8
100079f0:	20fc002c 	andhi	r3,r4,61440
100079f4:	1800021e 	bne	r3,zero,10007a00 <__hi0bits+0x30>
100079f8:	2008913a 	slli	r4,r4,4
100079fc:	10800104 	addi	r2,r2,4
10007a00:	20f0002c 	andhi	r3,r4,49152
10007a04:	1800031e 	bne	r3,zero,10007a14 <__hi0bits+0x44>
10007a08:	2109883a 	add	r4,r4,r4
10007a0c:	10800084 	addi	r2,r2,2
10007a10:	2109883a 	add	r4,r4,r4
10007a14:	20000316 	blt	r4,zero,10007a24 <__hi0bits+0x54>
10007a18:	2110002c 	andhi	r4,r4,16384
10007a1c:	2000041e 	bne	r4,zero,10007a30 <__hi0bits+0x60>
10007a20:	00800804 	movi	r2,32
10007a24:	f800283a 	ret
10007a28:	0005883a 	mov	r2,zero
10007a2c:	003fec06 	br	100079e0 <__alt_data_end+0xf80079e0>
10007a30:	10800044 	addi	r2,r2,1
10007a34:	f800283a 	ret

10007a38 <__lo0bits>:
10007a38:	20c00017 	ldw	r3,0(r4)
10007a3c:	188001cc 	andi	r2,r3,7
10007a40:	10000826 	beq	r2,zero,10007a64 <__lo0bits+0x2c>
10007a44:	1880004c 	andi	r2,r3,1
10007a48:	1000211e 	bne	r2,zero,10007ad0 <__lo0bits+0x98>
10007a4c:	1880008c 	andi	r2,r3,2
10007a50:	1000211e 	bne	r2,zero,10007ad8 <__lo0bits+0xa0>
10007a54:	1806d0ba 	srli	r3,r3,2
10007a58:	00800084 	movi	r2,2
10007a5c:	20c00015 	stw	r3,0(r4)
10007a60:	f800283a 	ret
10007a64:	18bfffcc 	andi	r2,r3,65535
10007a68:	10001326 	beq	r2,zero,10007ab8 <__lo0bits+0x80>
10007a6c:	0005883a 	mov	r2,zero
10007a70:	19403fcc 	andi	r5,r3,255
10007a74:	2800021e 	bne	r5,zero,10007a80 <__lo0bits+0x48>
10007a78:	1806d23a 	srli	r3,r3,8
10007a7c:	10800204 	addi	r2,r2,8
10007a80:	194003cc 	andi	r5,r3,15
10007a84:	2800021e 	bne	r5,zero,10007a90 <__lo0bits+0x58>
10007a88:	1806d13a 	srli	r3,r3,4
10007a8c:	10800104 	addi	r2,r2,4
10007a90:	194000cc 	andi	r5,r3,3
10007a94:	2800021e 	bne	r5,zero,10007aa0 <__lo0bits+0x68>
10007a98:	1806d0ba 	srli	r3,r3,2
10007a9c:	10800084 	addi	r2,r2,2
10007aa0:	1940004c 	andi	r5,r3,1
10007aa4:	2800081e 	bne	r5,zero,10007ac8 <__lo0bits+0x90>
10007aa8:	1806d07a 	srli	r3,r3,1
10007aac:	1800051e 	bne	r3,zero,10007ac4 <__lo0bits+0x8c>
10007ab0:	00800804 	movi	r2,32
10007ab4:	f800283a 	ret
10007ab8:	1806d43a 	srli	r3,r3,16
10007abc:	00800404 	movi	r2,16
10007ac0:	003feb06 	br	10007a70 <__alt_data_end+0xf8007a70>
10007ac4:	10800044 	addi	r2,r2,1
10007ac8:	20c00015 	stw	r3,0(r4)
10007acc:	f800283a 	ret
10007ad0:	0005883a 	mov	r2,zero
10007ad4:	f800283a 	ret
10007ad8:	1806d07a 	srli	r3,r3,1
10007adc:	00800044 	movi	r2,1
10007ae0:	20c00015 	stw	r3,0(r4)
10007ae4:	f800283a 	ret

10007ae8 <__i2b>:
10007ae8:	defffd04 	addi	sp,sp,-12
10007aec:	dc000015 	stw	r16,0(sp)
10007af0:	04000044 	movi	r16,1
10007af4:	dc400115 	stw	r17,4(sp)
10007af8:	2823883a 	mov	r17,r5
10007afc:	800b883a 	mov	r5,r16
10007b00:	dfc00215 	stw	ra,8(sp)
10007b04:	00076c00 	call	100076c0 <_Balloc>
10007b08:	14400515 	stw	r17,20(r2)
10007b0c:	14000415 	stw	r16,16(r2)
10007b10:	dfc00217 	ldw	ra,8(sp)
10007b14:	dc400117 	ldw	r17,4(sp)
10007b18:	dc000017 	ldw	r16,0(sp)
10007b1c:	dec00304 	addi	sp,sp,12
10007b20:	f800283a 	ret

10007b24 <__multiply>:
10007b24:	deffef04 	addi	sp,sp,-68
10007b28:	dc400815 	stw	r17,32(sp)
10007b2c:	dc000715 	stw	r16,28(sp)
10007b30:	2c400417 	ldw	r17,16(r5)
10007b34:	34000417 	ldw	r16,16(r6)
10007b38:	dd800d15 	stw	r22,52(sp)
10007b3c:	dc800915 	stw	r18,36(sp)
10007b40:	dfc01015 	stw	ra,64(sp)
10007b44:	df000f15 	stw	fp,60(sp)
10007b48:	ddc00e15 	stw	r23,56(sp)
10007b4c:	dd400c15 	stw	r21,48(sp)
10007b50:	dd000b15 	stw	r20,44(sp)
10007b54:	dcc00a15 	stw	r19,40(sp)
10007b58:	2825883a 	mov	r18,r5
10007b5c:	302d883a 	mov	r22,r6
10007b60:	8c009116 	blt	r17,r16,10007da8 <__multiply+0x284>
10007b64:	8005883a 	mov	r2,r16
10007b68:	8821883a 	mov	r16,r17
10007b6c:	1023883a 	mov	r17,r2
10007b70:	90800217 	ldw	r2,8(r18)
10007b74:	8447883a 	add	r3,r16,r17
10007b78:	d8c00215 	stw	r3,8(sp)
10007b7c:	91400117 	ldw	r5,4(r18)
10007b80:	10c0010e 	bge	r2,r3,10007b88 <__multiply+0x64>
10007b84:	29400044 	addi	r5,r5,1
10007b88:	00076c00 	call	100076c0 <_Balloc>
10007b8c:	d8c00217 	ldw	r3,8(sp)
10007b90:	d8800615 	stw	r2,24(sp)
10007b94:	18eb883a 	add	r21,r3,r3
10007b98:	ad6b883a 	add	r21,r21,r21
10007b9c:	10c00504 	addi	r3,r2,20
10007ba0:	1d6b883a 	add	r21,r3,r21
10007ba4:	d8c00115 	stw	r3,4(sp)
10007ba8:	dd400315 	stw	r21,12(sp)
10007bac:	1805883a 	mov	r2,r3
10007bb0:	1d40042e 	bgeu	r3,r21,10007bc4 <__multiply+0xa0>
10007bb4:	d8c00317 	ldw	r3,12(sp)
10007bb8:	10000015 	stw	zero,0(r2)
10007bbc:	10800104 	addi	r2,r2,4
10007bc0:	10fffc36 	bltu	r2,r3,10007bb4 <__alt_data_end+0xf8007bb4>
10007bc4:	8c63883a 	add	r17,r17,r17
10007bc8:	b5800504 	addi	r22,r22,20
10007bcc:	8c63883a 	add	r17,r17,r17
10007bd0:	94800504 	addi	r18,r18,20
10007bd4:	8421883a 	add	r16,r16,r16
10007bd8:	b463883a 	add	r17,r22,r17
10007bdc:	8421883a 	add	r16,r16,r16
10007be0:	dd800015 	stw	r22,0(sp)
10007be4:	dc800415 	stw	r18,16(sp)
10007be8:	dc400515 	stw	r17,20(sp)
10007bec:	9429883a 	add	r20,r18,r16
10007bf0:	b4404f2e 	bgeu	r22,r17,10007d30 <__multiply+0x20c>
10007bf4:	d8c00017 	ldw	r3,0(sp)
10007bf8:	1c800017 	ldw	r18,0(r3)
10007bfc:	943fffcc 	andi	r16,r18,65535
10007c00:	80001e26 	beq	r16,zero,10007c7c <__multiply+0x158>
10007c04:	dd800117 	ldw	r22,4(sp)
10007c08:	dd400417 	ldw	r21,16(sp)
10007c0c:	0025883a 	mov	r18,zero
10007c10:	adc00017 	ldw	r23,0(r21)
10007c14:	b4c00017 	ldw	r19,0(r22)
10007c18:	800b883a 	mov	r5,r16
10007c1c:	b93fffcc 	andi	r4,r23,65535
10007c20:	00019c40 	call	100019c4 <__mulsi3>
10007c24:	9c7fffcc 	andi	r17,r19,65535
10007c28:	8885883a 	add	r2,r17,r2
10007c2c:	b808d43a 	srli	r4,r23,16
10007c30:	14a3883a 	add	r17,r2,r18
10007c34:	9826d43a 	srli	r19,r19,16
10007c38:	8824d43a 	srli	r18,r17,16
10007c3c:	800b883a 	mov	r5,r16
10007c40:	00019c40 	call	100019c4 <__mulsi3>
10007c44:	9885883a 	add	r2,r19,r2
10007c48:	14a7883a 	add	r19,r2,r18
10007c4c:	88ffffcc 	andi	r3,r17,65535
10007c50:	9822943a 	slli	r17,r19,16
10007c54:	ad400104 	addi	r21,r21,4
10007c58:	b005883a 	mov	r2,r22
10007c5c:	88c6b03a 	or	r3,r17,r3
10007c60:	b0c00015 	stw	r3,0(r22)
10007c64:	9824d43a 	srli	r18,r19,16
10007c68:	b5800104 	addi	r22,r22,4
10007c6c:	ad3fe836 	bltu	r21,r20,10007c10 <__alt_data_end+0xf8007c10>
10007c70:	d8c00017 	ldw	r3,0(sp)
10007c74:	14800115 	stw	r18,4(r2)
10007c78:	1c800017 	ldw	r18,0(r3)
10007c7c:	9024d43a 	srli	r18,r18,16
10007c80:	90002226 	beq	r18,zero,10007d0c <__multiply+0x1e8>
10007c84:	d8c00117 	ldw	r3,4(sp)
10007c88:	dd800417 	ldw	r22,16(sp)
10007c8c:	002f883a 	mov	r23,zero
10007c90:	1f000017 	ldw	fp,0(r3)
10007c94:	1823883a 	mov	r17,r3
10007c98:	182b883a 	mov	r21,r3
10007c9c:	e021883a 	mov	r16,fp
10007ca0:	00000106 	br	10007ca8 <__multiply+0x184>
10007ca4:	982b883a 	mov	r21,r19
10007ca8:	b100000b 	ldhu	r4,0(r22)
10007cac:	8020d43a 	srli	r16,r16,16
10007cb0:	900b883a 	mov	r5,r18
10007cb4:	00019c40 	call	100019c4 <__mulsi3>
10007cb8:	1405883a 	add	r2,r2,r16
10007cbc:	15ef883a 	add	r23,r2,r23
10007cc0:	b804943a 	slli	r2,r23,16
10007cc4:	e0ffffcc 	andi	r3,fp,65535
10007cc8:	8c400104 	addi	r17,r17,4
10007ccc:	10c6b03a 	or	r3,r2,r3
10007cd0:	88ffff15 	stw	r3,-4(r17)
10007cd4:	b5800104 	addi	r22,r22,4
10007cd8:	b13fff17 	ldw	r4,-4(r22)
10007cdc:	acc00104 	addi	r19,r21,4
10007ce0:	900b883a 	mov	r5,r18
10007ce4:	2008d43a 	srli	r4,r4,16
10007ce8:	9c000017 	ldw	r16,0(r19)
10007cec:	00019c40 	call	100019c4 <__mulsi3>
10007cf0:	b806d43a 	srli	r3,r23,16
10007cf4:	813fffcc 	andi	r4,r16,65535
10007cf8:	1105883a 	add	r2,r2,r4
10007cfc:	10f9883a 	add	fp,r2,r3
10007d00:	e02ed43a 	srli	r23,fp,16
10007d04:	b53fe736 	bltu	r22,r20,10007ca4 <__alt_data_end+0xf8007ca4>
10007d08:	af000115 	stw	fp,4(r21)
10007d0c:	d8c00017 	ldw	r3,0(sp)
10007d10:	d9000517 	ldw	r4,20(sp)
10007d14:	18c00104 	addi	r3,r3,4
10007d18:	d8c00015 	stw	r3,0(sp)
10007d1c:	d8c00117 	ldw	r3,4(sp)
10007d20:	18c00104 	addi	r3,r3,4
10007d24:	d8c00115 	stw	r3,4(sp)
10007d28:	d8c00017 	ldw	r3,0(sp)
10007d2c:	193fb136 	bltu	r3,r4,10007bf4 <__alt_data_end+0xf8007bf4>
10007d30:	d8c00217 	ldw	r3,8(sp)
10007d34:	00c00c0e 	bge	zero,r3,10007d68 <__multiply+0x244>
10007d38:	d8c00317 	ldw	r3,12(sp)
10007d3c:	18bfff17 	ldw	r2,-4(r3)
10007d40:	1d7fff04 	addi	r21,r3,-4
10007d44:	10000326 	beq	r2,zero,10007d54 <__multiply+0x230>
10007d48:	00000706 	br	10007d68 <__multiply+0x244>
10007d4c:	a8800017 	ldw	r2,0(r21)
10007d50:	1000051e 	bne	r2,zero,10007d68 <__multiply+0x244>
10007d54:	d8c00217 	ldw	r3,8(sp)
10007d58:	ad7fff04 	addi	r21,r21,-4
10007d5c:	18ffffc4 	addi	r3,r3,-1
10007d60:	d8c00215 	stw	r3,8(sp)
10007d64:	183ff91e 	bne	r3,zero,10007d4c <__alt_data_end+0xf8007d4c>
10007d68:	d8c00617 	ldw	r3,24(sp)
10007d6c:	d9000217 	ldw	r4,8(sp)
10007d70:	1805883a 	mov	r2,r3
10007d74:	19000415 	stw	r4,16(r3)
10007d78:	dfc01017 	ldw	ra,64(sp)
10007d7c:	df000f17 	ldw	fp,60(sp)
10007d80:	ddc00e17 	ldw	r23,56(sp)
10007d84:	dd800d17 	ldw	r22,52(sp)
10007d88:	dd400c17 	ldw	r21,48(sp)
10007d8c:	dd000b17 	ldw	r20,44(sp)
10007d90:	dcc00a17 	ldw	r19,40(sp)
10007d94:	dc800917 	ldw	r18,36(sp)
10007d98:	dc400817 	ldw	r17,32(sp)
10007d9c:	dc000717 	ldw	r16,28(sp)
10007da0:	dec01104 	addi	sp,sp,68
10007da4:	f800283a 	ret
10007da8:	3025883a 	mov	r18,r6
10007dac:	282d883a 	mov	r22,r5
10007db0:	003f6f06 	br	10007b70 <__alt_data_end+0xf8007b70>

10007db4 <__pow5mult>:
10007db4:	defffa04 	addi	sp,sp,-24
10007db8:	dcc00315 	stw	r19,12(sp)
10007dbc:	dc800215 	stw	r18,8(sp)
10007dc0:	dc000015 	stw	r16,0(sp)
10007dc4:	dfc00515 	stw	ra,20(sp)
10007dc8:	dd000415 	stw	r20,16(sp)
10007dcc:	dc400115 	stw	r17,4(sp)
10007dd0:	308000cc 	andi	r2,r6,3
10007dd4:	3021883a 	mov	r16,r6
10007dd8:	2027883a 	mov	r19,r4
10007ddc:	2825883a 	mov	r18,r5
10007de0:	10002e1e 	bne	r2,zero,10007e9c <__pow5mult+0xe8>
10007de4:	8021d0ba 	srai	r16,r16,2
10007de8:	80001a26 	beq	r16,zero,10007e54 <__pow5mult+0xa0>
10007dec:	9c401217 	ldw	r17,72(r19)
10007df0:	8800061e 	bne	r17,zero,10007e0c <__pow5mult+0x58>
10007df4:	00003406 	br	10007ec8 <__pow5mult+0x114>
10007df8:	8021d07a 	srai	r16,r16,1
10007dfc:	80001526 	beq	r16,zero,10007e54 <__pow5mult+0xa0>
10007e00:	88800017 	ldw	r2,0(r17)
10007e04:	10001c26 	beq	r2,zero,10007e78 <__pow5mult+0xc4>
10007e08:	1023883a 	mov	r17,r2
10007e0c:	80c0004c 	andi	r3,r16,1
10007e10:	183ff926 	beq	r3,zero,10007df8 <__alt_data_end+0xf8007df8>
10007e14:	900b883a 	mov	r5,r18
10007e18:	880d883a 	mov	r6,r17
10007e1c:	9809883a 	mov	r4,r19
10007e20:	0007b240 	call	10007b24 <__multiply>
10007e24:	90001b26 	beq	r18,zero,10007e94 <__pow5mult+0xe0>
10007e28:	91c00117 	ldw	r7,4(r18)
10007e2c:	98c01317 	ldw	r3,76(r19)
10007e30:	8021d07a 	srai	r16,r16,1
10007e34:	39cf883a 	add	r7,r7,r7
10007e38:	39cf883a 	add	r7,r7,r7
10007e3c:	19c7883a 	add	r3,r3,r7
10007e40:	19000017 	ldw	r4,0(r3)
10007e44:	91000015 	stw	r4,0(r18)
10007e48:	1c800015 	stw	r18,0(r3)
10007e4c:	1025883a 	mov	r18,r2
10007e50:	803feb1e 	bne	r16,zero,10007e00 <__alt_data_end+0xf8007e00>
10007e54:	9005883a 	mov	r2,r18
10007e58:	dfc00517 	ldw	ra,20(sp)
10007e5c:	dd000417 	ldw	r20,16(sp)
10007e60:	dcc00317 	ldw	r19,12(sp)
10007e64:	dc800217 	ldw	r18,8(sp)
10007e68:	dc400117 	ldw	r17,4(sp)
10007e6c:	dc000017 	ldw	r16,0(sp)
10007e70:	dec00604 	addi	sp,sp,24
10007e74:	f800283a 	ret
10007e78:	9809883a 	mov	r4,r19
10007e7c:	880b883a 	mov	r5,r17
10007e80:	880d883a 	mov	r6,r17
10007e84:	0007b240 	call	10007b24 <__multiply>
10007e88:	88800015 	stw	r2,0(r17)
10007e8c:	10000015 	stw	zero,0(r2)
10007e90:	003fdd06 	br	10007e08 <__alt_data_end+0xf8007e08>
10007e94:	1025883a 	mov	r18,r2
10007e98:	003fd706 	br	10007df8 <__alt_data_end+0xf8007df8>
10007e9c:	10bfffc4 	addi	r2,r2,-1
10007ea0:	1085883a 	add	r2,r2,r2
10007ea4:	00c40074 	movhi	r3,4097
10007ea8:	18fdff04 	addi	r3,r3,-2052
10007eac:	1085883a 	add	r2,r2,r2
10007eb0:	1885883a 	add	r2,r3,r2
10007eb4:	11800017 	ldw	r6,0(r2)
10007eb8:	000f883a 	mov	r7,zero
10007ebc:	00077900 	call	10007790 <__multadd>
10007ec0:	1025883a 	mov	r18,r2
10007ec4:	003fc706 	br	10007de4 <__alt_data_end+0xf8007de4>
10007ec8:	05000044 	movi	r20,1
10007ecc:	9809883a 	mov	r4,r19
10007ed0:	a00b883a 	mov	r5,r20
10007ed4:	00076c00 	call	100076c0 <_Balloc>
10007ed8:	1023883a 	mov	r17,r2
10007edc:	00809c44 	movi	r2,625
10007ee0:	88800515 	stw	r2,20(r17)
10007ee4:	8d000415 	stw	r20,16(r17)
10007ee8:	9c401215 	stw	r17,72(r19)
10007eec:	88000015 	stw	zero,0(r17)
10007ef0:	003fc606 	br	10007e0c <__alt_data_end+0xf8007e0c>

10007ef4 <__lshift>:
10007ef4:	defff904 	addi	sp,sp,-28
10007ef8:	dd000415 	stw	r20,16(sp)
10007efc:	dcc00315 	stw	r19,12(sp)
10007f00:	3029d17a 	srai	r20,r6,5
10007f04:	2cc00417 	ldw	r19,16(r5)
10007f08:	28800217 	ldw	r2,8(r5)
10007f0c:	dd400515 	stw	r21,20(sp)
10007f10:	a4e7883a 	add	r19,r20,r19
10007f14:	dc800215 	stw	r18,8(sp)
10007f18:	dc400115 	stw	r17,4(sp)
10007f1c:	dc000015 	stw	r16,0(sp)
10007f20:	dfc00615 	stw	ra,24(sp)
10007f24:	9c000044 	addi	r16,r19,1
10007f28:	2823883a 	mov	r17,r5
10007f2c:	302b883a 	mov	r21,r6
10007f30:	2025883a 	mov	r18,r4
10007f34:	29400117 	ldw	r5,4(r5)
10007f38:	1400030e 	bge	r2,r16,10007f48 <__lshift+0x54>
10007f3c:	1085883a 	add	r2,r2,r2
10007f40:	29400044 	addi	r5,r5,1
10007f44:	143ffd16 	blt	r2,r16,10007f3c <__alt_data_end+0xf8007f3c>
10007f48:	9009883a 	mov	r4,r18
10007f4c:	00076c00 	call	100076c0 <_Balloc>
10007f50:	11c00504 	addi	r7,r2,20
10007f54:	0500090e 	bge	zero,r20,10007f7c <__lshift+0x88>
10007f58:	3811883a 	mov	r8,r7
10007f5c:	0007883a 	mov	r3,zero
10007f60:	40000015 	stw	zero,0(r8)
10007f64:	18c00044 	addi	r3,r3,1
10007f68:	42000104 	addi	r8,r8,4
10007f6c:	1d3ffc1e 	bne	r3,r20,10007f60 <__alt_data_end+0xf8007f60>
10007f70:	18c7883a 	add	r3,r3,r3
10007f74:	18c7883a 	add	r3,r3,r3
10007f78:	38cf883a 	add	r7,r7,r3
10007f7c:	89000417 	ldw	r4,16(r17)
10007f80:	88c00504 	addi	r3,r17,20
10007f84:	a98007cc 	andi	r6,r21,31
10007f88:	2109883a 	add	r4,r4,r4
10007f8c:	2109883a 	add	r4,r4,r4
10007f90:	1909883a 	add	r4,r3,r4
10007f94:	30002326 	beq	r6,zero,10008024 <__lshift+0x130>
10007f98:	01400804 	movi	r5,32
10007f9c:	298bc83a 	sub	r5,r5,r6
10007fa0:	0013883a 	mov	r9,zero
10007fa4:	1a000017 	ldw	r8,0(r3)
10007fa8:	3815883a 	mov	r10,r7
10007fac:	39c00104 	addi	r7,r7,4
10007fb0:	4190983a 	sll	r8,r8,r6
10007fb4:	18c00104 	addi	r3,r3,4
10007fb8:	4a10b03a 	or	r8,r9,r8
10007fbc:	3a3fff15 	stw	r8,-4(r7)
10007fc0:	1a3fff17 	ldw	r8,-4(r3)
10007fc4:	4152d83a 	srl	r9,r8,r5
10007fc8:	193ff636 	bltu	r3,r4,10007fa4 <__alt_data_end+0xf8007fa4>
10007fcc:	52400115 	stw	r9,4(r10)
10007fd0:	48000126 	beq	r9,zero,10007fd8 <__lshift+0xe4>
10007fd4:	9c000084 	addi	r16,r19,2
10007fd8:	89000117 	ldw	r4,4(r17)
10007fdc:	90c01317 	ldw	r3,76(r18)
10007fe0:	843fffc4 	addi	r16,r16,-1
10007fe4:	2109883a 	add	r4,r4,r4
10007fe8:	2109883a 	add	r4,r4,r4
10007fec:	1907883a 	add	r3,r3,r4
10007ff0:	19000017 	ldw	r4,0(r3)
10007ff4:	14000415 	stw	r16,16(r2)
10007ff8:	89000015 	stw	r4,0(r17)
10007ffc:	1c400015 	stw	r17,0(r3)
10008000:	dfc00617 	ldw	ra,24(sp)
10008004:	dd400517 	ldw	r21,20(sp)
10008008:	dd000417 	ldw	r20,16(sp)
1000800c:	dcc00317 	ldw	r19,12(sp)
10008010:	dc800217 	ldw	r18,8(sp)
10008014:	dc400117 	ldw	r17,4(sp)
10008018:	dc000017 	ldw	r16,0(sp)
1000801c:	dec00704 	addi	sp,sp,28
10008020:	f800283a 	ret
10008024:	19400017 	ldw	r5,0(r3)
10008028:	39c00104 	addi	r7,r7,4
1000802c:	18c00104 	addi	r3,r3,4
10008030:	397fff15 	stw	r5,-4(r7)
10008034:	193ffb36 	bltu	r3,r4,10008024 <__alt_data_end+0xf8008024>
10008038:	003fe706 	br	10007fd8 <__alt_data_end+0xf8007fd8>

1000803c <__mcmp>:
1000803c:	20800417 	ldw	r2,16(r4)
10008040:	28c00417 	ldw	r3,16(r5)
10008044:	10c5c83a 	sub	r2,r2,r3
10008048:	1000111e 	bne	r2,zero,10008090 <__mcmp+0x54>
1000804c:	18c7883a 	add	r3,r3,r3
10008050:	18c7883a 	add	r3,r3,r3
10008054:	21000504 	addi	r4,r4,20
10008058:	29400504 	addi	r5,r5,20
1000805c:	20c5883a 	add	r2,r4,r3
10008060:	28cb883a 	add	r5,r5,r3
10008064:	00000106 	br	1000806c <__mcmp+0x30>
10008068:	20800a2e 	bgeu	r4,r2,10008094 <__mcmp+0x58>
1000806c:	10bfff04 	addi	r2,r2,-4
10008070:	297fff04 	addi	r5,r5,-4
10008074:	11800017 	ldw	r6,0(r2)
10008078:	28c00017 	ldw	r3,0(r5)
1000807c:	30fffa26 	beq	r6,r3,10008068 <__alt_data_end+0xf8008068>
10008080:	30c00236 	bltu	r6,r3,1000808c <__mcmp+0x50>
10008084:	00800044 	movi	r2,1
10008088:	f800283a 	ret
1000808c:	00bfffc4 	movi	r2,-1
10008090:	f800283a 	ret
10008094:	0005883a 	mov	r2,zero
10008098:	f800283a 	ret

1000809c <__mdiff>:
1000809c:	defffb04 	addi	sp,sp,-20
100080a0:	dc000015 	stw	r16,0(sp)
100080a4:	2821883a 	mov	r16,r5
100080a8:	dcc00315 	stw	r19,12(sp)
100080ac:	300b883a 	mov	r5,r6
100080b0:	2027883a 	mov	r19,r4
100080b4:	8009883a 	mov	r4,r16
100080b8:	dc800215 	stw	r18,8(sp)
100080bc:	dfc00415 	stw	ra,16(sp)
100080c0:	dc400115 	stw	r17,4(sp)
100080c4:	3025883a 	mov	r18,r6
100080c8:	000803c0 	call	1000803c <__mcmp>
100080cc:	10005226 	beq	r2,zero,10008218 <__mdiff+0x17c>
100080d0:	10004c16 	blt	r2,zero,10008204 <__mdiff+0x168>
100080d4:	0023883a 	mov	r17,zero
100080d8:	81400117 	ldw	r5,4(r16)
100080dc:	9809883a 	mov	r4,r19
100080e0:	00076c00 	call	100076c0 <_Balloc>
100080e4:	83400417 	ldw	r13,16(r16)
100080e8:	93800417 	ldw	r14,16(r18)
100080ec:	81000504 	addi	r4,r16,20
100080f0:	6b59883a 	add	r12,r13,r13
100080f4:	739d883a 	add	r14,r14,r14
100080f8:	6319883a 	add	r12,r12,r12
100080fc:	91800504 	addi	r6,r18,20
10008100:	739d883a 	add	r14,r14,r14
10008104:	14400315 	stw	r17,12(r2)
10008108:	2319883a 	add	r12,r4,r12
1000810c:	339d883a 	add	r14,r6,r14
10008110:	12400504 	addi	r9,r2,20
10008114:	0007883a 	mov	r3,zero
10008118:	22000017 	ldw	r8,0(r4)
1000811c:	32800017 	ldw	r10,0(r6)
10008120:	4ac00104 	addi	r11,r9,4
10008124:	41ffffcc 	andi	r7,r8,65535
10008128:	38c7883a 	add	r3,r7,r3
1000812c:	51ffffcc 	andi	r7,r10,65535
10008130:	19cfc83a 	sub	r7,r3,r7
10008134:	4010d43a 	srli	r8,r8,16
10008138:	5014d43a 	srli	r10,r10,16
1000813c:	3807d43a 	srai	r3,r7,16
10008140:	39ffffcc 	andi	r7,r7,65535
10008144:	4291c83a 	sub	r8,r8,r10
10008148:	40c7883a 	add	r3,r8,r3
1000814c:	1810943a 	slli	r8,r3,16
10008150:	31800104 	addi	r6,r6,4
10008154:	21000104 	addi	r4,r4,4
10008158:	41ceb03a 	or	r7,r8,r7
1000815c:	49c00015 	stw	r7,0(r9)
10008160:	1807d43a 	srai	r3,r3,16
10008164:	580b883a 	mov	r5,r11
10008168:	5813883a 	mov	r9,r11
1000816c:	33bfea36 	bltu	r6,r14,10008118 <__alt_data_end+0xf8008118>
10008170:	2011883a 	mov	r8,r4
10008174:	2300152e 	bgeu	r4,r12,100081cc <__mdiff+0x130>
10008178:	21400017 	ldw	r5,0(r4)
1000817c:	4a400104 	addi	r9,r9,4
10008180:	21000104 	addi	r4,r4,4
10008184:	29ffffcc 	andi	r7,r5,65535
10008188:	38c7883a 	add	r3,r7,r3
1000818c:	280ad43a 	srli	r5,r5,16
10008190:	180dd43a 	srai	r6,r3,16
10008194:	19ffffcc 	andi	r7,r3,65535
10008198:	3147883a 	add	r3,r6,r5
1000819c:	180a943a 	slli	r5,r3,16
100081a0:	1807d43a 	srai	r3,r3,16
100081a4:	29ceb03a 	or	r7,r5,r7
100081a8:	49ffff15 	stw	r7,-4(r9)
100081ac:	233ff236 	bltu	r4,r12,10008178 <__alt_data_end+0xf8008178>
100081b0:	0206303a 	nor	r3,zero,r8
100081b4:	1b07883a 	add	r3,r3,r12
100081b8:	1806d0ba 	srli	r3,r3,2
100081bc:	18c00044 	addi	r3,r3,1
100081c0:	18c7883a 	add	r3,r3,r3
100081c4:	18c7883a 	add	r3,r3,r3
100081c8:	58cb883a 	add	r5,r11,r3
100081cc:	28ffff04 	addi	r3,r5,-4
100081d0:	3800041e 	bne	r7,zero,100081e4 <__mdiff+0x148>
100081d4:	18ffff04 	addi	r3,r3,-4
100081d8:	19000017 	ldw	r4,0(r3)
100081dc:	6b7fffc4 	addi	r13,r13,-1
100081e0:	203ffc26 	beq	r4,zero,100081d4 <__alt_data_end+0xf80081d4>
100081e4:	13400415 	stw	r13,16(r2)
100081e8:	dfc00417 	ldw	ra,16(sp)
100081ec:	dcc00317 	ldw	r19,12(sp)
100081f0:	dc800217 	ldw	r18,8(sp)
100081f4:	dc400117 	ldw	r17,4(sp)
100081f8:	dc000017 	ldw	r16,0(sp)
100081fc:	dec00504 	addi	sp,sp,20
10008200:	f800283a 	ret
10008204:	8005883a 	mov	r2,r16
10008208:	04400044 	movi	r17,1
1000820c:	9021883a 	mov	r16,r18
10008210:	1025883a 	mov	r18,r2
10008214:	003fb006 	br	100080d8 <__alt_data_end+0xf80080d8>
10008218:	9809883a 	mov	r4,r19
1000821c:	000b883a 	mov	r5,zero
10008220:	00076c00 	call	100076c0 <_Balloc>
10008224:	00c00044 	movi	r3,1
10008228:	10c00415 	stw	r3,16(r2)
1000822c:	10000515 	stw	zero,20(r2)
10008230:	003fed06 	br	100081e8 <__alt_data_end+0xf80081e8>

10008234 <__ulp>:
10008234:	295ffc2c 	andhi	r5,r5,32752
10008238:	00bf3034 	movhi	r2,64704
1000823c:	2887883a 	add	r3,r5,r2
10008240:	00c0020e 	bge	zero,r3,1000824c <__ulp+0x18>
10008244:	0005883a 	mov	r2,zero
10008248:	f800283a 	ret
1000824c:	00c7c83a 	sub	r3,zero,r3
10008250:	180bd53a 	srai	r5,r3,20
10008254:	008004c4 	movi	r2,19
10008258:	11400a0e 	bge	r2,r5,10008284 <__ulp+0x50>
1000825c:	00800c84 	movi	r2,50
10008260:	0007883a 	mov	r3,zero
10008264:	11400516 	blt	r2,r5,1000827c <__ulp+0x48>
10008268:	00800cc4 	movi	r2,51
1000826c:	114bc83a 	sub	r5,r2,r5
10008270:	00800044 	movi	r2,1
10008274:	1144983a 	sll	r2,r2,r5
10008278:	f800283a 	ret
1000827c:	00800044 	movi	r2,1
10008280:	f800283a 	ret
10008284:	00800234 	movhi	r2,8
10008288:	1147d83a 	sra	r3,r2,r5
1000828c:	0005883a 	mov	r2,zero
10008290:	f800283a 	ret

10008294 <__b2d>:
10008294:	defffa04 	addi	sp,sp,-24
10008298:	dc000015 	stw	r16,0(sp)
1000829c:	24000417 	ldw	r16,16(r4)
100082a0:	dc400115 	stw	r17,4(sp)
100082a4:	24400504 	addi	r17,r4,20
100082a8:	8421883a 	add	r16,r16,r16
100082ac:	8421883a 	add	r16,r16,r16
100082b0:	8c21883a 	add	r16,r17,r16
100082b4:	dc800215 	stw	r18,8(sp)
100082b8:	84bfff17 	ldw	r18,-4(r16)
100082bc:	dd000415 	stw	r20,16(sp)
100082c0:	dcc00315 	stw	r19,12(sp)
100082c4:	9009883a 	mov	r4,r18
100082c8:	2829883a 	mov	r20,r5
100082cc:	dfc00515 	stw	ra,20(sp)
100082d0:	00079d00 	call	100079d0 <__hi0bits>
100082d4:	00c00804 	movi	r3,32
100082d8:	1887c83a 	sub	r3,r3,r2
100082dc:	a0c00015 	stw	r3,0(r20)
100082e0:	00c00284 	movi	r3,10
100082e4:	84ffff04 	addi	r19,r16,-4
100082e8:	18801216 	blt	r3,r2,10008334 <__b2d+0xa0>
100082ec:	014002c4 	movi	r5,11
100082f0:	2889c83a 	sub	r4,r5,r2
100082f4:	9106d83a 	srl	r3,r18,r4
100082f8:	18cffc34 	orhi	r3,r3,16368
100082fc:	8cc0282e 	bgeu	r17,r19,100083a0 <__b2d+0x10c>
10008300:	817ffe17 	ldw	r5,-8(r16)
10008304:	290ad83a 	srl	r5,r5,r4
10008308:	10800544 	addi	r2,r2,21
1000830c:	9084983a 	sll	r2,r18,r2
10008310:	2884b03a 	or	r2,r5,r2
10008314:	dfc00517 	ldw	ra,20(sp)
10008318:	dd000417 	ldw	r20,16(sp)
1000831c:	dcc00317 	ldw	r19,12(sp)
10008320:	dc800217 	ldw	r18,8(sp)
10008324:	dc400117 	ldw	r17,4(sp)
10008328:	dc000017 	ldw	r16,0(sp)
1000832c:	dec00604 	addi	sp,sp,24
10008330:	f800283a 	ret
10008334:	113ffd44 	addi	r4,r2,-11
10008338:	8cc00f2e 	bgeu	r17,r19,10008378 <__b2d+0xe4>
1000833c:	81bffe04 	addi	r6,r16,-8
10008340:	817ffe17 	ldw	r5,-8(r16)
10008344:	20001326 	beq	r4,zero,10008394 <__b2d+0x100>
10008348:	00c00ac4 	movi	r3,43
1000834c:	1885c83a 	sub	r2,r3,r2
10008350:	2886d83a 	srl	r3,r5,r2
10008354:	9124983a 	sll	r18,r18,r4
10008358:	90e4b03a 	or	r18,r18,r3
1000835c:	90cffc34 	orhi	r3,r18,16368
10008360:	8980112e 	bgeu	r17,r6,100083a8 <__b2d+0x114>
10008364:	81bffd17 	ldw	r6,-12(r16)
10008368:	308cd83a 	srl	r6,r6,r2
1000836c:	2904983a 	sll	r2,r5,r4
10008370:	1184b03a 	or	r2,r2,r6
10008374:	003fe706 	br	10008314 <__alt_data_end+0xf8008314>
10008378:	20000526 	beq	r4,zero,10008390 <__b2d+0xfc>
1000837c:	9124983a 	sll	r18,r18,r4
10008380:	000d883a 	mov	r6,zero
10008384:	000b883a 	mov	r5,zero
10008388:	90cffc34 	orhi	r3,r18,16368
1000838c:	003ff706 	br	1000836c <__alt_data_end+0xf800836c>
10008390:	000b883a 	mov	r5,zero
10008394:	90cffc34 	orhi	r3,r18,16368
10008398:	2805883a 	mov	r2,r5
1000839c:	003fdd06 	br	10008314 <__alt_data_end+0xf8008314>
100083a0:	000b883a 	mov	r5,zero
100083a4:	003fd806 	br	10008308 <__alt_data_end+0xf8008308>
100083a8:	000d883a 	mov	r6,zero
100083ac:	003fef06 	br	1000836c <__alt_data_end+0xf800836c>

100083b0 <__d2b>:
100083b0:	defff704 	addi	sp,sp,-36
100083b4:	dc000215 	stw	r16,8(sp)
100083b8:	3021883a 	mov	r16,r6
100083bc:	dc400315 	stw	r17,12(sp)
100083c0:	8022907a 	slli	r17,r16,1
100083c4:	dd400715 	stw	r21,28(sp)
100083c8:	282b883a 	mov	r21,r5
100083cc:	01400044 	movi	r5,1
100083d0:	dd000615 	stw	r20,24(sp)
100083d4:	dcc00515 	stw	r19,20(sp)
100083d8:	dc800415 	stw	r18,16(sp)
100083dc:	dfc00815 	stw	ra,32(sp)
100083e0:	3829883a 	mov	r20,r7
100083e4:	dc800917 	ldw	r18,36(sp)
100083e8:	8822d57a 	srli	r17,r17,21
100083ec:	00076c00 	call	100076c0 <_Balloc>
100083f0:	1027883a 	mov	r19,r2
100083f4:	00800434 	movhi	r2,16
100083f8:	10bfffc4 	addi	r2,r2,-1
100083fc:	808c703a 	and	r6,r16,r2
10008400:	88000126 	beq	r17,zero,10008408 <__d2b+0x58>
10008404:	31800434 	orhi	r6,r6,16
10008408:	d9800015 	stw	r6,0(sp)
1000840c:	a8001f26 	beq	r21,zero,1000848c <__d2b+0xdc>
10008410:	d9000104 	addi	r4,sp,4
10008414:	dd400115 	stw	r21,4(sp)
10008418:	0007a380 	call	10007a38 <__lo0bits>
1000841c:	d8c00017 	ldw	r3,0(sp)
10008420:	1000291e 	bne	r2,zero,100084c8 <__d2b+0x118>
10008424:	d9000117 	ldw	r4,4(sp)
10008428:	99000515 	stw	r4,20(r19)
1000842c:	1820c03a 	cmpne	r16,r3,zero
10008430:	84000044 	addi	r16,r16,1
10008434:	98c00615 	stw	r3,24(r19)
10008438:	9c000415 	stw	r16,16(r19)
1000843c:	88001b1e 	bne	r17,zero,100084ac <__d2b+0xfc>
10008440:	800690ba 	slli	r3,r16,2
10008444:	10bef384 	addi	r2,r2,-1074
10008448:	a0800015 	stw	r2,0(r20)
1000844c:	98c5883a 	add	r2,r19,r3
10008450:	11000417 	ldw	r4,16(r2)
10008454:	8020917a 	slli	r16,r16,5
10008458:	00079d00 	call	100079d0 <__hi0bits>
1000845c:	8085c83a 	sub	r2,r16,r2
10008460:	90800015 	stw	r2,0(r18)
10008464:	9805883a 	mov	r2,r19
10008468:	dfc00817 	ldw	ra,32(sp)
1000846c:	dd400717 	ldw	r21,28(sp)
10008470:	dd000617 	ldw	r20,24(sp)
10008474:	dcc00517 	ldw	r19,20(sp)
10008478:	dc800417 	ldw	r18,16(sp)
1000847c:	dc400317 	ldw	r17,12(sp)
10008480:	dc000217 	ldw	r16,8(sp)
10008484:	dec00904 	addi	sp,sp,36
10008488:	f800283a 	ret
1000848c:	d809883a 	mov	r4,sp
10008490:	0007a380 	call	10007a38 <__lo0bits>
10008494:	d8c00017 	ldw	r3,0(sp)
10008498:	04000044 	movi	r16,1
1000849c:	9c000415 	stw	r16,16(r19)
100084a0:	98c00515 	stw	r3,20(r19)
100084a4:	10800804 	addi	r2,r2,32
100084a8:	883fe526 	beq	r17,zero,10008440 <__alt_data_end+0xf8008440>
100084ac:	8c7ef344 	addi	r17,r17,-1075
100084b0:	88a3883a 	add	r17,r17,r2
100084b4:	00c00d44 	movi	r3,53
100084b8:	a4400015 	stw	r17,0(r20)
100084bc:	1885c83a 	sub	r2,r3,r2
100084c0:	90800015 	stw	r2,0(r18)
100084c4:	003fe706 	br	10008464 <__alt_data_end+0xf8008464>
100084c8:	01000804 	movi	r4,32
100084cc:	2089c83a 	sub	r4,r4,r2
100084d0:	1908983a 	sll	r4,r3,r4
100084d4:	d9400117 	ldw	r5,4(sp)
100084d8:	1886d83a 	srl	r3,r3,r2
100084dc:	2148b03a 	or	r4,r4,r5
100084e0:	99000515 	stw	r4,20(r19)
100084e4:	d8c00015 	stw	r3,0(sp)
100084e8:	003fd006 	br	1000842c <__alt_data_end+0xf800842c>

100084ec <__ratio>:
100084ec:	defff904 	addi	sp,sp,-28
100084f0:	dc400315 	stw	r17,12(sp)
100084f4:	2823883a 	mov	r17,r5
100084f8:	d9400104 	addi	r5,sp,4
100084fc:	dfc00615 	stw	ra,24(sp)
10008500:	dcc00515 	stw	r19,20(sp)
10008504:	dc800415 	stw	r18,16(sp)
10008508:	2027883a 	mov	r19,r4
1000850c:	dc000215 	stw	r16,8(sp)
10008510:	00082940 	call	10008294 <__b2d>
10008514:	8809883a 	mov	r4,r17
10008518:	d80b883a 	mov	r5,sp
1000851c:	1025883a 	mov	r18,r2
10008520:	1821883a 	mov	r16,r3
10008524:	00082940 	call	10008294 <__b2d>
10008528:	8a400417 	ldw	r9,16(r17)
1000852c:	9a000417 	ldw	r8,16(r19)
10008530:	100d883a 	mov	r6,r2
10008534:	d8800017 	ldw	r2,0(sp)
10008538:	4251c83a 	sub	r8,r8,r9
1000853c:	4012917a 	slli	r9,r8,5
10008540:	da000117 	ldw	r8,4(sp)
10008544:	4091c83a 	sub	r8,r8,r2
10008548:	4251883a 	add	r8,r8,r9
1000854c:	02000d0e 	bge	zero,r8,10008584 <__ratio+0x98>
10008550:	4010953a 	slli	r8,r8,20
10008554:	4421883a 	add	r16,r8,r16
10008558:	9009883a 	mov	r4,r18
1000855c:	800b883a 	mov	r5,r16
10008560:	180f883a 	mov	r7,r3
10008564:	00003d80 	call	100003d8 <__divdf3>
10008568:	dfc00617 	ldw	ra,24(sp)
1000856c:	dcc00517 	ldw	r19,20(sp)
10008570:	dc800417 	ldw	r18,16(sp)
10008574:	dc400317 	ldw	r17,12(sp)
10008578:	dc000217 	ldw	r16,8(sp)
1000857c:	dec00704 	addi	sp,sp,28
10008580:	f800283a 	ret
10008584:	4010953a 	slli	r8,r8,20
10008588:	1a07c83a 	sub	r3,r3,r8
1000858c:	003ff206 	br	10008558 <__alt_data_end+0xf8008558>

10008590 <_mprec_log10>:
10008590:	defffe04 	addi	sp,sp,-8
10008594:	dc000015 	stw	r16,0(sp)
10008598:	dfc00115 	stw	ra,4(sp)
1000859c:	008005c4 	movi	r2,23
100085a0:	2021883a 	mov	r16,r4
100085a4:	11000d0e 	bge	r2,r4,100085dc <_mprec_log10+0x4c>
100085a8:	0005883a 	mov	r2,zero
100085ac:	00cffc34 	movhi	r3,16368
100085b0:	843fffc4 	addi	r16,r16,-1
100085b4:	1009883a 	mov	r4,r2
100085b8:	180b883a 	mov	r5,r3
100085bc:	000d883a 	mov	r6,zero
100085c0:	01d00934 	movhi	r7,16420
100085c4:	000c4540 	call	1000c454 <__muldf3>
100085c8:	803ff91e 	bne	r16,zero,100085b0 <__alt_data_end+0xf80085b0>
100085cc:	dfc00117 	ldw	ra,4(sp)
100085d0:	dc000017 	ldw	r16,0(sp)
100085d4:	dec00204 	addi	sp,sp,8
100085d8:	f800283a 	ret
100085dc:	202090fa 	slli	r16,r4,3
100085e0:	00840074 	movhi	r2,4097
100085e4:	10be1604 	addi	r2,r2,-1960
100085e8:	1421883a 	add	r16,r2,r16
100085ec:	80800017 	ldw	r2,0(r16)
100085f0:	80c00117 	ldw	r3,4(r16)
100085f4:	dfc00117 	ldw	ra,4(sp)
100085f8:	dc000017 	ldw	r16,0(sp)
100085fc:	dec00204 	addi	sp,sp,8
10008600:	f800283a 	ret

10008604 <__copybits>:
10008604:	297fffc4 	addi	r5,r5,-1
10008608:	280fd17a 	srai	r7,r5,5
1000860c:	30c00417 	ldw	r3,16(r6)
10008610:	30800504 	addi	r2,r6,20
10008614:	39c00044 	addi	r7,r7,1
10008618:	18c7883a 	add	r3,r3,r3
1000861c:	39cf883a 	add	r7,r7,r7
10008620:	18c7883a 	add	r3,r3,r3
10008624:	39cf883a 	add	r7,r7,r7
10008628:	10c7883a 	add	r3,r2,r3
1000862c:	21cf883a 	add	r7,r4,r7
10008630:	10c00d2e 	bgeu	r2,r3,10008668 <__copybits+0x64>
10008634:	200b883a 	mov	r5,r4
10008638:	12000017 	ldw	r8,0(r2)
1000863c:	29400104 	addi	r5,r5,4
10008640:	10800104 	addi	r2,r2,4
10008644:	2a3fff15 	stw	r8,-4(r5)
10008648:	10fffb36 	bltu	r2,r3,10008638 <__alt_data_end+0xf8008638>
1000864c:	1985c83a 	sub	r2,r3,r6
10008650:	10bffac4 	addi	r2,r2,-21
10008654:	1004d0ba 	srli	r2,r2,2
10008658:	10800044 	addi	r2,r2,1
1000865c:	1085883a 	add	r2,r2,r2
10008660:	1085883a 	add	r2,r2,r2
10008664:	2089883a 	add	r4,r4,r2
10008668:	21c0032e 	bgeu	r4,r7,10008678 <__copybits+0x74>
1000866c:	20000015 	stw	zero,0(r4)
10008670:	21000104 	addi	r4,r4,4
10008674:	21fffd36 	bltu	r4,r7,1000866c <__alt_data_end+0xf800866c>
10008678:	f800283a 	ret

1000867c <__any_on>:
1000867c:	20c00417 	ldw	r3,16(r4)
10008680:	2805d17a 	srai	r2,r5,5
10008684:	21000504 	addi	r4,r4,20
10008688:	18800d0e 	bge	r3,r2,100086c0 <__any_on+0x44>
1000868c:	18c7883a 	add	r3,r3,r3
10008690:	18c7883a 	add	r3,r3,r3
10008694:	20c7883a 	add	r3,r4,r3
10008698:	20c0192e 	bgeu	r4,r3,10008700 <__any_on+0x84>
1000869c:	18bfff17 	ldw	r2,-4(r3)
100086a0:	18ffff04 	addi	r3,r3,-4
100086a4:	1000041e 	bne	r2,zero,100086b8 <__any_on+0x3c>
100086a8:	20c0142e 	bgeu	r4,r3,100086fc <__any_on+0x80>
100086ac:	18ffff04 	addi	r3,r3,-4
100086b0:	19400017 	ldw	r5,0(r3)
100086b4:	283ffc26 	beq	r5,zero,100086a8 <__alt_data_end+0xf80086a8>
100086b8:	00800044 	movi	r2,1
100086bc:	f800283a 	ret
100086c0:	10c00a0e 	bge	r2,r3,100086ec <__any_on+0x70>
100086c4:	1085883a 	add	r2,r2,r2
100086c8:	1085883a 	add	r2,r2,r2
100086cc:	294007cc 	andi	r5,r5,31
100086d0:	2087883a 	add	r3,r4,r2
100086d4:	283ff026 	beq	r5,zero,10008698 <__alt_data_end+0xf8008698>
100086d8:	19800017 	ldw	r6,0(r3)
100086dc:	3144d83a 	srl	r2,r6,r5
100086e0:	114a983a 	sll	r5,r2,r5
100086e4:	29bff41e 	bne	r5,r6,100086b8 <__alt_data_end+0xf80086b8>
100086e8:	003feb06 	br	10008698 <__alt_data_end+0xf8008698>
100086ec:	1085883a 	add	r2,r2,r2
100086f0:	1085883a 	add	r2,r2,r2
100086f4:	2087883a 	add	r3,r4,r2
100086f8:	003fe706 	br	10008698 <__alt_data_end+0xf8008698>
100086fc:	f800283a 	ret
10008700:	0005883a 	mov	r2,zero
10008704:	f800283a 	ret

10008708 <_realloc_r>:
10008708:	defff604 	addi	sp,sp,-40
1000870c:	dcc00315 	stw	r19,12(sp)
10008710:	dc400115 	stw	r17,4(sp)
10008714:	dfc00915 	stw	ra,36(sp)
10008718:	df000815 	stw	fp,32(sp)
1000871c:	ddc00715 	stw	r23,28(sp)
10008720:	dd800615 	stw	r22,24(sp)
10008724:	dd400515 	stw	r21,20(sp)
10008728:	dd000415 	stw	r20,16(sp)
1000872c:	dc800215 	stw	r18,8(sp)
10008730:	dc000015 	stw	r16,0(sp)
10008734:	2827883a 	mov	r19,r5
10008738:	3023883a 	mov	r17,r6
1000873c:	2800bf26 	beq	r5,zero,10008a3c <_realloc_r+0x334>
10008740:	2025883a 	mov	r18,r4
10008744:	000d3700 	call	1000d370 <__malloc_lock>
10008748:	98ffff17 	ldw	r3,-4(r19)
1000874c:	01bfff04 	movi	r6,-4
10008750:	890002c4 	addi	r4,r17,11
10008754:	01c00584 	movi	r7,22
10008758:	9d7ffe04 	addi	r21,r19,-8
1000875c:	19a0703a 	and	r16,r3,r6
10008760:	39003f2e 	bgeu	r7,r4,10008860 <_realloc_r+0x158>
10008764:	053ffe04 	movi	r20,-8
10008768:	2528703a 	and	r20,r4,r20
1000876c:	a00f883a 	mov	r7,r20
10008770:	a0008216 	blt	r20,zero,1000897c <_realloc_r+0x274>
10008774:	a4408136 	bltu	r20,r17,1000897c <_realloc_r+0x274>
10008778:	81c03c0e 	bge	r16,r7,1000886c <_realloc_r+0x164>
1000877c:	07040074 	movhi	fp,4097
10008780:	e73f8404 	addi	fp,fp,-496
10008784:	e1000217 	ldw	r4,8(fp)
10008788:	ac05883a 	add	r2,r21,r16
1000878c:	2080bf26 	beq	r4,r2,10008a8c <_realloc_r+0x384>
10008790:	11000117 	ldw	r4,4(r2)
10008794:	023fff84 	movi	r8,-2
10008798:	2210703a 	and	r8,r4,r8
1000879c:	1211883a 	add	r8,r2,r8
100087a0:	41400117 	ldw	r5,4(r8)
100087a4:	2940004c 	andi	r5,r5,1
100087a8:	28004a1e 	bne	r5,zero,100088d4 <_realloc_r+0x1cc>
100087ac:	017fff04 	movi	r5,-4
100087b0:	2148703a 	and	r4,r4,r5
100087b4:	2409883a 	add	r4,r4,r16
100087b8:	21c0ad0e 	bge	r4,r7,10008a70 <_realloc_r+0x368>
100087bc:	18c0004c 	andi	r3,r3,1
100087c0:	18007f1e 	bne	r3,zero,100089c0 <_realloc_r+0x2b8>
100087c4:	9dfffe17 	ldw	r23,-8(r19)
100087c8:	adefc83a 	sub	r23,r21,r23
100087cc:	bd800117 	ldw	r22,4(r23)
100087d0:	b14a703a 	and	r5,r22,r5
100087d4:	216d883a 	add	r22,r4,r5
100087d8:	b1c04516 	blt	r22,r7,100088f0 <_realloc_r+0x1e8>
100087dc:	10c00317 	ldw	r3,12(r2)
100087e0:	10800217 	ldw	r2,8(r2)
100087e4:	81bfff04 	addi	r6,r16,-4
100087e8:	bc400204 	addi	r17,r23,8
100087ec:	10c00315 	stw	r3,12(r2)
100087f0:	18800215 	stw	r2,8(r3)
100087f4:	b9400217 	ldw	r5,8(r23)
100087f8:	b8c00317 	ldw	r3,12(r23)
100087fc:	00800904 	movi	r2,36
10008800:	28c00315 	stw	r3,12(r5)
10008804:	19400215 	stw	r5,8(r3)
10008808:	1180ef36 	bltu	r2,r6,10008bc8 <_realloc_r+0x4c0>
1000880c:	008004c4 	movi	r2,19
10008810:	1180da2e 	bgeu	r2,r6,10008b7c <_realloc_r+0x474>
10008814:	98800017 	ldw	r2,0(r19)
10008818:	b8800215 	stw	r2,8(r23)
1000881c:	98800117 	ldw	r2,4(r19)
10008820:	b8800315 	stw	r2,12(r23)
10008824:	008006c4 	movi	r2,27
10008828:	1180fc2e 	bgeu	r2,r6,10008c1c <_realloc_r+0x514>
1000882c:	98800217 	ldw	r2,8(r19)
10008830:	b8800415 	stw	r2,16(r23)
10008834:	98800317 	ldw	r2,12(r19)
10008838:	b8800515 	stw	r2,20(r23)
1000883c:	00800904 	movi	r2,36
10008840:	3080421e 	bne	r6,r2,1000894c <_realloc_r+0x244>
10008844:	98800417 	ldw	r2,16(r19)
10008848:	9cc00604 	addi	r19,r19,24
1000884c:	b8c00804 	addi	r3,r23,32
10008850:	b8800615 	stw	r2,24(r23)
10008854:	98bfff17 	ldw	r2,-4(r19)
10008858:	b8800715 	stw	r2,28(r23)
1000885c:	00003d06 	br	10008954 <_realloc_r+0x24c>
10008860:	01c00404 	movi	r7,16
10008864:	3829883a 	mov	r20,r7
10008868:	003fc206 	br	10008774 <__alt_data_end+0xf8008774>
1000886c:	9823883a 	mov	r17,r19
10008870:	850fc83a 	sub	r7,r16,r20
10008874:	008003c4 	movi	r2,15
10008878:	18c0004c 	andi	r3,r3,1
1000887c:	11c04336 	bltu	r2,r7,1000898c <_realloc_r+0x284>
10008880:	1c06b03a 	or	r3,r3,r16
10008884:	a8c00115 	stw	r3,4(r21)
10008888:	ac21883a 	add	r16,r21,r16
1000888c:	80c00117 	ldw	r3,4(r16)
10008890:	18c00054 	ori	r3,r3,1
10008894:	80c00115 	stw	r3,4(r16)
10008898:	9009883a 	mov	r4,r18
1000889c:	000d3900 	call	1000d390 <__malloc_unlock>
100088a0:	8805883a 	mov	r2,r17
100088a4:	dfc00917 	ldw	ra,36(sp)
100088a8:	df000817 	ldw	fp,32(sp)
100088ac:	ddc00717 	ldw	r23,28(sp)
100088b0:	dd800617 	ldw	r22,24(sp)
100088b4:	dd400517 	ldw	r21,20(sp)
100088b8:	dd000417 	ldw	r20,16(sp)
100088bc:	dcc00317 	ldw	r19,12(sp)
100088c0:	dc800217 	ldw	r18,8(sp)
100088c4:	dc400117 	ldw	r17,4(sp)
100088c8:	dc000017 	ldw	r16,0(sp)
100088cc:	dec00a04 	addi	sp,sp,40
100088d0:	f800283a 	ret
100088d4:	18c0004c 	andi	r3,r3,1
100088d8:	1800391e 	bne	r3,zero,100089c0 <_realloc_r+0x2b8>
100088dc:	9dfffe17 	ldw	r23,-8(r19)
100088e0:	00bfff04 	movi	r2,-4
100088e4:	adefc83a 	sub	r23,r21,r23
100088e8:	b9400117 	ldw	r5,4(r23)
100088ec:	288a703a 	and	r5,r5,r2
100088f0:	2c2d883a 	add	r22,r5,r16
100088f4:	b1c03216 	blt	r22,r7,100089c0 <_realloc_r+0x2b8>
100088f8:	b8800317 	ldw	r2,12(r23)
100088fc:	b8c00217 	ldw	r3,8(r23)
10008900:	81bfff04 	addi	r6,r16,-4
10008904:	01000904 	movi	r4,36
10008908:	18800315 	stw	r2,12(r3)
1000890c:	10c00215 	stw	r3,8(r2)
10008910:	bc400204 	addi	r17,r23,8
10008914:	2180ac36 	bltu	r4,r6,10008bc8 <_realloc_r+0x4c0>
10008918:	008004c4 	movi	r2,19
1000891c:	1180972e 	bgeu	r2,r6,10008b7c <_realloc_r+0x474>
10008920:	98800017 	ldw	r2,0(r19)
10008924:	b8800215 	stw	r2,8(r23)
10008928:	98800117 	ldw	r2,4(r19)
1000892c:	b8800315 	stw	r2,12(r23)
10008930:	008006c4 	movi	r2,27
10008934:	1180b92e 	bgeu	r2,r6,10008c1c <_realloc_r+0x514>
10008938:	98800217 	ldw	r2,8(r19)
1000893c:	b8800415 	stw	r2,16(r23)
10008940:	98800317 	ldw	r2,12(r19)
10008944:	b8800515 	stw	r2,20(r23)
10008948:	313fbe26 	beq	r6,r4,10008844 <__alt_data_end+0xf8008844>
1000894c:	b8c00604 	addi	r3,r23,24
10008950:	9cc00404 	addi	r19,r19,16
10008954:	98800017 	ldw	r2,0(r19)
10008958:	b021883a 	mov	r16,r22
1000895c:	b82b883a 	mov	r21,r23
10008960:	18800015 	stw	r2,0(r3)
10008964:	98800117 	ldw	r2,4(r19)
10008968:	18800115 	stw	r2,4(r3)
1000896c:	98800217 	ldw	r2,8(r19)
10008970:	18800215 	stw	r2,8(r3)
10008974:	b8c00117 	ldw	r3,4(r23)
10008978:	003fbd06 	br	10008870 <__alt_data_end+0xf8008870>
1000897c:	00800304 	movi	r2,12
10008980:	90800015 	stw	r2,0(r18)
10008984:	0005883a 	mov	r2,zero
10008988:	003fc606 	br	100088a4 <__alt_data_end+0xf80088a4>
1000898c:	1d06b03a 	or	r3,r3,r20
10008990:	ad0b883a 	add	r5,r21,r20
10008994:	a8c00115 	stw	r3,4(r21)
10008998:	38800054 	ori	r2,r7,1
1000899c:	28800115 	stw	r2,4(r5)
100089a0:	29cf883a 	add	r7,r5,r7
100089a4:	38800117 	ldw	r2,4(r7)
100089a8:	9009883a 	mov	r4,r18
100089ac:	29400204 	addi	r5,r5,8
100089b0:	10800054 	ori	r2,r2,1
100089b4:	38800115 	stw	r2,4(r7)
100089b8:	0005edc0 	call	10005edc <_free_r>
100089bc:	003fb606 	br	10008898 <__alt_data_end+0xf8008898>
100089c0:	880b883a 	mov	r5,r17
100089c4:	9009883a 	mov	r4,r18
100089c8:	0006a780 	call	10006a78 <_malloc_r>
100089cc:	1023883a 	mov	r17,r2
100089d0:	1000aa26 	beq	r2,zero,10008c7c <_realloc_r+0x574>
100089d4:	98ffff17 	ldw	r3,-4(r19)
100089d8:	113ffe04 	addi	r4,r2,-8
100089dc:	00bfff84 	movi	r2,-2
100089e0:	1884703a 	and	r2,r3,r2
100089e4:	a885883a 	add	r2,r21,r2
100089e8:	20808626 	beq	r4,r2,10008c04 <_realloc_r+0x4fc>
100089ec:	81bfff04 	addi	r6,r16,-4
100089f0:	00800904 	movi	r2,36
100089f4:	11807036 	bltu	r2,r6,10008bb8 <_realloc_r+0x4b0>
100089f8:	00c004c4 	movi	r3,19
100089fc:	19805636 	bltu	r3,r6,10008b58 <_realloc_r+0x450>
10008a00:	8805883a 	mov	r2,r17
10008a04:	9807883a 	mov	r3,r19
10008a08:	19000017 	ldw	r4,0(r3)
10008a0c:	11000015 	stw	r4,0(r2)
10008a10:	19000117 	ldw	r4,4(r3)
10008a14:	11000115 	stw	r4,4(r2)
10008a18:	18c00217 	ldw	r3,8(r3)
10008a1c:	10c00215 	stw	r3,8(r2)
10008a20:	980b883a 	mov	r5,r19
10008a24:	9009883a 	mov	r4,r18
10008a28:	0005edc0 	call	10005edc <_free_r>
10008a2c:	9009883a 	mov	r4,r18
10008a30:	000d3900 	call	1000d390 <__malloc_unlock>
10008a34:	8805883a 	mov	r2,r17
10008a38:	003f9a06 	br	100088a4 <__alt_data_end+0xf80088a4>
10008a3c:	300b883a 	mov	r5,r6
10008a40:	dfc00917 	ldw	ra,36(sp)
10008a44:	df000817 	ldw	fp,32(sp)
10008a48:	ddc00717 	ldw	r23,28(sp)
10008a4c:	dd800617 	ldw	r22,24(sp)
10008a50:	dd400517 	ldw	r21,20(sp)
10008a54:	dd000417 	ldw	r20,16(sp)
10008a58:	dcc00317 	ldw	r19,12(sp)
10008a5c:	dc800217 	ldw	r18,8(sp)
10008a60:	dc400117 	ldw	r17,4(sp)
10008a64:	dc000017 	ldw	r16,0(sp)
10008a68:	dec00a04 	addi	sp,sp,40
10008a6c:	0006a781 	jmpi	10006a78 <_malloc_r>
10008a70:	11400317 	ldw	r5,12(r2)
10008a74:	10800217 	ldw	r2,8(r2)
10008a78:	9823883a 	mov	r17,r19
10008a7c:	2021883a 	mov	r16,r4
10008a80:	11400315 	stw	r5,12(r2)
10008a84:	28800215 	stw	r2,8(r5)
10008a88:	003f7906 	br	10008870 <__alt_data_end+0xf8008870>
10008a8c:	21000117 	ldw	r4,4(r4)
10008a90:	00bfff04 	movi	r2,-4
10008a94:	a1800404 	addi	r6,r20,16
10008a98:	2088703a 	and	r4,r4,r2
10008a9c:	2409883a 	add	r4,r4,r16
10008aa0:	2180380e 	bge	r4,r6,10008b84 <_realloc_r+0x47c>
10008aa4:	18c0004c 	andi	r3,r3,1
10008aa8:	183fc51e 	bne	r3,zero,100089c0 <__alt_data_end+0xf80089c0>
10008aac:	9dfffe17 	ldw	r23,-8(r19)
10008ab0:	adefc83a 	sub	r23,r21,r23
10008ab4:	b9400117 	ldw	r5,4(r23)
10008ab8:	288a703a 	and	r5,r5,r2
10008abc:	216d883a 	add	r22,r4,r5
10008ac0:	b1bf8b16 	blt	r22,r6,100088f0 <__alt_data_end+0xf80088f0>
10008ac4:	b8800317 	ldw	r2,12(r23)
10008ac8:	b8c00217 	ldw	r3,8(r23)
10008acc:	81bfff04 	addi	r6,r16,-4
10008ad0:	01000904 	movi	r4,36
10008ad4:	18800315 	stw	r2,12(r3)
10008ad8:	10c00215 	stw	r3,8(r2)
10008adc:	bc400204 	addi	r17,r23,8
10008ae0:	21805a36 	bltu	r4,r6,10008c4c <_realloc_r+0x544>
10008ae4:	008004c4 	movi	r2,19
10008ae8:	1180562e 	bgeu	r2,r6,10008c44 <_realloc_r+0x53c>
10008aec:	98800017 	ldw	r2,0(r19)
10008af0:	b8800215 	stw	r2,8(r23)
10008af4:	98800117 	ldw	r2,4(r19)
10008af8:	b8800315 	stw	r2,12(r23)
10008afc:	008006c4 	movi	r2,27
10008b00:	11805636 	bltu	r2,r6,10008c5c <_realloc_r+0x554>
10008b04:	b8800404 	addi	r2,r23,16
10008b08:	9cc00204 	addi	r19,r19,8
10008b0c:	98c00017 	ldw	r3,0(r19)
10008b10:	10c00015 	stw	r3,0(r2)
10008b14:	98c00117 	ldw	r3,4(r19)
10008b18:	10c00115 	stw	r3,4(r2)
10008b1c:	98c00217 	ldw	r3,8(r19)
10008b20:	10c00215 	stw	r3,8(r2)
10008b24:	bd07883a 	add	r3,r23,r20
10008b28:	b505c83a 	sub	r2,r22,r20
10008b2c:	e0c00215 	stw	r3,8(fp)
10008b30:	10800054 	ori	r2,r2,1
10008b34:	18800115 	stw	r2,4(r3)
10008b38:	b8800117 	ldw	r2,4(r23)
10008b3c:	9009883a 	mov	r4,r18
10008b40:	1080004c 	andi	r2,r2,1
10008b44:	a0a8b03a 	or	r20,r20,r2
10008b48:	bd000115 	stw	r20,4(r23)
10008b4c:	000d3900 	call	1000d390 <__malloc_unlock>
10008b50:	8805883a 	mov	r2,r17
10008b54:	003f5306 	br	100088a4 <__alt_data_end+0xf80088a4>
10008b58:	98c00017 	ldw	r3,0(r19)
10008b5c:	88c00015 	stw	r3,0(r17)
10008b60:	98c00117 	ldw	r3,4(r19)
10008b64:	88c00115 	stw	r3,4(r17)
10008b68:	00c006c4 	movi	r3,27
10008b6c:	19801d36 	bltu	r3,r6,10008be4 <_realloc_r+0x4dc>
10008b70:	88800204 	addi	r2,r17,8
10008b74:	98c00204 	addi	r3,r19,8
10008b78:	003fa306 	br	10008a08 <__alt_data_end+0xf8008a08>
10008b7c:	8807883a 	mov	r3,r17
10008b80:	003f7406 	br	10008954 <__alt_data_end+0xf8008954>
10008b84:	ad2b883a 	add	r21,r21,r20
10008b88:	2505c83a 	sub	r2,r4,r20
10008b8c:	e5400215 	stw	r21,8(fp)
10008b90:	10800054 	ori	r2,r2,1
10008b94:	a8800115 	stw	r2,4(r21)
10008b98:	98bfff17 	ldw	r2,-4(r19)
10008b9c:	9009883a 	mov	r4,r18
10008ba0:	1080004c 	andi	r2,r2,1
10008ba4:	a0a8b03a 	or	r20,r20,r2
10008ba8:	9d3fff15 	stw	r20,-4(r19)
10008bac:	000d3900 	call	1000d390 <__malloc_unlock>
10008bb0:	9805883a 	mov	r2,r19
10008bb4:	003f3b06 	br	100088a4 <__alt_data_end+0xf80088a4>
10008bb8:	8809883a 	mov	r4,r17
10008bbc:	980b883a 	mov	r5,r19
10008bc0:	00074400 	call	10007440 <memmove>
10008bc4:	003f9606 	br	10008a20 <__alt_data_end+0xf8008a20>
10008bc8:	8809883a 	mov	r4,r17
10008bcc:	980b883a 	mov	r5,r19
10008bd0:	00074400 	call	10007440 <memmove>
10008bd4:	b8c00117 	ldw	r3,4(r23)
10008bd8:	b021883a 	mov	r16,r22
10008bdc:	b82b883a 	mov	r21,r23
10008be0:	003f2306 	br	10008870 <__alt_data_end+0xf8008870>
10008be4:	98c00217 	ldw	r3,8(r19)
10008be8:	88c00215 	stw	r3,8(r17)
10008bec:	98c00317 	ldw	r3,12(r19)
10008bf0:	88c00315 	stw	r3,12(r17)
10008bf4:	30800c26 	beq	r6,r2,10008c28 <_realloc_r+0x520>
10008bf8:	88800404 	addi	r2,r17,16
10008bfc:	98c00404 	addi	r3,r19,16
10008c00:	003f8106 	br	10008a08 <__alt_data_end+0xf8008a08>
10008c04:	893fff17 	ldw	r4,-4(r17)
10008c08:	00bfff04 	movi	r2,-4
10008c0c:	9823883a 	mov	r17,r19
10008c10:	2084703a 	and	r2,r4,r2
10008c14:	80a1883a 	add	r16,r16,r2
10008c18:	003f1506 	br	10008870 <__alt_data_end+0xf8008870>
10008c1c:	b8c00404 	addi	r3,r23,16
10008c20:	9cc00204 	addi	r19,r19,8
10008c24:	003f4b06 	br	10008954 <__alt_data_end+0xf8008954>
10008c28:	99000417 	ldw	r4,16(r19)
10008c2c:	88800604 	addi	r2,r17,24
10008c30:	98c00604 	addi	r3,r19,24
10008c34:	89000415 	stw	r4,16(r17)
10008c38:	99000517 	ldw	r4,20(r19)
10008c3c:	89000515 	stw	r4,20(r17)
10008c40:	003f7106 	br	10008a08 <__alt_data_end+0xf8008a08>
10008c44:	8805883a 	mov	r2,r17
10008c48:	003fb006 	br	10008b0c <__alt_data_end+0xf8008b0c>
10008c4c:	8809883a 	mov	r4,r17
10008c50:	980b883a 	mov	r5,r19
10008c54:	00074400 	call	10007440 <memmove>
10008c58:	003fb206 	br	10008b24 <__alt_data_end+0xf8008b24>
10008c5c:	98800217 	ldw	r2,8(r19)
10008c60:	b8800415 	stw	r2,16(r23)
10008c64:	98800317 	ldw	r2,12(r19)
10008c68:	b8800515 	stw	r2,20(r23)
10008c6c:	31000726 	beq	r6,r4,10008c8c <_realloc_r+0x584>
10008c70:	b8800604 	addi	r2,r23,24
10008c74:	9cc00404 	addi	r19,r19,16
10008c78:	003fa406 	br	10008b0c <__alt_data_end+0xf8008b0c>
10008c7c:	9009883a 	mov	r4,r18
10008c80:	000d3900 	call	1000d390 <__malloc_unlock>
10008c84:	0005883a 	mov	r2,zero
10008c88:	003f0606 	br	100088a4 <__alt_data_end+0xf80088a4>
10008c8c:	98c00417 	ldw	r3,16(r19)
10008c90:	9cc00604 	addi	r19,r19,24
10008c94:	b8800804 	addi	r2,r23,32
10008c98:	b8c00615 	stw	r3,24(r23)
10008c9c:	98ffff17 	ldw	r3,-4(r19)
10008ca0:	b8c00715 	stw	r3,28(r23)
10008ca4:	003f9906 	br	10008b0c <__alt_data_end+0xf8008b0c>

10008ca8 <__fpclassifyd>:
10008ca8:	00a00034 	movhi	r2,32768
10008cac:	10bfffc4 	addi	r2,r2,-1
10008cb0:	2884703a 	and	r2,r5,r2
10008cb4:	10000726 	beq	r2,zero,10008cd4 <__fpclassifyd+0x2c>
10008cb8:	00fffc34 	movhi	r3,65520
10008cbc:	019ff834 	movhi	r6,32736
10008cc0:	28c7883a 	add	r3,r5,r3
10008cc4:	31bfffc4 	addi	r6,r6,-1
10008cc8:	30c00536 	bltu	r6,r3,10008ce0 <__fpclassifyd+0x38>
10008ccc:	00800104 	movi	r2,4
10008cd0:	f800283a 	ret
10008cd4:	2000021e 	bne	r4,zero,10008ce0 <__fpclassifyd+0x38>
10008cd8:	00800084 	movi	r2,2
10008cdc:	f800283a 	ret
10008ce0:	00dffc34 	movhi	r3,32752
10008ce4:	019ff834 	movhi	r6,32736
10008ce8:	28cb883a 	add	r5,r5,r3
10008cec:	31bfffc4 	addi	r6,r6,-1
10008cf0:	317ff62e 	bgeu	r6,r5,10008ccc <__alt_data_end+0xf8008ccc>
10008cf4:	01400434 	movhi	r5,16
10008cf8:	297fffc4 	addi	r5,r5,-1
10008cfc:	28800236 	bltu	r5,r2,10008d08 <__fpclassifyd+0x60>
10008d00:	008000c4 	movi	r2,3
10008d04:	f800283a 	ret
10008d08:	10c00226 	beq	r2,r3,10008d14 <__fpclassifyd+0x6c>
10008d0c:	0005883a 	mov	r2,zero
10008d10:	f800283a 	ret
10008d14:	2005003a 	cmpeq	r2,r4,zero
10008d18:	f800283a 	ret

10008d1c <_sbrk_r>:
10008d1c:	defffd04 	addi	sp,sp,-12
10008d20:	dc000015 	stw	r16,0(sp)
10008d24:	04040074 	movhi	r16,4097
10008d28:	dc400115 	stw	r17,4(sp)
10008d2c:	840bd904 	addi	r16,r16,12132
10008d30:	2023883a 	mov	r17,r4
10008d34:	2809883a 	mov	r4,r5
10008d38:	dfc00215 	stw	ra,8(sp)
10008d3c:	80000015 	stw	zero,0(r16)
10008d40:	000d5840 	call	1000d584 <sbrk>
10008d44:	00ffffc4 	movi	r3,-1
10008d48:	10c00526 	beq	r2,r3,10008d60 <_sbrk_r+0x44>
10008d4c:	dfc00217 	ldw	ra,8(sp)
10008d50:	dc400117 	ldw	r17,4(sp)
10008d54:	dc000017 	ldw	r16,0(sp)
10008d58:	dec00304 	addi	sp,sp,12
10008d5c:	f800283a 	ret
10008d60:	80c00017 	ldw	r3,0(r16)
10008d64:	183ff926 	beq	r3,zero,10008d4c <__alt_data_end+0xf8008d4c>
10008d68:	88c00015 	stw	r3,0(r17)
10008d6c:	003ff706 	br	10008d4c <__alt_data_end+0xf8008d4c>

10008d70 <__sread>:
10008d70:	defffe04 	addi	sp,sp,-8
10008d74:	dc000015 	stw	r16,0(sp)
10008d78:	2821883a 	mov	r16,r5
10008d7c:	2940038f 	ldh	r5,14(r5)
10008d80:	dfc00115 	stw	ra,4(sp)
10008d84:	000aa2c0 	call	1000aa2c <_read_r>
10008d88:	10000716 	blt	r2,zero,10008da8 <__sread+0x38>
10008d8c:	80c01417 	ldw	r3,80(r16)
10008d90:	1887883a 	add	r3,r3,r2
10008d94:	80c01415 	stw	r3,80(r16)
10008d98:	dfc00117 	ldw	ra,4(sp)
10008d9c:	dc000017 	ldw	r16,0(sp)
10008da0:	dec00204 	addi	sp,sp,8
10008da4:	f800283a 	ret
10008da8:	80c0030b 	ldhu	r3,12(r16)
10008dac:	18fbffcc 	andi	r3,r3,61439
10008db0:	80c0030d 	sth	r3,12(r16)
10008db4:	dfc00117 	ldw	ra,4(sp)
10008db8:	dc000017 	ldw	r16,0(sp)
10008dbc:	dec00204 	addi	sp,sp,8
10008dc0:	f800283a 	ret

10008dc4 <__seofread>:
10008dc4:	0005883a 	mov	r2,zero
10008dc8:	f800283a 	ret

10008dcc <__swrite>:
10008dcc:	2880030b 	ldhu	r2,12(r5)
10008dd0:	defffb04 	addi	sp,sp,-20
10008dd4:	dcc00315 	stw	r19,12(sp)
10008dd8:	dc800215 	stw	r18,8(sp)
10008ddc:	dc400115 	stw	r17,4(sp)
10008de0:	dc000015 	stw	r16,0(sp)
10008de4:	dfc00415 	stw	ra,16(sp)
10008de8:	10c0400c 	andi	r3,r2,256
10008dec:	2821883a 	mov	r16,r5
10008df0:	2027883a 	mov	r19,r4
10008df4:	3025883a 	mov	r18,r6
10008df8:	3823883a 	mov	r17,r7
10008dfc:	18000526 	beq	r3,zero,10008e14 <__swrite+0x48>
10008e00:	2940038f 	ldh	r5,14(r5)
10008e04:	000d883a 	mov	r6,zero
10008e08:	01c00084 	movi	r7,2
10008e0c:	000a9d00 	call	1000a9d0 <_lseek_r>
10008e10:	8080030b 	ldhu	r2,12(r16)
10008e14:	8140038f 	ldh	r5,14(r16)
10008e18:	10bbffcc 	andi	r2,r2,61439
10008e1c:	9809883a 	mov	r4,r19
10008e20:	900d883a 	mov	r6,r18
10008e24:	880f883a 	mov	r7,r17
10008e28:	8080030d 	sth	r2,12(r16)
10008e2c:	dfc00417 	ldw	ra,16(sp)
10008e30:	dcc00317 	ldw	r19,12(sp)
10008e34:	dc800217 	ldw	r18,8(sp)
10008e38:	dc400117 	ldw	r17,4(sp)
10008e3c:	dc000017 	ldw	r16,0(sp)
10008e40:	dec00504 	addi	sp,sp,20
10008e44:	000a4ac1 	jmpi	1000a4ac <_write_r>

10008e48 <__sseek>:
10008e48:	defffe04 	addi	sp,sp,-8
10008e4c:	dc000015 	stw	r16,0(sp)
10008e50:	2821883a 	mov	r16,r5
10008e54:	2940038f 	ldh	r5,14(r5)
10008e58:	dfc00115 	stw	ra,4(sp)
10008e5c:	000a9d00 	call	1000a9d0 <_lseek_r>
10008e60:	00ffffc4 	movi	r3,-1
10008e64:	10c00826 	beq	r2,r3,10008e88 <__sseek+0x40>
10008e68:	80c0030b 	ldhu	r3,12(r16)
10008e6c:	80801415 	stw	r2,80(r16)
10008e70:	18c40014 	ori	r3,r3,4096
10008e74:	80c0030d 	sth	r3,12(r16)
10008e78:	dfc00117 	ldw	ra,4(sp)
10008e7c:	dc000017 	ldw	r16,0(sp)
10008e80:	dec00204 	addi	sp,sp,8
10008e84:	f800283a 	ret
10008e88:	80c0030b 	ldhu	r3,12(r16)
10008e8c:	18fbffcc 	andi	r3,r3,61439
10008e90:	80c0030d 	sth	r3,12(r16)
10008e94:	dfc00117 	ldw	ra,4(sp)
10008e98:	dc000017 	ldw	r16,0(sp)
10008e9c:	dec00204 	addi	sp,sp,8
10008ea0:	f800283a 	ret

10008ea4 <__sclose>:
10008ea4:	2940038f 	ldh	r5,14(r5)
10008ea8:	000a5081 	jmpi	1000a508 <_close_r>

10008eac <strcmp>:
10008eac:	2144b03a 	or	r2,r4,r5
10008eb0:	108000cc 	andi	r2,r2,3
10008eb4:	1000171e 	bne	r2,zero,10008f14 <strcmp+0x68>
10008eb8:	20800017 	ldw	r2,0(r4)
10008ebc:	28c00017 	ldw	r3,0(r5)
10008ec0:	10c0141e 	bne	r2,r3,10008f14 <strcmp+0x68>
10008ec4:	027fbff4 	movhi	r9,65279
10008ec8:	4a7fbfc4 	addi	r9,r9,-257
10008ecc:	0086303a 	nor	r3,zero,r2
10008ed0:	02202074 	movhi	r8,32897
10008ed4:	1245883a 	add	r2,r2,r9
10008ed8:	42202004 	addi	r8,r8,-32640
10008edc:	10c4703a 	and	r2,r2,r3
10008ee0:	1204703a 	and	r2,r2,r8
10008ee4:	10000226 	beq	r2,zero,10008ef0 <strcmp+0x44>
10008ee8:	00001706 	br	10008f48 <strcmp+0x9c>
10008eec:	1000161e 	bne	r2,zero,10008f48 <strcmp+0x9c>
10008ef0:	21000104 	addi	r4,r4,4
10008ef4:	20c00017 	ldw	r3,0(r4)
10008ef8:	29400104 	addi	r5,r5,4
10008efc:	29800017 	ldw	r6,0(r5)
10008f00:	1a4f883a 	add	r7,r3,r9
10008f04:	00c4303a 	nor	r2,zero,r3
10008f08:	3884703a 	and	r2,r7,r2
10008f0c:	1204703a 	and	r2,r2,r8
10008f10:	19bff626 	beq	r3,r6,10008eec <__alt_data_end+0xf8008eec>
10008f14:	20800007 	ldb	r2,0(r4)
10008f18:	1000051e 	bne	r2,zero,10008f30 <strcmp+0x84>
10008f1c:	00000606 	br	10008f38 <strcmp+0x8c>
10008f20:	21000044 	addi	r4,r4,1
10008f24:	20800007 	ldb	r2,0(r4)
10008f28:	29400044 	addi	r5,r5,1
10008f2c:	10000226 	beq	r2,zero,10008f38 <strcmp+0x8c>
10008f30:	28c00007 	ldb	r3,0(r5)
10008f34:	10fffa26 	beq	r2,r3,10008f20 <__alt_data_end+0xf8008f20>
10008f38:	20800003 	ldbu	r2,0(r4)
10008f3c:	28c00003 	ldbu	r3,0(r5)
10008f40:	10c5c83a 	sub	r2,r2,r3
10008f44:	f800283a 	ret
10008f48:	0005883a 	mov	r2,zero
10008f4c:	f800283a 	ret

10008f50 <__sprint_r.part.0>:
10008f50:	28801917 	ldw	r2,100(r5)
10008f54:	defff604 	addi	sp,sp,-40
10008f58:	dd400515 	stw	r21,20(sp)
10008f5c:	dcc00315 	stw	r19,12(sp)
10008f60:	dfc00915 	stw	ra,36(sp)
10008f64:	df000815 	stw	fp,32(sp)
10008f68:	ddc00715 	stw	r23,28(sp)
10008f6c:	dd800615 	stw	r22,24(sp)
10008f70:	dd000415 	stw	r20,16(sp)
10008f74:	dc800215 	stw	r18,8(sp)
10008f78:	dc400115 	stw	r17,4(sp)
10008f7c:	dc000015 	stw	r16,0(sp)
10008f80:	1088000c 	andi	r2,r2,8192
10008f84:	2827883a 	mov	r19,r5
10008f88:	302b883a 	mov	r21,r6
10008f8c:	10002d26 	beq	r2,zero,10009044 <__sprint_r.part.0+0xf4>
10008f90:	30800217 	ldw	r2,8(r6)
10008f94:	35800017 	ldw	r22,0(r6)
10008f98:	10002826 	beq	r2,zero,1000903c <__sprint_r.part.0+0xec>
10008f9c:	2029883a 	mov	r20,r4
10008fa0:	b5c00104 	addi	r23,r22,4
10008fa4:	04bfffc4 	movi	r18,-1
10008fa8:	bc400017 	ldw	r17,0(r23)
10008fac:	b4000017 	ldw	r16,0(r22)
10008fb0:	0039883a 	mov	fp,zero
10008fb4:	8822d0ba 	srli	r17,r17,2
10008fb8:	04400316 	blt	zero,r17,10008fc8 <__sprint_r.part.0+0x78>
10008fbc:	00001706 	br	1000901c <__sprint_r.part.0+0xcc>
10008fc0:	84000104 	addi	r16,r16,4
10008fc4:	8f001526 	beq	r17,fp,1000901c <__sprint_r.part.0+0xcc>
10008fc8:	81400017 	ldw	r5,0(r16)
10008fcc:	a009883a 	mov	r4,r20
10008fd0:	980d883a 	mov	r6,r19
10008fd4:	000a7480 	call	1000a748 <_fputwc_r>
10008fd8:	e7000044 	addi	fp,fp,1
10008fdc:	14bff81e 	bne	r2,r18,10008fc0 <__alt_data_end+0xf8008fc0>
10008fe0:	9005883a 	mov	r2,r18
10008fe4:	a8000215 	stw	zero,8(r21)
10008fe8:	a8000115 	stw	zero,4(r21)
10008fec:	dfc00917 	ldw	ra,36(sp)
10008ff0:	df000817 	ldw	fp,32(sp)
10008ff4:	ddc00717 	ldw	r23,28(sp)
10008ff8:	dd800617 	ldw	r22,24(sp)
10008ffc:	dd400517 	ldw	r21,20(sp)
10009000:	dd000417 	ldw	r20,16(sp)
10009004:	dcc00317 	ldw	r19,12(sp)
10009008:	dc800217 	ldw	r18,8(sp)
1000900c:	dc400117 	ldw	r17,4(sp)
10009010:	dc000017 	ldw	r16,0(sp)
10009014:	dec00a04 	addi	sp,sp,40
10009018:	f800283a 	ret
1000901c:	a8c00217 	ldw	r3,8(r21)
10009020:	8c63883a 	add	r17,r17,r17
10009024:	8c63883a 	add	r17,r17,r17
10009028:	1c45c83a 	sub	r2,r3,r17
1000902c:	a8800215 	stw	r2,8(r21)
10009030:	b5800204 	addi	r22,r22,8
10009034:	bdc00204 	addi	r23,r23,8
10009038:	103fdb1e 	bne	r2,zero,10008fa8 <__alt_data_end+0xf8008fa8>
1000903c:	0005883a 	mov	r2,zero
10009040:	003fe806 	br	10008fe4 <__alt_data_end+0xf8008fe4>
10009044:	00061cc0 	call	100061cc <__sfvwrite_r>
10009048:	003fe606 	br	10008fe4 <__alt_data_end+0xf8008fe4>

1000904c <__sprint_r>:
1000904c:	30c00217 	ldw	r3,8(r6)
10009050:	18000126 	beq	r3,zero,10009058 <__sprint_r+0xc>
10009054:	0008f501 	jmpi	10008f50 <__sprint_r.part.0>
10009058:	30000115 	stw	zero,4(r6)
1000905c:	0005883a 	mov	r2,zero
10009060:	f800283a 	ret

10009064 <___vfiprintf_internal_r>:
10009064:	defeca04 	addi	sp,sp,-1240
10009068:	dcc12f15 	stw	r19,1212(sp)
1000906c:	dfc13515 	stw	ra,1236(sp)
10009070:	df013415 	stw	fp,1232(sp)
10009074:	ddc13315 	stw	r23,1228(sp)
10009078:	dd813215 	stw	r22,1224(sp)
1000907c:	dd413115 	stw	r21,1220(sp)
10009080:	dd013015 	stw	r20,1216(sp)
10009084:	dc812e15 	stw	r18,1208(sp)
10009088:	dc412d15 	stw	r17,1204(sp)
1000908c:	dc012c15 	stw	r16,1200(sp)
10009090:	d9012115 	stw	r4,1156(sp)
10009094:	d9412015 	stw	r5,1152(sp)
10009098:	d9c12315 	stw	r7,1164(sp)
1000909c:	3027883a 	mov	r19,r6
100090a0:	20000226 	beq	r4,zero,100090ac <___vfiprintf_internal_r+0x48>
100090a4:	20800e17 	ldw	r2,56(r4)
100090a8:	1000f726 	beq	r2,zero,10009488 <___vfiprintf_internal_r+0x424>
100090ac:	d8812017 	ldw	r2,1152(sp)
100090b0:	10c0030b 	ldhu	r3,12(r2)
100090b4:	1908000c 	andi	r4,r3,8192
100090b8:	1805883a 	mov	r2,r3
100090bc:	2000081e 	bne	r4,zero,100090e0 <___vfiprintf_internal_r+0x7c>
100090c0:	d9412017 	ldw	r5,1152(sp)
100090c4:	18880014 	ori	r2,r3,8192
100090c8:	00f7ffc4 	movi	r3,-8193
100090cc:	29001917 	ldw	r4,100(r5)
100090d0:	2880030d 	sth	r2,12(r5)
100090d4:	20c8703a 	and	r4,r4,r3
100090d8:	29001915 	stw	r4,100(r5)
100090dc:	1007883a 	mov	r3,r2
100090e0:	1100020c 	andi	r4,r2,8
100090e4:	2000a726 	beq	r4,zero,10009384 <___vfiprintf_internal_r+0x320>
100090e8:	d9412017 	ldw	r5,1152(sp)
100090ec:	29000417 	ldw	r4,16(r5)
100090f0:	2000a426 	beq	r4,zero,10009384 <___vfiprintf_internal_r+0x320>
100090f4:	1080068c 	andi	r2,r2,26
100090f8:	01000284 	movi	r4,10
100090fc:	1100ab26 	beq	r2,r4,100093ac <___vfiprintf_internal_r+0x348>
10009100:	d9010a04 	addi	r4,sp,1064
10009104:	d94109c4 	addi	r5,sp,1063
10009108:	07040074 	movhi	fp,4097
1000910c:	04440074 	movhi	r17,4097
10009110:	2145c83a 	sub	r2,r4,r5
10009114:	e73e4c04 	addi	fp,fp,-1744
10009118:	8c7e4804 	addi	r17,r17,-1760
1000911c:	d9011e15 	stw	r4,1144(sp)
10009120:	d9411f15 	stw	r5,1148(sp)
10009124:	dec11a15 	stw	sp,1128(sp)
10009128:	d8011c15 	stw	zero,1136(sp)
1000912c:	d8011b15 	stw	zero,1132(sp)
10009130:	d8012715 	stw	zero,1180(sp)
10009134:	d8012515 	stw	zero,1172(sp)
10009138:	d811883a 	mov	r8,sp
1000913c:	d8812815 	stw	r2,1184(sp)
10009140:	982f883a 	mov	r23,r19
10009144:	b8800007 	ldb	r2,0(r23)
10009148:	1003b026 	beq	r2,zero,1000a00c <___vfiprintf_internal_r+0xfa8>
1000914c:	01000944 	movi	r4,37
10009150:	1103ae26 	beq	r2,r4,1000a00c <___vfiprintf_internal_r+0xfa8>
10009154:	b805883a 	mov	r2,r23
10009158:	00000106 	br	10009160 <___vfiprintf_internal_r+0xfc>
1000915c:	19000326 	beq	r3,r4,1000916c <___vfiprintf_internal_r+0x108>
10009160:	10800044 	addi	r2,r2,1
10009164:	10c00007 	ldb	r3,0(r2)
10009168:	183ffc1e 	bne	r3,zero,1000915c <__alt_data_end+0xf800915c>
1000916c:	15e1c83a 	sub	r16,r2,r23
10009170:	1029883a 	mov	r20,r2
10009174:	80001026 	beq	r16,zero,100091b8 <___vfiprintf_internal_r+0x154>
10009178:	d8c11c17 	ldw	r3,1136(sp)
1000917c:	d8811b17 	ldw	r2,1132(sp)
10009180:	45c00015 	stw	r23,0(r8)
10009184:	80c7883a 	add	r3,r16,r3
10009188:	10800044 	addi	r2,r2,1
1000918c:	44000115 	stw	r16,4(r8)
10009190:	d8c11c15 	stw	r3,1136(sp)
10009194:	d8811b15 	stw	r2,1132(sp)
10009198:	010001c4 	movi	r4,7
1000919c:	2080740e 	bge	r4,r2,10009370 <___vfiprintf_internal_r+0x30c>
100091a0:	1803a71e 	bne	r3,zero,1000a040 <___vfiprintf_internal_r+0xfdc>
100091a4:	d8c12517 	ldw	r3,1172(sp)
100091a8:	d8011b15 	stw	zero,1132(sp)
100091ac:	d811883a 	mov	r8,sp
100091b0:	1c07883a 	add	r3,r3,r16
100091b4:	d8c12515 	stw	r3,1172(sp)
100091b8:	a0800007 	ldb	r2,0(r20)
100091bc:	1002bf26 	beq	r2,zero,10009cbc <___vfiprintf_internal_r+0xc58>
100091c0:	a5c00044 	addi	r23,r20,1
100091c4:	a1800047 	ldb	r6,1(r20)
100091c8:	d8011d85 	stb	zero,1142(sp)
100091cc:	d8012205 	stb	zero,1160(sp)
100091d0:	043fffc4 	movi	r16,-1
100091d4:	d8012415 	stw	zero,1168(sp)
100091d8:	0025883a 	mov	r18,zero
100091dc:	05001604 	movi	r20,88
100091e0:	05400244 	movi	r21,9
100091e4:	4027883a 	mov	r19,r8
100091e8:	bdc00044 	addi	r23,r23,1
100091ec:	30bff804 	addi	r2,r6,-32
100091f0:	a0825636 	bltu	r20,r2,10009b4c <___vfiprintf_internal_r+0xae8>
100091f4:	100490ba 	slli	r2,r2,2
100091f8:	01040074 	movhi	r4,4097
100091fc:	21248304 	addi	r4,r4,-28148
10009200:	1105883a 	add	r2,r2,r4
10009204:	10800017 	ldw	r2,0(r2)
10009208:	1000683a 	jmp	r2
1000920c:	10009adc 	xori	zero,r2,619
10009210:	10009b4c 	andi	zero,r2,621
10009214:	10009b4c 	andi	zero,r2,621
10009218:	10009b40 	call	110009b4 <_gp+0xfe7594>
1000921c:	10009b4c 	andi	zero,r2,621
10009220:	10009b4c 	andi	zero,r2,621
10009224:	10009b4c 	andi	zero,r2,621
10009228:	10009b4c 	andi	zero,r2,621
1000922c:	10009b4c 	andi	zero,r2,621
10009230:	10009b4c 	andi	zero,r2,621
10009234:	100098cc 	andi	zero,r2,611
10009238:	10009af4 	orhi	zero,r2,619
1000923c:	10009b4c 	andi	zero,r2,621
10009240:	100094a0 	cmpeqi	zero,r2,594
10009244:	100098f0 	cmpltui	zero,r2,611
10009248:	10009b4c 	andi	zero,r2,621
1000924c:	100094ac 	andhi	zero,r2,594
10009250:	100094b8 	rdprs	zero,r2,594
10009254:	100094b8 	rdprs	zero,r2,594
10009258:	100094b8 	rdprs	zero,r2,594
1000925c:	100094b8 	rdprs	zero,r2,594
10009260:	100094b8 	rdprs	zero,r2,594
10009264:	100094b8 	rdprs	zero,r2,594
10009268:	100094b8 	rdprs	zero,r2,594
1000926c:	100094b8 	rdprs	zero,r2,594
10009270:	100094b8 	rdprs	zero,r2,594
10009274:	10009b4c 	andi	zero,r2,621
10009278:	10009b4c 	andi	zero,r2,621
1000927c:	10009b4c 	andi	zero,r2,621
10009280:	10009b4c 	andi	zero,r2,621
10009284:	10009b4c 	andi	zero,r2,621
10009288:	10009b4c 	andi	zero,r2,621
1000928c:	10009b4c 	andi	zero,r2,621
10009290:	10009b4c 	andi	zero,r2,621
10009294:	10009b4c 	andi	zero,r2,621
10009298:	10009b4c 	andi	zero,r2,621
1000929c:	100094f8 	rdprs	zero,r2,595
100092a0:	10009b4c 	andi	zero,r2,621
100092a4:	10009b4c 	andi	zero,r2,621
100092a8:	10009b4c 	andi	zero,r2,621
100092ac:	10009b4c 	andi	zero,r2,621
100092b0:	10009b4c 	andi	zero,r2,621
100092b4:	10009b4c 	andi	zero,r2,621
100092b8:	10009b4c 	andi	zero,r2,621
100092bc:	10009b4c 	andi	zero,r2,621
100092c0:	10009b4c 	andi	zero,r2,621
100092c4:	10009b4c 	andi	zero,r2,621
100092c8:	100097e8 	cmpgeui	zero,r2,607
100092cc:	10009b4c 	andi	zero,r2,621
100092d0:	10009b4c 	andi	zero,r2,621
100092d4:	10009b4c 	andi	zero,r2,621
100092d8:	10009b4c 	andi	zero,r2,621
100092dc:	10009b4c 	andi	zero,r2,621
100092e0:	10009828 	cmpgeui	zero,r2,608
100092e4:	10009b4c 	andi	zero,r2,621
100092e8:	10009b4c 	andi	zero,r2,621
100092ec:	1000986c 	andhi	zero,r2,609
100092f0:	10009b4c 	andi	zero,r2,621
100092f4:	10009b4c 	andi	zero,r2,621
100092f8:	10009b4c 	andi	zero,r2,621
100092fc:	10009b4c 	andi	zero,r2,621
10009300:	10009b4c 	andi	zero,r2,621
10009304:	10009b4c 	andi	zero,r2,621
10009308:	10009b4c 	andi	zero,r2,621
1000930c:	10009b4c 	andi	zero,r2,621
10009310:	10009b4c 	andi	zero,r2,621
10009314:	10009b4c 	andi	zero,r2,621
10009318:	100097b4 	orhi	zero,r2,606
1000931c:	10009b04 	addi	zero,r2,620
10009320:	10009b4c 	andi	zero,r2,621
10009324:	10009b4c 	andi	zero,r2,621
10009328:	10009b4c 	andi	zero,r2,621
1000932c:	10009940 	call	11000994 <_gp+0xfe7574>
10009330:	10009b04 	addi	zero,r2,620
10009334:	10009b4c 	andi	zero,r2,621
10009338:	10009b4c 	andi	zero,r2,621
1000933c:	10009858 	cmpnei	zero,r2,609
10009340:	10009b4c 	andi	zero,r2,621
10009344:	10009aa4 	muli	zero,r2,618
10009348:	10009a2c 	andhi	zero,r2,616
1000934c:	10009a60 	cmpeqi	zero,r2,617
10009350:	1000994c 	andi	zero,r2,613
10009354:	10009b4c 	andi	zero,r2,621
10009358:	10009958 	cmpnei	zero,r2,613
1000935c:	10009b4c 	andi	zero,r2,621
10009360:	100099b4 	orhi	zero,r2,614
10009364:	10009b4c 	andi	zero,r2,621
10009368:	10009b4c 	andi	zero,r2,621
1000936c:	100099e8 	cmpgeui	zero,r2,615
10009370:	42000204 	addi	r8,r8,8
10009374:	d8c12517 	ldw	r3,1172(sp)
10009378:	1c07883a 	add	r3,r3,r16
1000937c:	d8c12515 	stw	r3,1172(sp)
10009380:	003f8d06 	br	100091b8 <__alt_data_end+0xf80091b8>
10009384:	d9012117 	ldw	r4,1156(sp)
10009388:	d9412017 	ldw	r5,1152(sp)
1000938c:	0003d2c0 	call	10003d2c <__swsetup_r>
10009390:	1000301e 	bne	r2,zero,10009454 <___vfiprintf_internal_r+0x3f0>
10009394:	d8812017 	ldw	r2,1152(sp)
10009398:	01000284 	movi	r4,10
1000939c:	10c0030b 	ldhu	r3,12(r2)
100093a0:	1805883a 	mov	r2,r3
100093a4:	1080068c 	andi	r2,r2,26
100093a8:	113f551e 	bne	r2,r4,10009100 <__alt_data_end+0xf8009100>
100093ac:	d9012017 	ldw	r4,1152(sp)
100093b0:	2080038b 	ldhu	r2,14(r4)
100093b4:	113fffcc 	andi	r4,r2,65535
100093b8:	2120001c 	xori	r4,r4,32768
100093bc:	21200004 	addi	r4,r4,-32768
100093c0:	203f4f16 	blt	r4,zero,10009100 <__alt_data_end+0xf8009100>
100093c4:	d9412017 	ldw	r5,1152(sp)
100093c8:	d9012117 	ldw	r4,1156(sp)
100093cc:	d9c12317 	ldw	r7,1164(sp)
100093d0:	2b001917 	ldw	r12,100(r5)
100093d4:	2ac00717 	ldw	r11,28(r5)
100093d8:	2a800917 	ldw	r10,36(r5)
100093dc:	02010004 	movi	r8,1024
100093e0:	18ffff4c 	andi	r3,r3,65533
100093e4:	da0b883a 	add	r5,sp,r8
100093e8:	980d883a 	mov	r6,r19
100093ec:	d8c1030d 	sth	r3,1036(sp)
100093f0:	db011915 	stw	r12,1124(sp)
100093f4:	d881038d 	sth	r2,1038(sp)
100093f8:	dac10715 	stw	r11,1052(sp)
100093fc:	da810915 	stw	r10,1060(sp)
10009400:	dec10015 	stw	sp,1024(sp)
10009404:	dec10415 	stw	sp,1040(sp)
10009408:	da010215 	stw	r8,1032(sp)
1000940c:	da010515 	stw	r8,1044(sp)
10009410:	d8010615 	stw	zero,1048(sp)
10009414:	00090640 	call	10009064 <___vfiprintf_internal_r>
10009418:	1021883a 	mov	r16,r2
1000941c:	10000416 	blt	r2,zero,10009430 <___vfiprintf_internal_r+0x3cc>
10009420:	d9012117 	ldw	r4,1156(sp)
10009424:	d9410004 	addi	r5,sp,1024
10009428:	00057ac0 	call	100057ac <_fflush_r>
1000942c:	10040f1e 	bne	r2,zero,1000a46c <___vfiprintf_internal_r+0x1408>
10009430:	d881030b 	ldhu	r2,1036(sp)
10009434:	1080100c 	andi	r2,r2,64
10009438:	10000426 	beq	r2,zero,1000944c <___vfiprintf_internal_r+0x3e8>
1000943c:	d8c12017 	ldw	r3,1152(sp)
10009440:	1880030b 	ldhu	r2,12(r3)
10009444:	10801014 	ori	r2,r2,64
10009448:	1880030d 	sth	r2,12(r3)
1000944c:	8005883a 	mov	r2,r16
10009450:	00000106 	br	10009458 <___vfiprintf_internal_r+0x3f4>
10009454:	00bfffc4 	movi	r2,-1
10009458:	dfc13517 	ldw	ra,1236(sp)
1000945c:	df013417 	ldw	fp,1232(sp)
10009460:	ddc13317 	ldw	r23,1228(sp)
10009464:	dd813217 	ldw	r22,1224(sp)
10009468:	dd413117 	ldw	r21,1220(sp)
1000946c:	dd013017 	ldw	r20,1216(sp)
10009470:	dcc12f17 	ldw	r19,1212(sp)
10009474:	dc812e17 	ldw	r18,1208(sp)
10009478:	dc412d17 	ldw	r17,1204(sp)
1000947c:	dc012c17 	ldw	r16,1200(sp)
10009480:	dec13604 	addi	sp,sp,1240
10009484:	f800283a 	ret
10009488:	0005d680 	call	10005d68 <__sinit>
1000948c:	003f0706 	br	100090ac <__alt_data_end+0xf80090ac>
10009490:	d8c12417 	ldw	r3,1168(sp)
10009494:	d8812315 	stw	r2,1164(sp)
10009498:	00c7c83a 	sub	r3,zero,r3
1000949c:	d8c12415 	stw	r3,1168(sp)
100094a0:	94800114 	ori	r18,r18,4
100094a4:	b9800007 	ldb	r6,0(r23)
100094a8:	003f4f06 	br	100091e8 <__alt_data_end+0xf80091e8>
100094ac:	94802014 	ori	r18,r18,128
100094b0:	b9800007 	ldb	r6,0(r23)
100094b4:	003f4c06 	br	100091e8 <__alt_data_end+0xf80091e8>
100094b8:	dc012615 	stw	r16,1176(sp)
100094bc:	d8012415 	stw	zero,1168(sp)
100094c0:	35bff404 	addi	r22,r6,-48
100094c4:	0009883a 	mov	r4,zero
100094c8:	b821883a 	mov	r16,r23
100094cc:	01400284 	movi	r5,10
100094d0:	00019c40 	call	100019c4 <__mulsi3>
100094d4:	81800007 	ldb	r6,0(r16)
100094d8:	1589883a 	add	r4,r2,r22
100094dc:	bdc00044 	addi	r23,r23,1
100094e0:	35bff404 	addi	r22,r6,-48
100094e4:	b821883a 	mov	r16,r23
100094e8:	adbff82e 	bgeu	r21,r22,100094cc <__alt_data_end+0xf80094cc>
100094ec:	d9012415 	stw	r4,1168(sp)
100094f0:	dc012617 	ldw	r16,1176(sp)
100094f4:	003f3d06 	br	100091ec <__alt_data_end+0xf80091ec>
100094f8:	d8c12203 	ldbu	r3,1160(sp)
100094fc:	94800414 	ori	r18,r18,16
10009500:	9080080c 	andi	r2,r18,32
10009504:	d8c11d85 	stb	r3,1142(sp)
10009508:	9811883a 	mov	r8,r19
1000950c:	d8c12317 	ldw	r3,1164(sp)
10009510:	10018226 	beq	r2,zero,10009b1c <___vfiprintf_internal_r+0xab8>
10009514:	d9012317 	ldw	r4,1164(sp)
10009518:	18800117 	ldw	r2,4(r3)
1000951c:	1cc00017 	ldw	r19,0(r3)
10009520:	21000204 	addi	r4,r4,8
10009524:	d9012315 	stw	r4,1164(sp)
10009528:	102b883a 	mov	r21,r2
1000952c:	10030016 	blt	r2,zero,1000a130 <___vfiprintf_internal_r+0x10cc>
10009530:	dd811d83 	ldbu	r22,1142(sp)
10009534:	8029883a 	mov	r20,r16
10009538:	00800044 	movi	r2,1
1000953c:	9d46b03a 	or	r3,r19,r21
10009540:	80000216 	blt	r16,zero,1000954c <___vfiprintf_internal_r+0x4e8>
10009544:	013fdfc4 	movi	r4,-129
10009548:	9124703a 	and	r18,r18,r4
1000954c:	1801b41e 	bne	r3,zero,10009c20 <___vfiprintf_internal_r+0xbbc>
10009550:	80028126 	beq	r16,zero,10009f58 <___vfiprintf_internal_r+0xef4>
10009554:	10803fcc 	andi	r2,r2,255
10009558:	00c00044 	movi	r3,1
1000955c:	10c1d126 	beq	r2,r3,10009ca4 <___vfiprintf_internal_r+0xc40>
10009560:	00c00084 	movi	r3,2
10009564:	10c28626 	beq	r2,r3,10009f80 <___vfiprintf_internal_r+0xf1c>
10009568:	d8c10a04 	addi	r3,sp,1064
1000956c:	9808d0fa 	srli	r4,r19,3
10009570:	a80a977a 	slli	r5,r21,29
10009574:	a82ad0fa 	srli	r21,r21,3
10009578:	9cc001cc 	andi	r19,r19,7
1000957c:	98800c04 	addi	r2,r19,48
10009580:	18ffffc4 	addi	r3,r3,-1
10009584:	2926b03a 	or	r19,r5,r4
10009588:	18800005 	stb	r2,0(r3)
1000958c:	9d48b03a 	or	r4,r19,r21
10009590:	203ff61e 	bne	r4,zero,1000956c <__alt_data_end+0xf800956c>
10009594:	9100004c 	andi	r4,r18,1
10009598:	d8c12215 	stw	r3,1160(sp)
1000959c:	2002b31e 	bne	r4,zero,1000a06c <___vfiprintf_internal_r+0x1008>
100095a0:	d9411e17 	ldw	r5,1144(sp)
100095a4:	28e9c83a 	sub	r20,r5,r3
100095a8:	a02b883a 	mov	r21,r20
100095ac:	a400010e 	bge	r20,r16,100095b4 <___vfiprintf_internal_r+0x550>
100095b0:	802b883a 	mov	r21,r16
100095b4:	b5803fcc 	andi	r22,r22,255
100095b8:	b580201c 	xori	r22,r22,128
100095bc:	b5bfe004 	addi	r22,r22,-128
100095c0:	b0000126 	beq	r22,zero,100095c8 <___vfiprintf_internal_r+0x564>
100095c4:	ad400044 	addi	r21,r21,1
100095c8:	9280008c 	andi	r10,r18,2
100095cc:	50000126 	beq	r10,zero,100095d4 <___vfiprintf_internal_r+0x570>
100095d0:	ad400084 	addi	r21,r21,2
100095d4:	9580210c 	andi	r22,r18,132
100095d8:	b001751e 	bne	r22,zero,10009bb0 <___vfiprintf_internal_r+0xb4c>
100095dc:	d9012417 	ldw	r4,1168(sp)
100095e0:	2567c83a 	sub	r19,r4,r21
100095e4:	04c1720e 	bge	zero,r19,10009bb0 <___vfiprintf_internal_r+0xb4c>
100095e8:	01c00404 	movi	r7,16
100095ec:	d8c11c17 	ldw	r3,1136(sp)
100095f0:	3cc36b0e 	bge	r7,r19,1000a3a0 <___vfiprintf_internal_r+0x133c>
100095f4:	00840074 	movhi	r2,4097
100095f8:	10be4c04 	addi	r2,r2,-1744
100095fc:	dc012915 	stw	r16,1188(sp)
10009600:	d9011b17 	ldw	r4,1132(sp)
10009604:	9821883a 	mov	r16,r19
10009608:	d8812615 	stw	r2,1176(sp)
1000960c:	030001c4 	movi	r12,7
10009610:	5027883a 	mov	r19,r10
10009614:	00000506 	br	1000962c <___vfiprintf_internal_r+0x5c8>
10009618:	21400084 	addi	r5,r4,2
1000961c:	42000204 	addi	r8,r8,8
10009620:	1009883a 	mov	r4,r2
10009624:	843ffc04 	addi	r16,r16,-16
10009628:	3c000d0e 	bge	r7,r16,10009660 <___vfiprintf_internal_r+0x5fc>
1000962c:	18c00404 	addi	r3,r3,16
10009630:	20800044 	addi	r2,r4,1
10009634:	47000015 	stw	fp,0(r8)
10009638:	41c00115 	stw	r7,4(r8)
1000963c:	d8c11c15 	stw	r3,1136(sp)
10009640:	d8811b15 	stw	r2,1132(sp)
10009644:	60bff40e 	bge	r12,r2,10009618 <__alt_data_end+0xf8009618>
10009648:	18014b1e 	bne	r3,zero,10009b78 <___vfiprintf_internal_r+0xb14>
1000964c:	843ffc04 	addi	r16,r16,-16
10009650:	0009883a 	mov	r4,zero
10009654:	01400044 	movi	r5,1
10009658:	d811883a 	mov	r8,sp
1000965c:	3c3ff316 	blt	r7,r16,1000962c <__alt_data_end+0xf800962c>
10009660:	9815883a 	mov	r10,r19
10009664:	8027883a 	mov	r19,r16
10009668:	dc012917 	ldw	r16,1188(sp)
1000966c:	d9012617 	ldw	r4,1176(sp)
10009670:	98c7883a 	add	r3,r19,r3
10009674:	44c00115 	stw	r19,4(r8)
10009678:	41000015 	stw	r4,0(r8)
1000967c:	d8c11c15 	stw	r3,1136(sp)
10009680:	d9411b15 	stw	r5,1132(sp)
10009684:	008001c4 	movi	r2,7
10009688:	11425116 	blt	r2,r5,10009fd0 <___vfiprintf_internal_r+0xf6c>
1000968c:	d9011d87 	ldb	r4,1142(sp)
10009690:	42000204 	addi	r8,r8,8
10009694:	28800044 	addi	r2,r5,1
10009698:	20014a1e 	bne	r4,zero,10009bc4 <___vfiprintf_internal_r+0xb60>
1000969c:	50000c26 	beq	r10,zero,100096d0 <___vfiprintf_internal_r+0x66c>
100096a0:	d9011d04 	addi	r4,sp,1140
100096a4:	18c00084 	addi	r3,r3,2
100096a8:	41000015 	stw	r4,0(r8)
100096ac:	01000084 	movi	r4,2
100096b0:	41000115 	stw	r4,4(r8)
100096b4:	d8c11c15 	stw	r3,1136(sp)
100096b8:	d8811b15 	stw	r2,1132(sp)
100096bc:	010001c4 	movi	r4,7
100096c0:	20822016 	blt	r4,r2,10009f44 <___vfiprintf_internal_r+0xee0>
100096c4:	100b883a 	mov	r5,r2
100096c8:	42000204 	addi	r8,r8,8
100096cc:	10800044 	addi	r2,r2,1
100096d0:	01002004 	movi	r4,128
100096d4:	b101de26 	beq	r22,r4,10009e50 <___vfiprintf_internal_r+0xdec>
100096d8:	8521c83a 	sub	r16,r16,r20
100096dc:	0400230e 	bge	zero,r16,1000976c <___vfiprintf_internal_r+0x708>
100096e0:	04c00404 	movi	r19,16
100096e4:	9c030d0e 	bge	r19,r16,1000a31c <___vfiprintf_internal_r+0x12b8>
100096e8:	00840074 	movhi	r2,4097
100096ec:	10be4804 	addi	r2,r2,-1760
100096f0:	d8812615 	stw	r2,1176(sp)
100096f4:	058001c4 	movi	r22,7
100096f8:	00000506 	br	10009710 <___vfiprintf_internal_r+0x6ac>
100096fc:	28800084 	addi	r2,r5,2
10009700:	42000204 	addi	r8,r8,8
10009704:	200b883a 	mov	r5,r4
10009708:	843ffc04 	addi	r16,r16,-16
1000970c:	9c000d0e 	bge	r19,r16,10009744 <___vfiprintf_internal_r+0x6e0>
10009710:	18c00404 	addi	r3,r3,16
10009714:	29000044 	addi	r4,r5,1
10009718:	44400015 	stw	r17,0(r8)
1000971c:	44c00115 	stw	r19,4(r8)
10009720:	d8c11c15 	stw	r3,1136(sp)
10009724:	d9011b15 	stw	r4,1132(sp)
10009728:	b13ff40e 	bge	r22,r4,100096fc <__alt_data_end+0xf80096fc>
1000972c:	1801321e 	bne	r3,zero,10009bf8 <___vfiprintf_internal_r+0xb94>
10009730:	843ffc04 	addi	r16,r16,-16
10009734:	000b883a 	mov	r5,zero
10009738:	00800044 	movi	r2,1
1000973c:	d811883a 	mov	r8,sp
10009740:	9c3ff316 	blt	r19,r16,10009710 <__alt_data_end+0xf8009710>
10009744:	d9012617 	ldw	r4,1176(sp)
10009748:	1c07883a 	add	r3,r3,r16
1000974c:	44000115 	stw	r16,4(r8)
10009750:	41000015 	stw	r4,0(r8)
10009754:	d8c11c15 	stw	r3,1136(sp)
10009758:	d8811b15 	stw	r2,1132(sp)
1000975c:	010001c4 	movi	r4,7
10009760:	20816216 	blt	r4,r2,10009cec <___vfiprintf_internal_r+0xc88>
10009764:	42000204 	addi	r8,r8,8
10009768:	10800044 	addi	r2,r2,1
1000976c:	d9012217 	ldw	r4,1160(sp)
10009770:	1d07883a 	add	r3,r3,r20
10009774:	45000115 	stw	r20,4(r8)
10009778:	41000015 	stw	r4,0(r8)
1000977c:	d8c11c15 	stw	r3,1136(sp)
10009780:	d8811b15 	stw	r2,1132(sp)
10009784:	010001c4 	movi	r4,7
10009788:	2081610e 	bge	r4,r2,10009d10 <___vfiprintf_internal_r+0xcac>
1000978c:	1802211e 	bne	r3,zero,1000a014 <___vfiprintf_internal_r+0xfb0>
10009790:	d8011b15 	stw	zero,1132(sp)
10009794:	9480010c 	andi	r18,r18,4
10009798:	9002171e 	bne	r18,zero,10009ff8 <___vfiprintf_internal_r+0xf94>
1000979c:	d9412417 	ldw	r5,1168(sp)
100097a0:	a9433716 	blt	r21,r5,1000a480 <___vfiprintf_internal_r+0x141c>
100097a4:	d8812517 	ldw	r2,1172(sp)
100097a8:	1545883a 	add	r2,r2,r21
100097ac:	d8812515 	stw	r2,1172(sp)
100097b0:	00019a06 	br	10009e1c <___vfiprintf_internal_r+0xdb8>
100097b4:	d8c12317 	ldw	r3,1164(sp)
100097b8:	05400044 	movi	r21,1
100097bc:	9811883a 	mov	r8,r19
100097c0:	18800017 	ldw	r2,0(r3)
100097c4:	18c00104 	addi	r3,r3,4
100097c8:	d8c12315 	stw	r3,1164(sp)
100097cc:	d8c10004 	addi	r3,sp,1024
100097d0:	d8011d85 	stb	zero,1142(sp)
100097d4:	d8810005 	stb	r2,1024(sp)
100097d8:	a829883a 	mov	r20,r21
100097dc:	d8c12215 	stw	r3,1160(sp)
100097e0:	0021883a 	mov	r16,zero
100097e4:	003f7806 	br	100095c8 <__alt_data_end+0xf80095c8>
100097e8:	94800414 	ori	r18,r18,16
100097ec:	9080080c 	andi	r2,r18,32
100097f0:	9811883a 	mov	r8,r19
100097f4:	10009026 	beq	r2,zero,10009a38 <___vfiprintf_internal_r+0x9d4>
100097f8:	d8812317 	ldw	r2,1164(sp)
100097fc:	d8c12317 	ldw	r3,1164(sp)
10009800:	14c00017 	ldw	r19,0(r2)
10009804:	15400117 	ldw	r21,4(r2)
10009808:	18c00204 	addi	r3,r3,8
1000980c:	d8c12315 	stw	r3,1164(sp)
10009810:	0005883a 	mov	r2,zero
10009814:	9d46b03a 	or	r3,r19,r21
10009818:	d8011d85 	stb	zero,1142(sp)
1000981c:	8029883a 	mov	r20,r16
10009820:	002d883a 	mov	r22,zero
10009824:	003f4606 	br	10009540 <__alt_data_end+0xf8009540>
10009828:	94800414 	ori	r18,r18,16
1000982c:	9080080c 	andi	r2,r18,32
10009830:	9811883a 	mov	r8,r19
10009834:	10006226 	beq	r2,zero,100099c0 <___vfiprintf_internal_r+0x95c>
10009838:	d9012317 	ldw	r4,1164(sp)
1000983c:	00800044 	movi	r2,1
10009840:	24c00017 	ldw	r19,0(r4)
10009844:	25400117 	ldw	r21,4(r4)
10009848:	21000204 	addi	r4,r4,8
1000984c:	d9012315 	stw	r4,1164(sp)
10009850:	9d46b03a 	or	r3,r19,r21
10009854:	003ff006 	br	10009818 <__alt_data_end+0xf8009818>
10009858:	b9800007 	ldb	r6,0(r23)
1000985c:	00801b04 	movi	r2,108
10009860:	3082b226 	beq	r6,r2,1000a32c <___vfiprintf_internal_r+0x12c8>
10009864:	94800414 	ori	r18,r18,16
10009868:	003e5f06 	br	100091e8 <__alt_data_end+0xf80091e8>
1000986c:	d8c12203 	ldbu	r3,1160(sp)
10009870:	01040074 	movhi	r4,4097
10009874:	213de304 	addi	r4,r4,-2164
10009878:	d8c11d85 	stb	r3,1142(sp)
1000987c:	d9012715 	stw	r4,1180(sp)
10009880:	90c0080c 	andi	r3,r18,32
10009884:	9811883a 	mov	r8,r19
10009888:	d8812317 	ldw	r2,1164(sp)
1000988c:	18005f26 	beq	r3,zero,10009a0c <___vfiprintf_internal_r+0x9a8>
10009890:	d9012317 	ldw	r4,1164(sp)
10009894:	14c00017 	ldw	r19,0(r2)
10009898:	15400117 	ldw	r21,4(r2)
1000989c:	21000204 	addi	r4,r4,8
100098a0:	d9012315 	stw	r4,1164(sp)
100098a4:	9080004c 	andi	r2,r18,1
100098a8:	1001e226 	beq	r2,zero,1000a034 <___vfiprintf_internal_r+0xfd0>
100098ac:	9d46b03a 	or	r3,r19,r21
100098b0:	18024e26 	beq	r3,zero,1000a1ec <___vfiprintf_internal_r+0x1188>
100098b4:	00800c04 	movi	r2,48
100098b8:	d8811d05 	stb	r2,1140(sp)
100098bc:	d9811d45 	stb	r6,1141(sp)
100098c0:	94800094 	ori	r18,r18,2
100098c4:	00800084 	movi	r2,2
100098c8:	003fd306 	br	10009818 <__alt_data_end+0xf8009818>
100098cc:	d9012317 	ldw	r4,1164(sp)
100098d0:	d9412317 	ldw	r5,1164(sp)
100098d4:	21000017 	ldw	r4,0(r4)
100098d8:	28800104 	addi	r2,r5,4
100098dc:	d9012415 	stw	r4,1168(sp)
100098e0:	203eeb16 	blt	r4,zero,10009490 <__alt_data_end+0xf8009490>
100098e4:	d8812315 	stw	r2,1164(sp)
100098e8:	b9800007 	ldb	r6,0(r23)
100098ec:	003e3e06 	br	100091e8 <__alt_data_end+0xf80091e8>
100098f0:	b9800007 	ldb	r6,0(r23)
100098f4:	01000a84 	movi	r4,42
100098f8:	b8800044 	addi	r2,r23,1
100098fc:	3102d226 	beq	r6,r4,1000a448 <___vfiprintf_internal_r+0x13e4>
10009900:	35bff404 	addi	r22,r6,-48
10009904:	102f883a 	mov	r23,r2
10009908:	0021883a 	mov	r16,zero
1000990c:	adbe3736 	bltu	r21,r22,100091ec <__alt_data_end+0xf80091ec>
10009910:	0009883a 	mov	r4,zero
10009914:	01400284 	movi	r5,10
10009918:	00019c40 	call	100019c4 <__mulsi3>
1000991c:	b9800007 	ldb	r6,0(r23)
10009920:	b089883a 	add	r4,r22,r2
10009924:	bdc00044 	addi	r23,r23,1
10009928:	35bff404 	addi	r22,r6,-48
1000992c:	adbff92e 	bgeu	r21,r22,10009914 <__alt_data_end+0xf8009914>
10009930:	2021883a 	mov	r16,r4
10009934:	203e2d0e 	bge	r4,zero,100091ec <__alt_data_end+0xf80091ec>
10009938:	043fffc4 	movi	r16,-1
1000993c:	003e2b06 	br	100091ec <__alt_data_end+0xf80091ec>
10009940:	94801014 	ori	r18,r18,64
10009944:	b9800007 	ldb	r6,0(r23)
10009948:	003e2706 	br	100091e8 <__alt_data_end+0xf80091e8>
1000994c:	94800814 	ori	r18,r18,32
10009950:	b9800007 	ldb	r6,0(r23)
10009954:	003e2406 	br	100091e8 <__alt_data_end+0xf80091e8>
10009958:	d9412317 	ldw	r5,1164(sp)
1000995c:	d8812317 	ldw	r2,1164(sp)
10009960:	d8011d85 	stb	zero,1142(sp)
10009964:	29400017 	ldw	r5,0(r5)
10009968:	9811883a 	mov	r8,r19
1000996c:	14c00104 	addi	r19,r2,4
10009970:	d9412215 	stw	r5,1160(sp)
10009974:	28029026 	beq	r5,zero,1000a3b8 <___vfiprintf_internal_r+0x1354>
10009978:	d9012217 	ldw	r4,1160(sp)
1000997c:	80027616 	blt	r16,zero,1000a358 <___vfiprintf_internal_r+0x12f4>
10009980:	000b883a 	mov	r5,zero
10009984:	800d883a 	mov	r6,r16
10009988:	da012a15 	stw	r8,1192(sp)
1000998c:	00072200 	call	10007220 <memchr>
10009990:	da012a17 	ldw	r8,1192(sp)
10009994:	1002a026 	beq	r2,zero,1000a418 <___vfiprintf_internal_r+0x13b4>
10009998:	d8c12217 	ldw	r3,1160(sp)
1000999c:	10e9c83a 	sub	r20,r2,r3
100099a0:	85023816 	blt	r16,r20,1000a284 <___vfiprintf_internal_r+0x1220>
100099a4:	dd811d83 	ldbu	r22,1142(sp)
100099a8:	dcc12315 	stw	r19,1164(sp)
100099ac:	0021883a 	mov	r16,zero
100099b0:	003efd06 	br	100095a8 <__alt_data_end+0xf80095a8>
100099b4:	9080080c 	andi	r2,r18,32
100099b8:	9811883a 	mov	r8,r19
100099bc:	103f9e1e 	bne	r2,zero,10009838 <__alt_data_end+0xf8009838>
100099c0:	9080040c 	andi	r2,r18,16
100099c4:	10021726 	beq	r2,zero,1000a224 <___vfiprintf_internal_r+0x11c0>
100099c8:	d9412317 	ldw	r5,1164(sp)
100099cc:	002b883a 	mov	r21,zero
100099d0:	00800044 	movi	r2,1
100099d4:	2cc00017 	ldw	r19,0(r5)
100099d8:	29400104 	addi	r5,r5,4
100099dc:	d9412315 	stw	r5,1164(sp)
100099e0:	9807883a 	mov	r3,r19
100099e4:	003f8c06 	br	10009818 <__alt_data_end+0xf8009818>
100099e8:	d8c12203 	ldbu	r3,1160(sp)
100099ec:	01040074 	movhi	r4,4097
100099f0:	213de804 	addi	r4,r4,-2144
100099f4:	d8c11d85 	stb	r3,1142(sp)
100099f8:	d9012715 	stw	r4,1180(sp)
100099fc:	90c0080c 	andi	r3,r18,32
10009a00:	9811883a 	mov	r8,r19
10009a04:	d8812317 	ldw	r2,1164(sp)
10009a08:	183fa11e 	bne	r3,zero,10009890 <__alt_data_end+0xf8009890>
10009a0c:	90c0040c 	andi	r3,r18,16
10009a10:	1801e526 	beq	r3,zero,1000a1a8 <___vfiprintf_internal_r+0x1144>
10009a14:	d9412317 	ldw	r5,1164(sp)
10009a18:	14c00017 	ldw	r19,0(r2)
10009a1c:	002b883a 	mov	r21,zero
10009a20:	29400104 	addi	r5,r5,4
10009a24:	d9412315 	stw	r5,1164(sp)
10009a28:	003f9e06 	br	100098a4 <__alt_data_end+0xf80098a4>
10009a2c:	9080080c 	andi	r2,r18,32
10009a30:	9811883a 	mov	r8,r19
10009a34:	103f701e 	bne	r2,zero,100097f8 <__alt_data_end+0xf80097f8>
10009a38:	9080040c 	andi	r2,r18,16
10009a3c:	1001ef26 	beq	r2,zero,1000a1fc <___vfiprintf_internal_r+0x1198>
10009a40:	d9012317 	ldw	r4,1164(sp)
10009a44:	002b883a 	mov	r21,zero
10009a48:	0005883a 	mov	r2,zero
10009a4c:	24c00017 	ldw	r19,0(r4)
10009a50:	21000104 	addi	r4,r4,4
10009a54:	d9012315 	stw	r4,1164(sp)
10009a58:	9807883a 	mov	r3,r19
10009a5c:	003f6e06 	br	10009818 <__alt_data_end+0xf8009818>
10009a60:	d8c12317 	ldw	r3,1164(sp)
10009a64:	9811883a 	mov	r8,r19
10009a68:	00800c04 	movi	r2,48
10009a6c:	1cc00017 	ldw	r19,0(r3)
10009a70:	01040074 	movhi	r4,4097
10009a74:	18c00104 	addi	r3,r3,4
10009a78:	d8811d05 	stb	r2,1140(sp)
10009a7c:	213de804 	addi	r4,r4,-2144
10009a80:	00801e04 	movi	r2,120
10009a84:	d8811d45 	stb	r2,1141(sp)
10009a88:	d8c12315 	stw	r3,1164(sp)
10009a8c:	002b883a 	mov	r21,zero
10009a90:	94800094 	ori	r18,r18,2
10009a94:	d9012715 	stw	r4,1180(sp)
10009a98:	00800084 	movi	r2,2
10009a9c:	9807883a 	mov	r3,r19
10009aa0:	003f5d06 	br	10009818 <__alt_data_end+0xf8009818>
10009aa4:	d8c12203 	ldbu	r3,1160(sp)
10009aa8:	9080080c 	andi	r2,r18,32
10009aac:	9811883a 	mov	r8,r19
10009ab0:	d8c11d85 	stb	r3,1142(sp)
10009ab4:	1001b126 	beq	r2,zero,1000a17c <___vfiprintf_internal_r+0x1118>
10009ab8:	d9012317 	ldw	r4,1164(sp)
10009abc:	d9412517 	ldw	r5,1172(sp)
10009ac0:	20800017 	ldw	r2,0(r4)
10009ac4:	2807d7fa 	srai	r3,r5,31
10009ac8:	21000104 	addi	r4,r4,4
10009acc:	d9012315 	stw	r4,1164(sp)
10009ad0:	11400015 	stw	r5,0(r2)
10009ad4:	10c00115 	stw	r3,4(r2)
10009ad8:	003d9a06 	br	10009144 <__alt_data_end+0xf8009144>
10009adc:	d8812207 	ldb	r2,1160(sp)
10009ae0:	1001c41e 	bne	r2,zero,1000a1f4 <___vfiprintf_internal_r+0x1190>
10009ae4:	00c00804 	movi	r3,32
10009ae8:	d8c12205 	stb	r3,1160(sp)
10009aec:	b9800007 	ldb	r6,0(r23)
10009af0:	003dbd06 	br	100091e8 <__alt_data_end+0xf80091e8>
10009af4:	00c00ac4 	movi	r3,43
10009af8:	d8c12205 	stb	r3,1160(sp)
10009afc:	b9800007 	ldb	r6,0(r23)
10009b00:	003db906 	br	100091e8 <__alt_data_end+0xf80091e8>
10009b04:	d8c12203 	ldbu	r3,1160(sp)
10009b08:	9080080c 	andi	r2,r18,32
10009b0c:	9811883a 	mov	r8,r19
10009b10:	d8c11d85 	stb	r3,1142(sp)
10009b14:	d8c12317 	ldw	r3,1164(sp)
10009b18:	103e7e1e 	bne	r2,zero,10009514 <__alt_data_end+0xf8009514>
10009b1c:	9080040c 	andi	r2,r18,16
10009b20:	1001a926 	beq	r2,zero,1000a1c8 <___vfiprintf_internal_r+0x1164>
10009b24:	1cc00017 	ldw	r19,0(r3)
10009b28:	d9412317 	ldw	r5,1164(sp)
10009b2c:	982bd7fa 	srai	r21,r19,31
10009b30:	29400104 	addi	r5,r5,4
10009b34:	d9412315 	stw	r5,1164(sp)
10009b38:	a805883a 	mov	r2,r21
10009b3c:	003e7b06 	br	1000952c <__alt_data_end+0xf800952c>
10009b40:	94800054 	ori	r18,r18,1
10009b44:	b9800007 	ldb	r6,0(r23)
10009b48:	003da706 	br	100091e8 <__alt_data_end+0xf80091e8>
10009b4c:	d8c12203 	ldbu	r3,1160(sp)
10009b50:	9811883a 	mov	r8,r19
10009b54:	d8c11d85 	stb	r3,1142(sp)
10009b58:	30005826 	beq	r6,zero,10009cbc <___vfiprintf_internal_r+0xc58>
10009b5c:	05400044 	movi	r21,1
10009b60:	d8c10004 	addi	r3,sp,1024
10009b64:	d9810005 	stb	r6,1024(sp)
10009b68:	d8011d85 	stb	zero,1142(sp)
10009b6c:	a829883a 	mov	r20,r21
10009b70:	d8c12215 	stw	r3,1160(sp)
10009b74:	003f1a06 	br	100097e0 <__alt_data_end+0xf80097e0>
10009b78:	d9012117 	ldw	r4,1156(sp)
10009b7c:	d9412017 	ldw	r5,1152(sp)
10009b80:	d9811a04 	addi	r6,sp,1128
10009b84:	d9c12a15 	stw	r7,1192(sp)
10009b88:	db012b15 	stw	r12,1196(sp)
10009b8c:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009b90:	d9c12a17 	ldw	r7,1192(sp)
10009b94:	db012b17 	ldw	r12,1196(sp)
10009b98:	10004e1e 	bne	r2,zero,10009cd4 <___vfiprintf_internal_r+0xc70>
10009b9c:	d9011b17 	ldw	r4,1132(sp)
10009ba0:	d8c11c17 	ldw	r3,1136(sp)
10009ba4:	d811883a 	mov	r8,sp
10009ba8:	21400044 	addi	r5,r4,1
10009bac:	003e9d06 	br	10009624 <__alt_data_end+0xf8009624>
10009bb0:	d9411b17 	ldw	r5,1132(sp)
10009bb4:	d8c11c17 	ldw	r3,1136(sp)
10009bb8:	28800044 	addi	r2,r5,1
10009bbc:	d9011d87 	ldb	r4,1142(sp)
10009bc0:	203eb626 	beq	r4,zero,1000969c <__alt_data_end+0xf800969c>
10009bc4:	01000044 	movi	r4,1
10009bc8:	d9411d84 	addi	r5,sp,1142
10009bcc:	1907883a 	add	r3,r3,r4
10009bd0:	41400015 	stw	r5,0(r8)
10009bd4:	41000115 	stw	r4,4(r8)
10009bd8:	d8c11c15 	stw	r3,1136(sp)
10009bdc:	d8811b15 	stw	r2,1132(sp)
10009be0:	014001c4 	movi	r5,7
10009be4:	2880ce16 	blt	r5,r2,10009f20 <___vfiprintf_internal_r+0xebc>
10009be8:	100b883a 	mov	r5,r2
10009bec:	42000204 	addi	r8,r8,8
10009bf0:	10800044 	addi	r2,r2,1
10009bf4:	003ea906 	br	1000969c <__alt_data_end+0xf800969c>
10009bf8:	d9012117 	ldw	r4,1156(sp)
10009bfc:	d9412017 	ldw	r5,1152(sp)
10009c00:	d9811a04 	addi	r6,sp,1128
10009c04:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009c08:	1000321e 	bne	r2,zero,10009cd4 <___vfiprintf_internal_r+0xc70>
10009c0c:	d9411b17 	ldw	r5,1132(sp)
10009c10:	d8c11c17 	ldw	r3,1136(sp)
10009c14:	d811883a 	mov	r8,sp
10009c18:	28800044 	addi	r2,r5,1
10009c1c:	003eba06 	br	10009708 <__alt_data_end+0xf8009708>
10009c20:	10803fcc 	andi	r2,r2,255
10009c24:	00c00044 	movi	r3,1
10009c28:	10fe4d1e 	bne	r2,r3,10009560 <__alt_data_end+0xf8009560>
10009c2c:	a800021e 	bne	r21,zero,10009c38 <___vfiprintf_internal_r+0xbd4>
10009c30:	00800244 	movi	r2,9
10009c34:	14c01b2e 	bgeu	r2,r19,10009ca4 <___vfiprintf_internal_r+0xc40>
10009c38:	dc012215 	stw	r16,1160(sp)
10009c3c:	dd010a04 	addi	r20,sp,1064
10009c40:	a821883a 	mov	r16,r21
10009c44:	402b883a 	mov	r21,r8
10009c48:	9809883a 	mov	r4,r19
10009c4c:	800b883a 	mov	r5,r16
10009c50:	01800284 	movi	r6,10
10009c54:	000f883a 	mov	r7,zero
10009c58:	000b4380 	call	1000b438 <__umoddi3>
10009c5c:	10800c04 	addi	r2,r2,48
10009c60:	a53fffc4 	addi	r20,r20,-1
10009c64:	9809883a 	mov	r4,r19
10009c68:	800b883a 	mov	r5,r16
10009c6c:	01800284 	movi	r6,10
10009c70:	000f883a 	mov	r7,zero
10009c74:	a0800005 	stb	r2,0(r20)
10009c78:	000adf80 	call	1000adf8 <__udivdi3>
10009c7c:	1027883a 	mov	r19,r2
10009c80:	10c4b03a 	or	r2,r2,r3
10009c84:	1821883a 	mov	r16,r3
10009c88:	103fef1e 	bne	r2,zero,10009c48 <__alt_data_end+0xf8009c48>
10009c8c:	d9011e17 	ldw	r4,1144(sp)
10009c90:	dc012217 	ldw	r16,1160(sp)
10009c94:	a811883a 	mov	r8,r21
10009c98:	dd012215 	stw	r20,1160(sp)
10009c9c:	2529c83a 	sub	r20,r4,r20
10009ca0:	003e4106 	br	100095a8 <__alt_data_end+0xf80095a8>
10009ca4:	9cc00c04 	addi	r19,r19,48
10009ca8:	d8c109c4 	addi	r3,sp,1063
10009cac:	dcc109c5 	stb	r19,1063(sp)
10009cb0:	dd012817 	ldw	r20,1184(sp)
10009cb4:	d8c12215 	stw	r3,1160(sp)
10009cb8:	003e3b06 	br	100095a8 <__alt_data_end+0xf80095a8>
10009cbc:	d8811c17 	ldw	r2,1136(sp)
10009cc0:	10000426 	beq	r2,zero,10009cd4 <___vfiprintf_internal_r+0xc70>
10009cc4:	d9012117 	ldw	r4,1156(sp)
10009cc8:	d9412017 	ldw	r5,1152(sp)
10009ccc:	d9811a04 	addi	r6,sp,1128
10009cd0:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009cd4:	d9412017 	ldw	r5,1152(sp)
10009cd8:	2880030b 	ldhu	r2,12(r5)
10009cdc:	1080100c 	andi	r2,r2,64
10009ce0:	103ddc1e 	bne	r2,zero,10009454 <__alt_data_end+0xf8009454>
10009ce4:	d8812517 	ldw	r2,1172(sp)
10009ce8:	003ddb06 	br	10009458 <__alt_data_end+0xf8009458>
10009cec:	1801061e 	bne	r3,zero,1000a108 <___vfiprintf_internal_r+0x10a4>
10009cf0:	d8c12217 	ldw	r3,1160(sp)
10009cf4:	00800044 	movi	r2,1
10009cf8:	dd000115 	stw	r20,4(sp)
10009cfc:	d8c00015 	stw	r3,0(sp)
10009d00:	dd011c15 	stw	r20,1136(sp)
10009d04:	d8811b15 	stw	r2,1132(sp)
10009d08:	a007883a 	mov	r3,r20
10009d0c:	d811883a 	mov	r8,sp
10009d10:	42000204 	addi	r8,r8,8
10009d14:	9480010c 	andi	r18,r18,4
10009d18:	90003426 	beq	r18,zero,10009dec <___vfiprintf_internal_r+0xd88>
10009d1c:	d9412417 	ldw	r5,1168(sp)
10009d20:	2d65c83a 	sub	r18,r5,r21
10009d24:	0480310e 	bge	zero,r18,10009dec <___vfiprintf_internal_r+0xd88>
10009d28:	04000404 	movi	r16,16
10009d2c:	8481ad0e 	bge	r16,r18,1000a3e4 <___vfiprintf_internal_r+0x1380>
10009d30:	01440074 	movhi	r5,4097
10009d34:	297e4c04 	addi	r5,r5,-1744
10009d38:	d9011b17 	ldw	r4,1132(sp)
10009d3c:	d9412615 	stw	r5,1176(sp)
10009d40:	04c001c4 	movi	r19,7
10009d44:	dd012117 	ldw	r20,1156(sp)
10009d48:	dd812017 	ldw	r22,1152(sp)
10009d4c:	00000506 	br	10009d64 <___vfiprintf_internal_r+0xd00>
10009d50:	21400084 	addi	r5,r4,2
10009d54:	42000204 	addi	r8,r8,8
10009d58:	1009883a 	mov	r4,r2
10009d5c:	94bffc04 	addi	r18,r18,-16
10009d60:	84800d0e 	bge	r16,r18,10009d98 <___vfiprintf_internal_r+0xd34>
10009d64:	18c00404 	addi	r3,r3,16
10009d68:	20800044 	addi	r2,r4,1
10009d6c:	47000015 	stw	fp,0(r8)
10009d70:	44000115 	stw	r16,4(r8)
10009d74:	d8c11c15 	stw	r3,1136(sp)
10009d78:	d8811b15 	stw	r2,1132(sp)
10009d7c:	98bff40e 	bge	r19,r2,10009d50 <__alt_data_end+0xf8009d50>
10009d80:	1800291e 	bne	r3,zero,10009e28 <___vfiprintf_internal_r+0xdc4>
10009d84:	94bffc04 	addi	r18,r18,-16
10009d88:	0009883a 	mov	r4,zero
10009d8c:	01400044 	movi	r5,1
10009d90:	d811883a 	mov	r8,sp
10009d94:	84bff316 	blt	r16,r18,10009d64 <__alt_data_end+0xf8009d64>
10009d98:	d8812617 	ldw	r2,1176(sp)
10009d9c:	1c87883a 	add	r3,r3,r18
10009da0:	44800115 	stw	r18,4(r8)
10009da4:	40800015 	stw	r2,0(r8)
10009da8:	d8c11c15 	stw	r3,1136(sp)
10009dac:	d9411b15 	stw	r5,1132(sp)
10009db0:	008001c4 	movi	r2,7
10009db4:	11400d0e 	bge	r2,r5,10009dec <___vfiprintf_internal_r+0xd88>
10009db8:	1800061e 	bne	r3,zero,10009dd4 <___vfiprintf_internal_r+0xd70>
10009dbc:	d8c12417 	ldw	r3,1168(sp)
10009dc0:	a8c12e16 	blt	r21,r3,1000a27c <___vfiprintf_internal_r+0x1218>
10009dc4:	d9012517 	ldw	r4,1172(sp)
10009dc8:	2549883a 	add	r4,r4,r21
10009dcc:	d9012515 	stw	r4,1172(sp)
10009dd0:	00001206 	br	10009e1c <___vfiprintf_internal_r+0xdb8>
10009dd4:	d9012117 	ldw	r4,1156(sp)
10009dd8:	d9412017 	ldw	r5,1152(sp)
10009ddc:	d9811a04 	addi	r6,sp,1128
10009de0:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009de4:	103fbb1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
10009de8:	d8c11c17 	ldw	r3,1136(sp)
10009dec:	d8812417 	ldw	r2,1168(sp)
10009df0:	a880010e 	bge	r21,r2,10009df8 <___vfiprintf_internal_r+0xd94>
10009df4:	102b883a 	mov	r21,r2
10009df8:	d9012517 	ldw	r4,1172(sp)
10009dfc:	2549883a 	add	r4,r4,r21
10009e00:	d9012515 	stw	r4,1172(sp)
10009e04:	18000526 	beq	r3,zero,10009e1c <___vfiprintf_internal_r+0xdb8>
10009e08:	d9012117 	ldw	r4,1156(sp)
10009e0c:	d9412017 	ldw	r5,1152(sp)
10009e10:	d9811a04 	addi	r6,sp,1128
10009e14:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009e18:	103fae1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
10009e1c:	d8011b15 	stw	zero,1132(sp)
10009e20:	d811883a 	mov	r8,sp
10009e24:	003cc706 	br	10009144 <__alt_data_end+0xf8009144>
10009e28:	a009883a 	mov	r4,r20
10009e2c:	b00b883a 	mov	r5,r22
10009e30:	d9811a04 	addi	r6,sp,1128
10009e34:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009e38:	103fa61e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
10009e3c:	d9011b17 	ldw	r4,1132(sp)
10009e40:	d8c11c17 	ldw	r3,1136(sp)
10009e44:	d811883a 	mov	r8,sp
10009e48:	21400044 	addi	r5,r4,1
10009e4c:	003fc306 	br	10009d5c <__alt_data_end+0xf8009d5c>
10009e50:	d9012417 	ldw	r4,1168(sp)
10009e54:	256dc83a 	sub	r22,r4,r21
10009e58:	05be1f0e 	bge	zero,r22,100096d8 <__alt_data_end+0xf80096d8>
10009e5c:	04c00404 	movi	r19,16
10009e60:	9d81720e 	bge	r19,r22,1000a42c <___vfiprintf_internal_r+0x13c8>
10009e64:	00840074 	movhi	r2,4097
10009e68:	10be4804 	addi	r2,r2,-1760
10009e6c:	d8812615 	stw	r2,1176(sp)
10009e70:	028001c4 	movi	r10,7
10009e74:	00000506 	br	10009e8c <___vfiprintf_internal_r+0xe28>
10009e78:	29000084 	addi	r4,r5,2
10009e7c:	42000204 	addi	r8,r8,8
10009e80:	100b883a 	mov	r5,r2
10009e84:	b5bffc04 	addi	r22,r22,-16
10009e88:	9d800d0e 	bge	r19,r22,10009ec0 <___vfiprintf_internal_r+0xe5c>
10009e8c:	18c00404 	addi	r3,r3,16
10009e90:	28800044 	addi	r2,r5,1
10009e94:	44400015 	stw	r17,0(r8)
10009e98:	44c00115 	stw	r19,4(r8)
10009e9c:	d8c11c15 	stw	r3,1136(sp)
10009ea0:	d8811b15 	stw	r2,1132(sp)
10009ea4:	50bff40e 	bge	r10,r2,10009e78 <__alt_data_end+0xf8009e78>
10009ea8:	1800111e 	bne	r3,zero,10009ef0 <___vfiprintf_internal_r+0xe8c>
10009eac:	b5bffc04 	addi	r22,r22,-16
10009eb0:	000b883a 	mov	r5,zero
10009eb4:	01000044 	movi	r4,1
10009eb8:	d811883a 	mov	r8,sp
10009ebc:	9dbff316 	blt	r19,r22,10009e8c <__alt_data_end+0xf8009e8c>
10009ec0:	d9412617 	ldw	r5,1176(sp)
10009ec4:	1d87883a 	add	r3,r3,r22
10009ec8:	45800115 	stw	r22,4(r8)
10009ecc:	41400015 	stw	r5,0(r8)
10009ed0:	d8c11c15 	stw	r3,1136(sp)
10009ed4:	d9011b15 	stw	r4,1132(sp)
10009ed8:	008001c4 	movi	r2,7
10009edc:	11008516 	blt	r2,r4,1000a0f4 <___vfiprintf_internal_r+0x1090>
10009ee0:	42000204 	addi	r8,r8,8
10009ee4:	20800044 	addi	r2,r4,1
10009ee8:	200b883a 	mov	r5,r4
10009eec:	003dfa06 	br	100096d8 <__alt_data_end+0xf80096d8>
10009ef0:	d9012117 	ldw	r4,1156(sp)
10009ef4:	d9412017 	ldw	r5,1152(sp)
10009ef8:	d9811a04 	addi	r6,sp,1128
10009efc:	da812a15 	stw	r10,1192(sp)
10009f00:	0008f500 	call	10008f50 <__sprint_r.part.0>
10009f04:	da812a17 	ldw	r10,1192(sp)
10009f08:	103f721e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
10009f0c:	d9411b17 	ldw	r5,1132(sp)
10009f10:	d8c11c17 	ldw	r3,1136(sp)
10009f14:	d811883a 	mov	r8,sp
10009f18:	29000044 	addi	r4,r5,1
10009f1c:	003fd906 	br	10009e84 <__alt_data_end+0xf8009e84>
10009f20:	1800681e 	bne	r3,zero,1000a0c4 <___vfiprintf_internal_r+0x1060>
10009f24:	50004d26 	beq	r10,zero,1000a05c <___vfiprintf_internal_r+0xff8>
10009f28:	d8811d04 	addi	r2,sp,1140
10009f2c:	00c00084 	movi	r3,2
10009f30:	d8800015 	stw	r2,0(sp)
10009f34:	d8c00115 	stw	r3,4(sp)
10009f38:	2005883a 	mov	r2,r4
10009f3c:	d811883a 	mov	r8,sp
10009f40:	003de006 	br	100096c4 <__alt_data_end+0xf80096c4>
10009f44:	1800551e 	bne	r3,zero,1000a09c <___vfiprintf_internal_r+0x1038>
10009f48:	000b883a 	mov	r5,zero
10009f4c:	00800044 	movi	r2,1
10009f50:	d811883a 	mov	r8,sp
10009f54:	003dde06 	br	100096d0 <__alt_data_end+0xf80096d0>
10009f58:	10803fcc 	andi	r2,r2,255
10009f5c:	1000191e 	bne	r2,zero,10009fc4 <___vfiprintf_internal_r+0xf60>
10009f60:	9080004c 	andi	r2,r18,1
10009f64:	10001726 	beq	r2,zero,10009fc4 <___vfiprintf_internal_r+0xf60>
10009f68:	00800c04 	movi	r2,48
10009f6c:	d8c109c4 	addi	r3,sp,1063
10009f70:	d88109c5 	stb	r2,1063(sp)
10009f74:	dd012817 	ldw	r20,1184(sp)
10009f78:	d8c12215 	stw	r3,1160(sp)
10009f7c:	003d8a06 	br	100095a8 <__alt_data_end+0xf80095a8>
10009f80:	d9012717 	ldw	r4,1180(sp)
10009f84:	dd010a04 	addi	r20,sp,1064
10009f88:	988003cc 	andi	r2,r19,15
10009f8c:	a806973a 	slli	r3,r21,28
10009f90:	2085883a 	add	r2,r4,r2
10009f94:	9826d13a 	srli	r19,r19,4
10009f98:	10800003 	ldbu	r2,0(r2)
10009f9c:	a82ad13a 	srli	r21,r21,4
10009fa0:	a53fffc4 	addi	r20,r20,-1
10009fa4:	1ce6b03a 	or	r19,r3,r19
10009fa8:	a0800005 	stb	r2,0(r20)
10009fac:	9d44b03a 	or	r2,r19,r21
10009fb0:	103ff51e 	bne	r2,zero,10009f88 <__alt_data_end+0xf8009f88>
10009fb4:	d9411e17 	ldw	r5,1144(sp)
10009fb8:	dd012215 	stw	r20,1160(sp)
10009fbc:	2d29c83a 	sub	r20,r5,r20
10009fc0:	003d7906 	br	100095a8 <__alt_data_end+0xf80095a8>
10009fc4:	d8c10a04 	addi	r3,sp,1064
10009fc8:	d8c12215 	stw	r3,1160(sp)
10009fcc:	003d7606 	br	100095a8 <__alt_data_end+0xf80095a8>
10009fd0:	18009e1e 	bne	r3,zero,1000a24c <___vfiprintf_internal_r+0x11e8>
10009fd4:	d8811d87 	ldb	r2,1142(sp)
10009fd8:	10005f26 	beq	r2,zero,1000a158 <___vfiprintf_internal_r+0x10f4>
10009fdc:	00c00044 	movi	r3,1
10009fe0:	d9011d84 	addi	r4,sp,1142
10009fe4:	1805883a 	mov	r2,r3
10009fe8:	d9000015 	stw	r4,0(sp)
10009fec:	d8c00115 	stw	r3,4(sp)
10009ff0:	d811883a 	mov	r8,sp
10009ff4:	003efc06 	br	10009be8 <__alt_data_end+0xf8009be8>
10009ff8:	d9412417 	ldw	r5,1168(sp)
10009ffc:	d811883a 	mov	r8,sp
1000a000:	2d65c83a 	sub	r18,r5,r21
1000a004:	04bf4816 	blt	zero,r18,10009d28 <__alt_data_end+0xf8009d28>
1000a008:	003f6c06 	br	10009dbc <__alt_data_end+0xf8009dbc>
1000a00c:	b829883a 	mov	r20,r23
1000a010:	003c6906 	br	100091b8 <__alt_data_end+0xf80091b8>
1000a014:	d9012117 	ldw	r4,1156(sp)
1000a018:	d9412017 	ldw	r5,1152(sp)
1000a01c:	d9811a04 	addi	r6,sp,1128
1000a020:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a024:	103f2b1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a028:	d8c11c17 	ldw	r3,1136(sp)
1000a02c:	d811883a 	mov	r8,sp
1000a030:	003f3806 	br	10009d14 <__alt_data_end+0xf8009d14>
1000a034:	00800084 	movi	r2,2
1000a038:	9d46b03a 	or	r3,r19,r21
1000a03c:	003df606 	br	10009818 <__alt_data_end+0xf8009818>
1000a040:	d9012117 	ldw	r4,1156(sp)
1000a044:	d9412017 	ldw	r5,1152(sp)
1000a048:	d9811a04 	addi	r6,sp,1128
1000a04c:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a050:	103f201e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a054:	d811883a 	mov	r8,sp
1000a058:	003cc606 	br	10009374 <__alt_data_end+0xf8009374>
1000a05c:	000b883a 	mov	r5,zero
1000a060:	2005883a 	mov	r2,r4
1000a064:	d811883a 	mov	r8,sp
1000a068:	003d9906 	br	100096d0 <__alt_data_end+0xf80096d0>
1000a06c:	10803fcc 	andi	r2,r2,255
1000a070:	1080201c 	xori	r2,r2,128
1000a074:	10bfe004 	addi	r2,r2,-128
1000a078:	01000c04 	movi	r4,48
1000a07c:	1100b226 	beq	r2,r4,1000a348 <___vfiprintf_internal_r+0x12e4>
1000a080:	d9412217 	ldw	r5,1160(sp)
1000a084:	d8811e17 	ldw	r2,1144(sp)
1000a088:	193fffc5 	stb	r4,-1(r3)
1000a08c:	297fffc4 	addi	r5,r5,-1
1000a090:	d9412215 	stw	r5,1160(sp)
1000a094:	1169c83a 	sub	r20,r2,r5
1000a098:	003d4306 	br	100095a8 <__alt_data_end+0xf80095a8>
1000a09c:	d9012117 	ldw	r4,1156(sp)
1000a0a0:	d9412017 	ldw	r5,1152(sp)
1000a0a4:	d9811a04 	addi	r6,sp,1128
1000a0a8:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a0ac:	103f091e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a0b0:	d9411b17 	ldw	r5,1132(sp)
1000a0b4:	d8c11c17 	ldw	r3,1136(sp)
1000a0b8:	d811883a 	mov	r8,sp
1000a0bc:	28800044 	addi	r2,r5,1
1000a0c0:	003d8306 	br	100096d0 <__alt_data_end+0xf80096d0>
1000a0c4:	d9012117 	ldw	r4,1156(sp)
1000a0c8:	d9412017 	ldw	r5,1152(sp)
1000a0cc:	d9811a04 	addi	r6,sp,1128
1000a0d0:	da812a15 	stw	r10,1192(sp)
1000a0d4:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a0d8:	da812a17 	ldw	r10,1192(sp)
1000a0dc:	103efd1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a0e0:	d9411b17 	ldw	r5,1132(sp)
1000a0e4:	d8c11c17 	ldw	r3,1136(sp)
1000a0e8:	d811883a 	mov	r8,sp
1000a0ec:	28800044 	addi	r2,r5,1
1000a0f0:	003d6a06 	br	1000969c <__alt_data_end+0xf800969c>
1000a0f4:	1800a01e 	bne	r3,zero,1000a378 <___vfiprintf_internal_r+0x1314>
1000a0f8:	000b883a 	mov	r5,zero
1000a0fc:	00800044 	movi	r2,1
1000a100:	d811883a 	mov	r8,sp
1000a104:	003d7406 	br	100096d8 <__alt_data_end+0xf80096d8>
1000a108:	d9012117 	ldw	r4,1156(sp)
1000a10c:	d9412017 	ldw	r5,1152(sp)
1000a110:	d9811a04 	addi	r6,sp,1128
1000a114:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a118:	103eee1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a11c:	d8811b17 	ldw	r2,1132(sp)
1000a120:	d8c11c17 	ldw	r3,1136(sp)
1000a124:	d811883a 	mov	r8,sp
1000a128:	10800044 	addi	r2,r2,1
1000a12c:	003d8f06 	br	1000976c <__alt_data_end+0xf800976c>
1000a130:	04e7c83a 	sub	r19,zero,r19
1000a134:	9804c03a 	cmpne	r2,r19,zero
1000a138:	056bc83a 	sub	r21,zero,r21
1000a13c:	a8abc83a 	sub	r21,r21,r2
1000a140:	05800b44 	movi	r22,45
1000a144:	dd811d85 	stb	r22,1142(sp)
1000a148:	8029883a 	mov	r20,r16
1000a14c:	00800044 	movi	r2,1
1000a150:	9d46b03a 	or	r3,r19,r21
1000a154:	003cfa06 	br	10009540 <__alt_data_end+0xf8009540>
1000a158:	000b883a 	mov	r5,zero
1000a15c:	00800044 	movi	r2,1
1000a160:	d811883a 	mov	r8,sp
1000a164:	503d5a26 	beq	r10,zero,100096d0 <__alt_data_end+0xf80096d0>
1000a168:	00c00084 	movi	r3,2
1000a16c:	d9011d04 	addi	r4,sp,1140
1000a170:	d9000015 	stw	r4,0(sp)
1000a174:	d8c00115 	stw	r3,4(sp)
1000a178:	003d5206 	br	100096c4 <__alt_data_end+0xf80096c4>
1000a17c:	9080040c 	andi	r2,r18,16
1000a180:	1000421e 	bne	r2,zero,1000a28c <___vfiprintf_internal_r+0x1228>
1000a184:	9480100c 	andi	r18,r18,64
1000a188:	90009c26 	beq	r18,zero,1000a3fc <___vfiprintf_internal_r+0x1398>
1000a18c:	d9412317 	ldw	r5,1164(sp)
1000a190:	d8c12517 	ldw	r3,1172(sp)
1000a194:	28800017 	ldw	r2,0(r5)
1000a198:	29400104 	addi	r5,r5,4
1000a19c:	d9412315 	stw	r5,1164(sp)
1000a1a0:	10c0000d 	sth	r3,0(r2)
1000a1a4:	003be706 	br	10009144 <__alt_data_end+0xf8009144>
1000a1a8:	90c0100c 	andi	r3,r18,64
1000a1ac:	18003e26 	beq	r3,zero,1000a2a8 <___vfiprintf_internal_r+0x1244>
1000a1b0:	d8c12317 	ldw	r3,1164(sp)
1000a1b4:	14c0000b 	ldhu	r19,0(r2)
1000a1b8:	002b883a 	mov	r21,zero
1000a1bc:	18c00104 	addi	r3,r3,4
1000a1c0:	d8c12315 	stw	r3,1164(sp)
1000a1c4:	003db706 	br	100098a4 <__alt_data_end+0xf80098a4>
1000a1c8:	9080100c 	andi	r2,r18,64
1000a1cc:	10004c26 	beq	r2,zero,1000a300 <___vfiprintf_internal_r+0x129c>
1000a1d0:	1cc0000f 	ldh	r19,0(r3)
1000a1d4:	d8812317 	ldw	r2,1164(sp)
1000a1d8:	982bd7fa 	srai	r21,r19,31
1000a1dc:	10800104 	addi	r2,r2,4
1000a1e0:	d8812315 	stw	r2,1164(sp)
1000a1e4:	a805883a 	mov	r2,r21
1000a1e8:	003cd006 	br	1000952c <__alt_data_end+0xf800952c>
1000a1ec:	00800084 	movi	r2,2
1000a1f0:	003d8906 	br	10009818 <__alt_data_end+0xf8009818>
1000a1f4:	b9800007 	ldb	r6,0(r23)
1000a1f8:	003bfb06 	br	100091e8 <__alt_data_end+0xf80091e8>
1000a1fc:	9080100c 	andi	r2,r18,64
1000a200:	10003726 	beq	r2,zero,1000a2e0 <___vfiprintf_internal_r+0x127c>
1000a204:	d9412317 	ldw	r5,1164(sp)
1000a208:	002b883a 	mov	r21,zero
1000a20c:	0005883a 	mov	r2,zero
1000a210:	2cc0000b 	ldhu	r19,0(r5)
1000a214:	29400104 	addi	r5,r5,4
1000a218:	d9412315 	stw	r5,1164(sp)
1000a21c:	9807883a 	mov	r3,r19
1000a220:	003d7d06 	br	10009818 <__alt_data_end+0xf8009818>
1000a224:	9080100c 	andi	r2,r18,64
1000a228:	10002526 	beq	r2,zero,1000a2c0 <___vfiprintf_internal_r+0x125c>
1000a22c:	d8812317 	ldw	r2,1164(sp)
1000a230:	002b883a 	mov	r21,zero
1000a234:	14c0000b 	ldhu	r19,0(r2)
1000a238:	10800104 	addi	r2,r2,4
1000a23c:	d8812315 	stw	r2,1164(sp)
1000a240:	9807883a 	mov	r3,r19
1000a244:	00800044 	movi	r2,1
1000a248:	003d7306 	br	10009818 <__alt_data_end+0xf8009818>
1000a24c:	d9012117 	ldw	r4,1156(sp)
1000a250:	d9412017 	ldw	r5,1152(sp)
1000a254:	d9811a04 	addi	r6,sp,1128
1000a258:	da812a15 	stw	r10,1192(sp)
1000a25c:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a260:	da812a17 	ldw	r10,1192(sp)
1000a264:	103e9b1e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a268:	d9411b17 	ldw	r5,1132(sp)
1000a26c:	d8c11c17 	ldw	r3,1136(sp)
1000a270:	d811883a 	mov	r8,sp
1000a274:	28800044 	addi	r2,r5,1
1000a278:	003e5006 	br	10009bbc <__alt_data_end+0xf8009bbc>
1000a27c:	182b883a 	mov	r21,r3
1000a280:	003ed006 	br	10009dc4 <__alt_data_end+0xf8009dc4>
1000a284:	8029883a 	mov	r20,r16
1000a288:	003dc606 	br	100099a4 <__alt_data_end+0xf80099a4>
1000a28c:	d8c12317 	ldw	r3,1164(sp)
1000a290:	d9012517 	ldw	r4,1172(sp)
1000a294:	18800017 	ldw	r2,0(r3)
1000a298:	18c00104 	addi	r3,r3,4
1000a29c:	d8c12315 	stw	r3,1164(sp)
1000a2a0:	11000015 	stw	r4,0(r2)
1000a2a4:	003ba706 	br	10009144 <__alt_data_end+0xf8009144>
1000a2a8:	d9012317 	ldw	r4,1164(sp)
1000a2ac:	14c00017 	ldw	r19,0(r2)
1000a2b0:	002b883a 	mov	r21,zero
1000a2b4:	21000104 	addi	r4,r4,4
1000a2b8:	d9012315 	stw	r4,1164(sp)
1000a2bc:	003d7906 	br	100098a4 <__alt_data_end+0xf80098a4>
1000a2c0:	d8c12317 	ldw	r3,1164(sp)
1000a2c4:	002b883a 	mov	r21,zero
1000a2c8:	00800044 	movi	r2,1
1000a2cc:	1cc00017 	ldw	r19,0(r3)
1000a2d0:	18c00104 	addi	r3,r3,4
1000a2d4:	d8c12315 	stw	r3,1164(sp)
1000a2d8:	9807883a 	mov	r3,r19
1000a2dc:	003d4e06 	br	10009818 <__alt_data_end+0xf8009818>
1000a2e0:	d8812317 	ldw	r2,1164(sp)
1000a2e4:	002b883a 	mov	r21,zero
1000a2e8:	14c00017 	ldw	r19,0(r2)
1000a2ec:	10800104 	addi	r2,r2,4
1000a2f0:	d8812315 	stw	r2,1164(sp)
1000a2f4:	9807883a 	mov	r3,r19
1000a2f8:	0005883a 	mov	r2,zero
1000a2fc:	003d4606 	br	10009818 <__alt_data_end+0xf8009818>
1000a300:	1cc00017 	ldw	r19,0(r3)
1000a304:	d8c12317 	ldw	r3,1164(sp)
1000a308:	982bd7fa 	srai	r21,r19,31
1000a30c:	18c00104 	addi	r3,r3,4
1000a310:	d8c12315 	stw	r3,1164(sp)
1000a314:	a805883a 	mov	r2,r21
1000a318:	003c8406 	br	1000952c <__alt_data_end+0xf800952c>
1000a31c:	01040074 	movhi	r4,4097
1000a320:	213e4804 	addi	r4,r4,-1760
1000a324:	d9012615 	stw	r4,1176(sp)
1000a328:	003d0606 	br	10009744 <__alt_data_end+0xf8009744>
1000a32c:	b9800043 	ldbu	r6,1(r23)
1000a330:	94800814 	ori	r18,r18,32
1000a334:	bdc00044 	addi	r23,r23,1
1000a338:	31803fcc 	andi	r6,r6,255
1000a33c:	3180201c 	xori	r6,r6,128
1000a340:	31bfe004 	addi	r6,r6,-128
1000a344:	003ba806 	br	100091e8 <__alt_data_end+0xf80091e8>
1000a348:	d8811e17 	ldw	r2,1144(sp)
1000a34c:	d8c12217 	ldw	r3,1160(sp)
1000a350:	10e9c83a 	sub	r20,r2,r3
1000a354:	003c9406 	br	100095a8 <__alt_data_end+0xf80095a8>
1000a358:	da012a15 	stw	r8,1192(sp)
1000a35c:	0001b6c0 	call	10001b6c <strlen>
1000a360:	1029883a 	mov	r20,r2
1000a364:	dd811d83 	ldbu	r22,1142(sp)
1000a368:	dcc12315 	stw	r19,1164(sp)
1000a36c:	0021883a 	mov	r16,zero
1000a370:	da012a17 	ldw	r8,1192(sp)
1000a374:	003c8c06 	br	100095a8 <__alt_data_end+0xf80095a8>
1000a378:	d9012117 	ldw	r4,1156(sp)
1000a37c:	d9412017 	ldw	r5,1152(sp)
1000a380:	d9811a04 	addi	r6,sp,1128
1000a384:	0008f500 	call	10008f50 <__sprint_r.part.0>
1000a388:	103e521e 	bne	r2,zero,10009cd4 <__alt_data_end+0xf8009cd4>
1000a38c:	d9411b17 	ldw	r5,1132(sp)
1000a390:	d8c11c17 	ldw	r3,1136(sp)
1000a394:	d811883a 	mov	r8,sp
1000a398:	28800044 	addi	r2,r5,1
1000a39c:	003cce06 	br	100096d8 <__alt_data_end+0xf80096d8>
1000a3a0:	01440074 	movhi	r5,4097
1000a3a4:	297e4c04 	addi	r5,r5,-1744
1000a3a8:	d9412615 	stw	r5,1176(sp)
1000a3ac:	d9411b17 	ldw	r5,1132(sp)
1000a3b0:	29400044 	addi	r5,r5,1
1000a3b4:	003cad06 	br	1000966c <__alt_data_end+0xf800966c>
1000a3b8:	00800184 	movi	r2,6
1000a3bc:	1400012e 	bgeu	r2,r16,1000a3c4 <___vfiprintf_internal_r+0x1360>
1000a3c0:	1021883a 	mov	r16,r2
1000a3c4:	8029883a 	mov	r20,r16
1000a3c8:	802b883a 	mov	r21,r16
1000a3cc:	80001c16 	blt	r16,zero,1000a440 <___vfiprintf_internal_r+0x13dc>
1000a3d0:	00c40074 	movhi	r3,4097
1000a3d4:	18fded04 	addi	r3,r3,-2124
1000a3d8:	dcc12315 	stw	r19,1164(sp)
1000a3dc:	d8c12215 	stw	r3,1160(sp)
1000a3e0:	003cff06 	br	100097e0 <__alt_data_end+0xf80097e0>
1000a3e4:	d9411b17 	ldw	r5,1132(sp)
1000a3e8:	00840074 	movhi	r2,4097
1000a3ec:	10be4c04 	addi	r2,r2,-1744
1000a3f0:	d8812615 	stw	r2,1176(sp)
1000a3f4:	29400044 	addi	r5,r5,1
1000a3f8:	003e6706 	br	10009d98 <__alt_data_end+0xf8009d98>
1000a3fc:	d9012317 	ldw	r4,1164(sp)
1000a400:	d9412517 	ldw	r5,1172(sp)
1000a404:	20800017 	ldw	r2,0(r4)
1000a408:	21000104 	addi	r4,r4,4
1000a40c:	d9012315 	stw	r4,1164(sp)
1000a410:	11400015 	stw	r5,0(r2)
1000a414:	003b4b06 	br	10009144 <__alt_data_end+0xf8009144>
1000a418:	8029883a 	mov	r20,r16
1000a41c:	dd811d83 	ldbu	r22,1142(sp)
1000a420:	dcc12315 	stw	r19,1164(sp)
1000a424:	0021883a 	mov	r16,zero
1000a428:	003c5f06 	br	100095a8 <__alt_data_end+0xf80095a8>
1000a42c:	01040074 	movhi	r4,4097
1000a430:	213e4804 	addi	r4,r4,-1760
1000a434:	d9012615 	stw	r4,1176(sp)
1000a438:	1009883a 	mov	r4,r2
1000a43c:	003ea006 	br	10009ec0 <__alt_data_end+0xf8009ec0>
1000a440:	002b883a 	mov	r21,zero
1000a444:	003fe206 	br	1000a3d0 <__alt_data_end+0xf800a3d0>
1000a448:	d9412317 	ldw	r5,1164(sp)
1000a44c:	b807883a 	mov	r3,r23
1000a450:	102f883a 	mov	r23,r2
1000a454:	2c000017 	ldw	r16,0(r5)
1000a458:	29000104 	addi	r4,r5,4
1000a45c:	d9012315 	stw	r4,1164(sp)
1000a460:	80000416 	blt	r16,zero,1000a474 <___vfiprintf_internal_r+0x1410>
1000a464:	19800047 	ldb	r6,1(r3)
1000a468:	003b5f06 	br	100091e8 <__alt_data_end+0xf80091e8>
1000a46c:	043fffc4 	movi	r16,-1
1000a470:	003bef06 	br	10009430 <__alt_data_end+0xf8009430>
1000a474:	043fffc4 	movi	r16,-1
1000a478:	19800047 	ldb	r6,1(r3)
1000a47c:	003b5a06 	br	100091e8 <__alt_data_end+0xf80091e8>
1000a480:	282b883a 	mov	r21,r5
1000a484:	003cc706 	br	100097a4 <__alt_data_end+0xf80097a4>

1000a488 <__vfiprintf_internal>:
1000a488:	2007883a 	mov	r3,r4
1000a48c:	01040074 	movhi	r4,4097
1000a490:	21050904 	addi	r4,r4,5156
1000a494:	21000017 	ldw	r4,0(r4)
1000a498:	2805883a 	mov	r2,r5
1000a49c:	300f883a 	mov	r7,r6
1000a4a0:	180b883a 	mov	r5,r3
1000a4a4:	100d883a 	mov	r6,r2
1000a4a8:	00090641 	jmpi	10009064 <___vfiprintf_internal_r>

1000a4ac <_write_r>:
1000a4ac:	defffd04 	addi	sp,sp,-12
1000a4b0:	dc000015 	stw	r16,0(sp)
1000a4b4:	04040074 	movhi	r16,4097
1000a4b8:	dc400115 	stw	r17,4(sp)
1000a4bc:	840bd904 	addi	r16,r16,12132
1000a4c0:	2023883a 	mov	r17,r4
1000a4c4:	2809883a 	mov	r4,r5
1000a4c8:	300b883a 	mov	r5,r6
1000a4cc:	380d883a 	mov	r6,r7
1000a4d0:	dfc00215 	stw	ra,8(sp)
1000a4d4:	80000015 	stw	zero,0(r16)
1000a4d8:	000d75c0 	call	1000d75c <write>
1000a4dc:	00ffffc4 	movi	r3,-1
1000a4e0:	10c00526 	beq	r2,r3,1000a4f8 <_write_r+0x4c>
1000a4e4:	dfc00217 	ldw	ra,8(sp)
1000a4e8:	dc400117 	ldw	r17,4(sp)
1000a4ec:	dc000017 	ldw	r16,0(sp)
1000a4f0:	dec00304 	addi	sp,sp,12
1000a4f4:	f800283a 	ret
1000a4f8:	80c00017 	ldw	r3,0(r16)
1000a4fc:	183ff926 	beq	r3,zero,1000a4e4 <__alt_data_end+0xf800a4e4>
1000a500:	88c00015 	stw	r3,0(r17)
1000a504:	003ff706 	br	1000a4e4 <__alt_data_end+0xf800a4e4>

1000a508 <_close_r>:
1000a508:	defffd04 	addi	sp,sp,-12
1000a50c:	dc000015 	stw	r16,0(sp)
1000a510:	04040074 	movhi	r16,4097
1000a514:	dc400115 	stw	r17,4(sp)
1000a518:	840bd904 	addi	r16,r16,12132
1000a51c:	2023883a 	mov	r17,r4
1000a520:	2809883a 	mov	r4,r5
1000a524:	dfc00215 	stw	ra,8(sp)
1000a528:	80000015 	stw	zero,0(r16)
1000a52c:	000cde00 	call	1000cde0 <close>
1000a530:	00ffffc4 	movi	r3,-1
1000a534:	10c00526 	beq	r2,r3,1000a54c <_close_r+0x44>
1000a538:	dfc00217 	ldw	ra,8(sp)
1000a53c:	dc400117 	ldw	r17,4(sp)
1000a540:	dc000017 	ldw	r16,0(sp)
1000a544:	dec00304 	addi	sp,sp,12
1000a548:	f800283a 	ret
1000a54c:	80c00017 	ldw	r3,0(r16)
1000a550:	183ff926 	beq	r3,zero,1000a538 <__alt_data_end+0xf800a538>
1000a554:	88c00015 	stw	r3,0(r17)
1000a558:	003ff706 	br	1000a538 <__alt_data_end+0xf800a538>

1000a55c <_calloc_r>:
1000a55c:	defffe04 	addi	sp,sp,-8
1000a560:	dc000015 	stw	r16,0(sp)
1000a564:	2021883a 	mov	r16,r4
1000a568:	2809883a 	mov	r4,r5
1000a56c:	300b883a 	mov	r5,r6
1000a570:	dfc00115 	stw	ra,4(sp)
1000a574:	00019c40 	call	100019c4 <__mulsi3>
1000a578:	8009883a 	mov	r4,r16
1000a57c:	100b883a 	mov	r5,r2
1000a580:	0006a780 	call	10006a78 <_malloc_r>
1000a584:	1021883a 	mov	r16,r2
1000a588:	10002826 	beq	r2,zero,1000a62c <_calloc_r+0xd0>
1000a58c:	11bfff17 	ldw	r6,-4(r2)
1000a590:	00bfff04 	movi	r2,-4
1000a594:	00c00904 	movi	r3,36
1000a598:	308c703a 	and	r6,r6,r2
1000a59c:	308d883a 	add	r6,r6,r2
1000a5a0:	19801436 	bltu	r3,r6,1000a5f4 <_calloc_r+0x98>
1000a5a4:	008004c4 	movi	r2,19
1000a5a8:	11800936 	bltu	r2,r6,1000a5d0 <_calloc_r+0x74>
1000a5ac:	8005883a 	mov	r2,r16
1000a5b0:	10000015 	stw	zero,0(r2)
1000a5b4:	10000115 	stw	zero,4(r2)
1000a5b8:	10000215 	stw	zero,8(r2)
1000a5bc:	8005883a 	mov	r2,r16
1000a5c0:	dfc00117 	ldw	ra,4(sp)
1000a5c4:	dc000017 	ldw	r16,0(sp)
1000a5c8:	dec00204 	addi	sp,sp,8
1000a5cc:	f800283a 	ret
1000a5d0:	80000015 	stw	zero,0(r16)
1000a5d4:	80000115 	stw	zero,4(r16)
1000a5d8:	008006c4 	movi	r2,27
1000a5dc:	11800d2e 	bgeu	r2,r6,1000a614 <_calloc_r+0xb8>
1000a5e0:	80000215 	stw	zero,8(r16)
1000a5e4:	80000315 	stw	zero,12(r16)
1000a5e8:	30c00c26 	beq	r6,r3,1000a61c <_calloc_r+0xc0>
1000a5ec:	80800404 	addi	r2,r16,16
1000a5f0:	003fef06 	br	1000a5b0 <__alt_data_end+0xf800a5b0>
1000a5f4:	8009883a 	mov	r4,r16
1000a5f8:	000b883a 	mov	r5,zero
1000a5fc:	000759c0 	call	1000759c <memset>
1000a600:	8005883a 	mov	r2,r16
1000a604:	dfc00117 	ldw	ra,4(sp)
1000a608:	dc000017 	ldw	r16,0(sp)
1000a60c:	dec00204 	addi	sp,sp,8
1000a610:	f800283a 	ret
1000a614:	80800204 	addi	r2,r16,8
1000a618:	003fe506 	br	1000a5b0 <__alt_data_end+0xf800a5b0>
1000a61c:	80000415 	stw	zero,16(r16)
1000a620:	80800604 	addi	r2,r16,24
1000a624:	80000515 	stw	zero,20(r16)
1000a628:	003fe106 	br	1000a5b0 <__alt_data_end+0xf800a5b0>
1000a62c:	0005883a 	mov	r2,zero
1000a630:	003fe306 	br	1000a5c0 <__alt_data_end+0xf800a5c0>

1000a634 <_fclose_r>:
1000a634:	28003226 	beq	r5,zero,1000a700 <_fclose_r+0xcc>
1000a638:	defffc04 	addi	sp,sp,-16
1000a63c:	dc400115 	stw	r17,4(sp)
1000a640:	2023883a 	mov	r17,r4
1000a644:	dc000015 	stw	r16,0(sp)
1000a648:	dfc00315 	stw	ra,12(sp)
1000a64c:	dc800215 	stw	r18,8(sp)
1000a650:	2821883a 	mov	r16,r5
1000a654:	0005d780 	call	10005d78 <__sfp_lock_acquire>
1000a658:	88000226 	beq	r17,zero,1000a664 <_fclose_r+0x30>
1000a65c:	88800e17 	ldw	r2,56(r17)
1000a660:	10002926 	beq	r2,zero,1000a708 <_fclose_r+0xd4>
1000a664:	8080030f 	ldh	r2,12(r16)
1000a668:	10002226 	beq	r2,zero,1000a6f4 <_fclose_r+0xc0>
1000a66c:	8809883a 	mov	r4,r17
1000a670:	800b883a 	mov	r5,r16
1000a674:	00057ac0 	call	100057ac <_fflush_r>
1000a678:	1025883a 	mov	r18,r2
1000a67c:	80800b17 	ldw	r2,44(r16)
1000a680:	10000426 	beq	r2,zero,1000a694 <_fclose_r+0x60>
1000a684:	81400717 	ldw	r5,28(r16)
1000a688:	8809883a 	mov	r4,r17
1000a68c:	103ee83a 	callr	r2
1000a690:	10002616 	blt	r2,zero,1000a72c <_fclose_r+0xf8>
1000a694:	8080030b 	ldhu	r2,12(r16)
1000a698:	1080200c 	andi	r2,r2,128
1000a69c:	10001f1e 	bne	r2,zero,1000a71c <_fclose_r+0xe8>
1000a6a0:	81400c17 	ldw	r5,48(r16)
1000a6a4:	28000526 	beq	r5,zero,1000a6bc <_fclose_r+0x88>
1000a6a8:	80801004 	addi	r2,r16,64
1000a6ac:	28800226 	beq	r5,r2,1000a6b8 <_fclose_r+0x84>
1000a6b0:	8809883a 	mov	r4,r17
1000a6b4:	0005edc0 	call	10005edc <_free_r>
1000a6b8:	80000c15 	stw	zero,48(r16)
1000a6bc:	81401117 	ldw	r5,68(r16)
1000a6c0:	28000326 	beq	r5,zero,1000a6d0 <_fclose_r+0x9c>
1000a6c4:	8809883a 	mov	r4,r17
1000a6c8:	0005edc0 	call	10005edc <_free_r>
1000a6cc:	80001115 	stw	zero,68(r16)
1000a6d0:	8000030d 	sth	zero,12(r16)
1000a6d4:	0005d7c0 	call	10005d7c <__sfp_lock_release>
1000a6d8:	9005883a 	mov	r2,r18
1000a6dc:	dfc00317 	ldw	ra,12(sp)
1000a6e0:	dc800217 	ldw	r18,8(sp)
1000a6e4:	dc400117 	ldw	r17,4(sp)
1000a6e8:	dc000017 	ldw	r16,0(sp)
1000a6ec:	dec00404 	addi	sp,sp,16
1000a6f0:	f800283a 	ret
1000a6f4:	0005d7c0 	call	10005d7c <__sfp_lock_release>
1000a6f8:	0005883a 	mov	r2,zero
1000a6fc:	003ff706 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000a700:	0005883a 	mov	r2,zero
1000a704:	f800283a 	ret
1000a708:	8809883a 	mov	r4,r17
1000a70c:	0005d680 	call	10005d68 <__sinit>
1000a710:	8080030f 	ldh	r2,12(r16)
1000a714:	103fd51e 	bne	r2,zero,1000a66c <__alt_data_end+0xf800a66c>
1000a718:	003ff606 	br	1000a6f4 <__alt_data_end+0xf800a6f4>
1000a71c:	81400417 	ldw	r5,16(r16)
1000a720:	8809883a 	mov	r4,r17
1000a724:	0005edc0 	call	10005edc <_free_r>
1000a728:	003fdd06 	br	1000a6a0 <__alt_data_end+0xf800a6a0>
1000a72c:	04bfffc4 	movi	r18,-1
1000a730:	003fd806 	br	1000a694 <__alt_data_end+0xf800a694>

1000a734 <fclose>:
1000a734:	00840074 	movhi	r2,4097
1000a738:	10850904 	addi	r2,r2,5156
1000a73c:	200b883a 	mov	r5,r4
1000a740:	11000017 	ldw	r4,0(r2)
1000a744:	000a6341 	jmpi	1000a634 <_fclose_r>

1000a748 <_fputwc_r>:
1000a748:	3080030b 	ldhu	r2,12(r6)
1000a74c:	defff804 	addi	sp,sp,-32
1000a750:	dcc00415 	stw	r19,16(sp)
1000a754:	dc800315 	stw	r18,12(sp)
1000a758:	dc000115 	stw	r16,4(sp)
1000a75c:	dfc00715 	stw	ra,28(sp)
1000a760:	dd400615 	stw	r21,24(sp)
1000a764:	dd000515 	stw	r20,20(sp)
1000a768:	dc400215 	stw	r17,8(sp)
1000a76c:	10c8000c 	andi	r3,r2,8192
1000a770:	3021883a 	mov	r16,r6
1000a774:	2027883a 	mov	r19,r4
1000a778:	2825883a 	mov	r18,r5
1000a77c:	1800051e 	bne	r3,zero,1000a794 <_fputwc_r+0x4c>
1000a780:	30c01917 	ldw	r3,100(r6)
1000a784:	10880014 	ori	r2,r2,8192
1000a788:	3080030d 	sth	r2,12(r6)
1000a78c:	18880014 	ori	r2,r3,8192
1000a790:	30801915 	stw	r2,100(r6)
1000a794:	00068680 	call	10006868 <__locale_mb_cur_max>
1000a798:	00c00044 	movi	r3,1
1000a79c:	10c03e26 	beq	r2,r3,1000a898 <_fputwc_r+0x150>
1000a7a0:	9809883a 	mov	r4,r19
1000a7a4:	d80b883a 	mov	r5,sp
1000a7a8:	900d883a 	mov	r6,r18
1000a7ac:	81c01704 	addi	r7,r16,92
1000a7b0:	000abf80 	call	1000abf8 <_wcrtomb_r>
1000a7b4:	1029883a 	mov	r20,r2
1000a7b8:	00bfffc4 	movi	r2,-1
1000a7bc:	a0802026 	beq	r20,r2,1000a840 <_fputwc_r+0xf8>
1000a7c0:	d9400003 	ldbu	r5,0(sp)
1000a7c4:	a0001c26 	beq	r20,zero,1000a838 <_fputwc_r+0xf0>
1000a7c8:	0023883a 	mov	r17,zero
1000a7cc:	05400284 	movi	r21,10
1000a7d0:	00000906 	br	1000a7f8 <_fputwc_r+0xb0>
1000a7d4:	80800017 	ldw	r2,0(r16)
1000a7d8:	11400005 	stb	r5,0(r2)
1000a7dc:	80c00017 	ldw	r3,0(r16)
1000a7e0:	18c00044 	addi	r3,r3,1
1000a7e4:	80c00015 	stw	r3,0(r16)
1000a7e8:	8c400044 	addi	r17,r17,1
1000a7ec:	dc45883a 	add	r2,sp,r17
1000a7f0:	8d00112e 	bgeu	r17,r20,1000a838 <_fputwc_r+0xf0>
1000a7f4:	11400003 	ldbu	r5,0(r2)
1000a7f8:	80c00217 	ldw	r3,8(r16)
1000a7fc:	18ffffc4 	addi	r3,r3,-1
1000a800:	80c00215 	stw	r3,8(r16)
1000a804:	183ff30e 	bge	r3,zero,1000a7d4 <__alt_data_end+0xf800a7d4>
1000a808:	80800617 	ldw	r2,24(r16)
1000a80c:	18801916 	blt	r3,r2,1000a874 <_fputwc_r+0x12c>
1000a810:	80800017 	ldw	r2,0(r16)
1000a814:	11400005 	stb	r5,0(r2)
1000a818:	80800017 	ldw	r2,0(r16)
1000a81c:	10c00003 	ldbu	r3,0(r2)
1000a820:	10800044 	addi	r2,r2,1
1000a824:	1d402326 	beq	r3,r21,1000a8b4 <_fputwc_r+0x16c>
1000a828:	80800015 	stw	r2,0(r16)
1000a82c:	8c400044 	addi	r17,r17,1
1000a830:	dc45883a 	add	r2,sp,r17
1000a834:	8d3fef36 	bltu	r17,r20,1000a7f4 <__alt_data_end+0xf800a7f4>
1000a838:	9005883a 	mov	r2,r18
1000a83c:	00000406 	br	1000a850 <_fputwc_r+0x108>
1000a840:	80c0030b 	ldhu	r3,12(r16)
1000a844:	a005883a 	mov	r2,r20
1000a848:	18c01014 	ori	r3,r3,64
1000a84c:	80c0030d 	sth	r3,12(r16)
1000a850:	dfc00717 	ldw	ra,28(sp)
1000a854:	dd400617 	ldw	r21,24(sp)
1000a858:	dd000517 	ldw	r20,20(sp)
1000a85c:	dcc00417 	ldw	r19,16(sp)
1000a860:	dc800317 	ldw	r18,12(sp)
1000a864:	dc400217 	ldw	r17,8(sp)
1000a868:	dc000117 	ldw	r16,4(sp)
1000a86c:	dec00804 	addi	sp,sp,32
1000a870:	f800283a 	ret
1000a874:	9809883a 	mov	r4,r19
1000a878:	29403fcc 	andi	r5,r5,255
1000a87c:	800d883a 	mov	r6,r16
1000a880:	000aa880 	call	1000aa88 <__swbuf_r>
1000a884:	10bfffe0 	cmpeqi	r2,r2,-1
1000a888:	10803fcc 	andi	r2,r2,255
1000a88c:	103fd626 	beq	r2,zero,1000a7e8 <__alt_data_end+0xf800a7e8>
1000a890:	00bfffc4 	movi	r2,-1
1000a894:	003fee06 	br	1000a850 <__alt_data_end+0xf800a850>
1000a898:	90ffffc4 	addi	r3,r18,-1
1000a89c:	01003f84 	movi	r4,254
1000a8a0:	20ffbf36 	bltu	r4,r3,1000a7a0 <__alt_data_end+0xf800a7a0>
1000a8a4:	900b883a 	mov	r5,r18
1000a8a8:	dc800005 	stb	r18,0(sp)
1000a8ac:	1029883a 	mov	r20,r2
1000a8b0:	003fc506 	br	1000a7c8 <__alt_data_end+0xf800a7c8>
1000a8b4:	9809883a 	mov	r4,r19
1000a8b8:	a80b883a 	mov	r5,r21
1000a8bc:	800d883a 	mov	r6,r16
1000a8c0:	000aa880 	call	1000aa88 <__swbuf_r>
1000a8c4:	10bfffe0 	cmpeqi	r2,r2,-1
1000a8c8:	003fef06 	br	1000a888 <__alt_data_end+0xf800a888>

1000a8cc <fputwc>:
1000a8cc:	defffc04 	addi	sp,sp,-16
1000a8d0:	dc000115 	stw	r16,4(sp)
1000a8d4:	04040074 	movhi	r16,4097
1000a8d8:	84050904 	addi	r16,r16,5156
1000a8dc:	dc400215 	stw	r17,8(sp)
1000a8e0:	2023883a 	mov	r17,r4
1000a8e4:	81000017 	ldw	r4,0(r16)
1000a8e8:	dfc00315 	stw	ra,12(sp)
1000a8ec:	280d883a 	mov	r6,r5
1000a8f0:	20000626 	beq	r4,zero,1000a90c <fputwc+0x40>
1000a8f4:	20800e17 	ldw	r2,56(r4)
1000a8f8:	1000041e 	bne	r2,zero,1000a90c <fputwc+0x40>
1000a8fc:	d9400015 	stw	r5,0(sp)
1000a900:	0005d680 	call	10005d68 <__sinit>
1000a904:	81000017 	ldw	r4,0(r16)
1000a908:	d9800017 	ldw	r6,0(sp)
1000a90c:	880b883a 	mov	r5,r17
1000a910:	dfc00317 	ldw	ra,12(sp)
1000a914:	dc400217 	ldw	r17,8(sp)
1000a918:	dc000117 	ldw	r16,4(sp)
1000a91c:	dec00404 	addi	sp,sp,16
1000a920:	000a7481 	jmpi	1000a748 <_fputwc_r>

1000a924 <_fstat_r>:
1000a924:	defffd04 	addi	sp,sp,-12
1000a928:	dc000015 	stw	r16,0(sp)
1000a92c:	04040074 	movhi	r16,4097
1000a930:	dc400115 	stw	r17,4(sp)
1000a934:	840bd904 	addi	r16,r16,12132
1000a938:	2023883a 	mov	r17,r4
1000a93c:	2809883a 	mov	r4,r5
1000a940:	300b883a 	mov	r5,r6
1000a944:	dfc00215 	stw	ra,8(sp)
1000a948:	80000015 	stw	zero,0(r16)
1000a94c:	000cf340 	call	1000cf34 <fstat>
1000a950:	00ffffc4 	movi	r3,-1
1000a954:	10c00526 	beq	r2,r3,1000a96c <_fstat_r+0x48>
1000a958:	dfc00217 	ldw	ra,8(sp)
1000a95c:	dc400117 	ldw	r17,4(sp)
1000a960:	dc000017 	ldw	r16,0(sp)
1000a964:	dec00304 	addi	sp,sp,12
1000a968:	f800283a 	ret
1000a96c:	80c00017 	ldw	r3,0(r16)
1000a970:	183ff926 	beq	r3,zero,1000a958 <__alt_data_end+0xf800a958>
1000a974:	88c00015 	stw	r3,0(r17)
1000a978:	003ff706 	br	1000a958 <__alt_data_end+0xf800a958>

1000a97c <_isatty_r>:
1000a97c:	defffd04 	addi	sp,sp,-12
1000a980:	dc000015 	stw	r16,0(sp)
1000a984:	04040074 	movhi	r16,4097
1000a988:	dc400115 	stw	r17,4(sp)
1000a98c:	840bd904 	addi	r16,r16,12132
1000a990:	2023883a 	mov	r17,r4
1000a994:	2809883a 	mov	r4,r5
1000a998:	dfc00215 	stw	ra,8(sp)
1000a99c:	80000015 	stw	zero,0(r16)
1000a9a0:	000d03c0 	call	1000d03c <isatty>
1000a9a4:	00ffffc4 	movi	r3,-1
1000a9a8:	10c00526 	beq	r2,r3,1000a9c0 <_isatty_r+0x44>
1000a9ac:	dfc00217 	ldw	ra,8(sp)
1000a9b0:	dc400117 	ldw	r17,4(sp)
1000a9b4:	dc000017 	ldw	r16,0(sp)
1000a9b8:	dec00304 	addi	sp,sp,12
1000a9bc:	f800283a 	ret
1000a9c0:	80c00017 	ldw	r3,0(r16)
1000a9c4:	183ff926 	beq	r3,zero,1000a9ac <__alt_data_end+0xf800a9ac>
1000a9c8:	88c00015 	stw	r3,0(r17)
1000a9cc:	003ff706 	br	1000a9ac <__alt_data_end+0xf800a9ac>

1000a9d0 <_lseek_r>:
1000a9d0:	defffd04 	addi	sp,sp,-12
1000a9d4:	dc000015 	stw	r16,0(sp)
1000a9d8:	04040074 	movhi	r16,4097
1000a9dc:	dc400115 	stw	r17,4(sp)
1000a9e0:	840bd904 	addi	r16,r16,12132
1000a9e4:	2023883a 	mov	r17,r4
1000a9e8:	2809883a 	mov	r4,r5
1000a9ec:	300b883a 	mov	r5,r6
1000a9f0:	380d883a 	mov	r6,r7
1000a9f4:	dfc00215 	stw	ra,8(sp)
1000a9f8:	80000015 	stw	zero,0(r16)
1000a9fc:	000d21c0 	call	1000d21c <lseek>
1000aa00:	00ffffc4 	movi	r3,-1
1000aa04:	10c00526 	beq	r2,r3,1000aa1c <_lseek_r+0x4c>
1000aa08:	dfc00217 	ldw	ra,8(sp)
1000aa0c:	dc400117 	ldw	r17,4(sp)
1000aa10:	dc000017 	ldw	r16,0(sp)
1000aa14:	dec00304 	addi	sp,sp,12
1000aa18:	f800283a 	ret
1000aa1c:	80c00017 	ldw	r3,0(r16)
1000aa20:	183ff926 	beq	r3,zero,1000aa08 <__alt_data_end+0xf800aa08>
1000aa24:	88c00015 	stw	r3,0(r17)
1000aa28:	003ff706 	br	1000aa08 <__alt_data_end+0xf800aa08>

1000aa2c <_read_r>:
1000aa2c:	defffd04 	addi	sp,sp,-12
1000aa30:	dc000015 	stw	r16,0(sp)
1000aa34:	04040074 	movhi	r16,4097
1000aa38:	dc400115 	stw	r17,4(sp)
1000aa3c:	840bd904 	addi	r16,r16,12132
1000aa40:	2023883a 	mov	r17,r4
1000aa44:	2809883a 	mov	r4,r5
1000aa48:	300b883a 	mov	r5,r6
1000aa4c:	380d883a 	mov	r6,r7
1000aa50:	dfc00215 	stw	ra,8(sp)
1000aa54:	80000015 	stw	zero,0(r16)
1000aa58:	000d4000 	call	1000d400 <read>
1000aa5c:	00ffffc4 	movi	r3,-1
1000aa60:	10c00526 	beq	r2,r3,1000aa78 <_read_r+0x4c>
1000aa64:	dfc00217 	ldw	ra,8(sp)
1000aa68:	dc400117 	ldw	r17,4(sp)
1000aa6c:	dc000017 	ldw	r16,0(sp)
1000aa70:	dec00304 	addi	sp,sp,12
1000aa74:	f800283a 	ret
1000aa78:	80c00017 	ldw	r3,0(r16)
1000aa7c:	183ff926 	beq	r3,zero,1000aa64 <__alt_data_end+0xf800aa64>
1000aa80:	88c00015 	stw	r3,0(r17)
1000aa84:	003ff706 	br	1000aa64 <__alt_data_end+0xf800aa64>

1000aa88 <__swbuf_r>:
1000aa88:	defffc04 	addi	sp,sp,-16
1000aa8c:	dc800215 	stw	r18,8(sp)
1000aa90:	dc400115 	stw	r17,4(sp)
1000aa94:	dc000015 	stw	r16,0(sp)
1000aa98:	dfc00315 	stw	ra,12(sp)
1000aa9c:	2025883a 	mov	r18,r4
1000aaa0:	2823883a 	mov	r17,r5
1000aaa4:	3021883a 	mov	r16,r6
1000aaa8:	20000226 	beq	r4,zero,1000aab4 <__swbuf_r+0x2c>
1000aaac:	20800e17 	ldw	r2,56(r4)
1000aab0:	10004126 	beq	r2,zero,1000abb8 <__swbuf_r+0x130>
1000aab4:	80c00617 	ldw	r3,24(r16)
1000aab8:	8180030b 	ldhu	r6,12(r16)
1000aabc:	80c00215 	stw	r3,8(r16)
1000aac0:	30c0020c 	andi	r3,r6,8
1000aac4:	18003526 	beq	r3,zero,1000ab9c <__swbuf_r+0x114>
1000aac8:	80c00417 	ldw	r3,16(r16)
1000aacc:	18003326 	beq	r3,zero,1000ab9c <__swbuf_r+0x114>
1000aad0:	3088000c 	andi	r2,r6,8192
1000aad4:	8c403fcc 	andi	r17,r17,255
1000aad8:	10001726 	beq	r2,zero,1000ab38 <__swbuf_r+0xb0>
1000aadc:	80800017 	ldw	r2,0(r16)
1000aae0:	81000517 	ldw	r4,20(r16)
1000aae4:	10c7c83a 	sub	r3,r2,r3
1000aae8:	19001d0e 	bge	r3,r4,1000ab60 <__swbuf_r+0xd8>
1000aaec:	18c00044 	addi	r3,r3,1
1000aaf0:	81400217 	ldw	r5,8(r16)
1000aaf4:	11000044 	addi	r4,r2,1
1000aaf8:	81000015 	stw	r4,0(r16)
1000aafc:	297fffc4 	addi	r5,r5,-1
1000ab00:	81400215 	stw	r5,8(r16)
1000ab04:	14400005 	stb	r17,0(r2)
1000ab08:	80800517 	ldw	r2,20(r16)
1000ab0c:	10c01d26 	beq	r2,r3,1000ab84 <__swbuf_r+0xfc>
1000ab10:	8080030b 	ldhu	r2,12(r16)
1000ab14:	1080004c 	andi	r2,r2,1
1000ab18:	1000181e 	bne	r2,zero,1000ab7c <__swbuf_r+0xf4>
1000ab1c:	8805883a 	mov	r2,r17
1000ab20:	dfc00317 	ldw	ra,12(sp)
1000ab24:	dc800217 	ldw	r18,8(sp)
1000ab28:	dc400117 	ldw	r17,4(sp)
1000ab2c:	dc000017 	ldw	r16,0(sp)
1000ab30:	dec00404 	addi	sp,sp,16
1000ab34:	f800283a 	ret
1000ab38:	81001917 	ldw	r4,100(r16)
1000ab3c:	00b7ffc4 	movi	r2,-8193
1000ab40:	31880014 	ori	r6,r6,8192
1000ab44:	2084703a 	and	r2,r4,r2
1000ab48:	80801915 	stw	r2,100(r16)
1000ab4c:	80800017 	ldw	r2,0(r16)
1000ab50:	81000517 	ldw	r4,20(r16)
1000ab54:	8180030d 	sth	r6,12(r16)
1000ab58:	10c7c83a 	sub	r3,r2,r3
1000ab5c:	193fe316 	blt	r3,r4,1000aaec <__alt_data_end+0xf800aaec>
1000ab60:	9009883a 	mov	r4,r18
1000ab64:	800b883a 	mov	r5,r16
1000ab68:	00057ac0 	call	100057ac <_fflush_r>
1000ab6c:	1000091e 	bne	r2,zero,1000ab94 <__swbuf_r+0x10c>
1000ab70:	80800017 	ldw	r2,0(r16)
1000ab74:	00c00044 	movi	r3,1
1000ab78:	003fdd06 	br	1000aaf0 <__alt_data_end+0xf800aaf0>
1000ab7c:	00800284 	movi	r2,10
1000ab80:	88bfe61e 	bne	r17,r2,1000ab1c <__alt_data_end+0xf800ab1c>
1000ab84:	9009883a 	mov	r4,r18
1000ab88:	800b883a 	mov	r5,r16
1000ab8c:	00057ac0 	call	100057ac <_fflush_r>
1000ab90:	103fe226 	beq	r2,zero,1000ab1c <__alt_data_end+0xf800ab1c>
1000ab94:	00bfffc4 	movi	r2,-1
1000ab98:	003fe106 	br	1000ab20 <__alt_data_end+0xf800ab20>
1000ab9c:	9009883a 	mov	r4,r18
1000aba0:	800b883a 	mov	r5,r16
1000aba4:	0003d2c0 	call	10003d2c <__swsetup_r>
1000aba8:	1000051e 	bne	r2,zero,1000abc0 <__swbuf_r+0x138>
1000abac:	8180030b 	ldhu	r6,12(r16)
1000abb0:	80c00417 	ldw	r3,16(r16)
1000abb4:	003fc606 	br	1000aad0 <__alt_data_end+0xf800aad0>
1000abb8:	0005d680 	call	10005d68 <__sinit>
1000abbc:	003fbd06 	br	1000aab4 <__alt_data_end+0xf800aab4>
1000abc0:	80c0030b 	ldhu	r3,12(r16)
1000abc4:	00bfffc4 	movi	r2,-1
1000abc8:	18c01014 	ori	r3,r3,64
1000abcc:	80c0030d 	sth	r3,12(r16)
1000abd0:	00c00244 	movi	r3,9
1000abd4:	90c00015 	stw	r3,0(r18)
1000abd8:	003fd106 	br	1000ab20 <__alt_data_end+0xf800ab20>

1000abdc <__swbuf>:
1000abdc:	00c40074 	movhi	r3,4097
1000abe0:	18c50904 	addi	r3,r3,5156
1000abe4:	2005883a 	mov	r2,r4
1000abe8:	19000017 	ldw	r4,0(r3)
1000abec:	280d883a 	mov	r6,r5
1000abf0:	100b883a 	mov	r5,r2
1000abf4:	000aa881 	jmpi	1000aa88 <__swbuf_r>

1000abf8 <_wcrtomb_r>:
1000abf8:	defff604 	addi	sp,sp,-40
1000abfc:	00840074 	movhi	r2,4097
1000ac00:	dc800815 	stw	r18,32(sp)
1000ac04:	dc400715 	stw	r17,28(sp)
1000ac08:	dc000615 	stw	r16,24(sp)
1000ac0c:	10850d04 	addi	r2,r2,5172
1000ac10:	dfc00915 	stw	ra,36(sp)
1000ac14:	2021883a 	mov	r16,r4
1000ac18:	3823883a 	mov	r17,r7
1000ac1c:	14800017 	ldw	r18,0(r2)
1000ac20:	28001426 	beq	r5,zero,1000ac74 <_wcrtomb_r+0x7c>
1000ac24:	d9400415 	stw	r5,16(sp)
1000ac28:	d9800515 	stw	r6,20(sp)
1000ac2c:	000685c0 	call	1000685c <__locale_charset>
1000ac30:	d9400417 	ldw	r5,16(sp)
1000ac34:	d9800517 	ldw	r6,20(sp)
1000ac38:	8009883a 	mov	r4,r16
1000ac3c:	dc400015 	stw	r17,0(sp)
1000ac40:	100f883a 	mov	r7,r2
1000ac44:	903ee83a 	callr	r18
1000ac48:	00ffffc4 	movi	r3,-1
1000ac4c:	10c0031e 	bne	r2,r3,1000ac5c <_wcrtomb_r+0x64>
1000ac50:	88000015 	stw	zero,0(r17)
1000ac54:	00c02284 	movi	r3,138
1000ac58:	80c00015 	stw	r3,0(r16)
1000ac5c:	dfc00917 	ldw	ra,36(sp)
1000ac60:	dc800817 	ldw	r18,32(sp)
1000ac64:	dc400717 	ldw	r17,28(sp)
1000ac68:	dc000617 	ldw	r16,24(sp)
1000ac6c:	dec00a04 	addi	sp,sp,40
1000ac70:	f800283a 	ret
1000ac74:	000685c0 	call	1000685c <__locale_charset>
1000ac78:	8009883a 	mov	r4,r16
1000ac7c:	dc400015 	stw	r17,0(sp)
1000ac80:	d9400104 	addi	r5,sp,4
1000ac84:	000d883a 	mov	r6,zero
1000ac88:	100f883a 	mov	r7,r2
1000ac8c:	903ee83a 	callr	r18
1000ac90:	003fed06 	br	1000ac48 <__alt_data_end+0xf800ac48>

1000ac94 <wcrtomb>:
1000ac94:	defff504 	addi	sp,sp,-44
1000ac98:	dc400515 	stw	r17,20(sp)
1000ac9c:	dc000415 	stw	r16,16(sp)
1000aca0:	dfc00a15 	stw	ra,40(sp)
1000aca4:	dd400915 	stw	r21,36(sp)
1000aca8:	dd000815 	stw	r20,32(sp)
1000acac:	dcc00715 	stw	r19,28(sp)
1000acb0:	dc800615 	stw	r18,24(sp)
1000acb4:	2021883a 	mov	r16,r4
1000acb8:	3023883a 	mov	r17,r6
1000acbc:	20001d26 	beq	r4,zero,1000ad34 <wcrtomb+0xa0>
1000acc0:	04840074 	movhi	r18,4097
1000acc4:	94850904 	addi	r18,r18,5156
1000acc8:	00840074 	movhi	r2,4097
1000accc:	95400017 	ldw	r21,0(r18)
1000acd0:	10850d04 	addi	r2,r2,5172
1000acd4:	15000017 	ldw	r20,0(r2)
1000acd8:	2827883a 	mov	r19,r5
1000acdc:	000685c0 	call	1000685c <__locale_charset>
1000ace0:	a809883a 	mov	r4,r21
1000ace4:	dc400015 	stw	r17,0(sp)
1000ace8:	800b883a 	mov	r5,r16
1000acec:	980d883a 	mov	r6,r19
1000acf0:	100f883a 	mov	r7,r2
1000acf4:	a03ee83a 	callr	r20
1000acf8:	00ffffc4 	movi	r3,-1
1000acfc:	10c0041e 	bne	r2,r3,1000ad10 <wcrtomb+0x7c>
1000ad00:	90c00017 	ldw	r3,0(r18)
1000ad04:	01002284 	movi	r4,138
1000ad08:	88000015 	stw	zero,0(r17)
1000ad0c:	19000015 	stw	r4,0(r3)
1000ad10:	dfc00a17 	ldw	ra,40(sp)
1000ad14:	dd400917 	ldw	r21,36(sp)
1000ad18:	dd000817 	ldw	r20,32(sp)
1000ad1c:	dcc00717 	ldw	r19,28(sp)
1000ad20:	dc800617 	ldw	r18,24(sp)
1000ad24:	dc400517 	ldw	r17,20(sp)
1000ad28:	dc000417 	ldw	r16,16(sp)
1000ad2c:	dec00b04 	addi	sp,sp,44
1000ad30:	f800283a 	ret
1000ad34:	04840074 	movhi	r18,4097
1000ad38:	94850904 	addi	r18,r18,5156
1000ad3c:	00840074 	movhi	r2,4097
1000ad40:	94c00017 	ldw	r19,0(r18)
1000ad44:	10850d04 	addi	r2,r2,5172
1000ad48:	14000017 	ldw	r16,0(r2)
1000ad4c:	000685c0 	call	1000685c <__locale_charset>
1000ad50:	9809883a 	mov	r4,r19
1000ad54:	dc400015 	stw	r17,0(sp)
1000ad58:	d9400104 	addi	r5,sp,4
1000ad5c:	000d883a 	mov	r6,zero
1000ad60:	100f883a 	mov	r7,r2
1000ad64:	803ee83a 	callr	r16
1000ad68:	003fe306 	br	1000acf8 <__alt_data_end+0xf800acf8>

1000ad6c <__ascii_wctomb>:
1000ad6c:	28000526 	beq	r5,zero,1000ad84 <__ascii_wctomb+0x18>
1000ad70:	00803fc4 	movi	r2,255
1000ad74:	11800536 	bltu	r2,r6,1000ad8c <__ascii_wctomb+0x20>
1000ad78:	29800005 	stb	r6,0(r5)
1000ad7c:	00800044 	movi	r2,1
1000ad80:	f800283a 	ret
1000ad84:	0005883a 	mov	r2,zero
1000ad88:	f800283a 	ret
1000ad8c:	00802284 	movi	r2,138
1000ad90:	20800015 	stw	r2,0(r4)
1000ad94:	00bfffc4 	movi	r2,-1
1000ad98:	f800283a 	ret

1000ad9c <_wctomb_r>:
1000ad9c:	00840074 	movhi	r2,4097
1000ada0:	defff904 	addi	sp,sp,-28
1000ada4:	10850d04 	addi	r2,r2,5172
1000ada8:	dfc00615 	stw	ra,24(sp)
1000adac:	dc400515 	stw	r17,20(sp)
1000adb0:	dc000415 	stw	r16,16(sp)
1000adb4:	3823883a 	mov	r17,r7
1000adb8:	14000017 	ldw	r16,0(r2)
1000adbc:	d9000115 	stw	r4,4(sp)
1000adc0:	d9400215 	stw	r5,8(sp)
1000adc4:	d9800315 	stw	r6,12(sp)
1000adc8:	000685c0 	call	1000685c <__locale_charset>
1000adcc:	d9000117 	ldw	r4,4(sp)
1000add0:	d9400217 	ldw	r5,8(sp)
1000add4:	d9800317 	ldw	r6,12(sp)
1000add8:	dc400015 	stw	r17,0(sp)
1000addc:	100f883a 	mov	r7,r2
1000ade0:	803ee83a 	callr	r16
1000ade4:	dfc00617 	ldw	ra,24(sp)
1000ade8:	dc400517 	ldw	r17,20(sp)
1000adec:	dc000417 	ldw	r16,16(sp)
1000adf0:	dec00704 	addi	sp,sp,28
1000adf4:	f800283a 	ret

1000adf8 <__udivdi3>:
1000adf8:	defff504 	addi	sp,sp,-44
1000adfc:	dcc00415 	stw	r19,16(sp)
1000ae00:	dc000115 	stw	r16,4(sp)
1000ae04:	dfc00a15 	stw	ra,40(sp)
1000ae08:	df000915 	stw	fp,36(sp)
1000ae0c:	ddc00815 	stw	r23,32(sp)
1000ae10:	dd800715 	stw	r22,28(sp)
1000ae14:	dd400615 	stw	r21,24(sp)
1000ae18:	dd000515 	stw	r20,20(sp)
1000ae1c:	dc800315 	stw	r18,12(sp)
1000ae20:	dc400215 	stw	r17,8(sp)
1000ae24:	2027883a 	mov	r19,r4
1000ae28:	2821883a 	mov	r16,r5
1000ae2c:	3800471e 	bne	r7,zero,1000af4c <__udivdi3+0x154>
1000ae30:	3025883a 	mov	r18,r6
1000ae34:	2023883a 	mov	r17,r4
1000ae38:	2980592e 	bgeu	r5,r6,1000afa0 <__udivdi3+0x1a8>
1000ae3c:	00bfffd4 	movui	r2,65535
1000ae40:	2829883a 	mov	r20,r5
1000ae44:	1180b236 	bltu	r2,r6,1000b110 <__udivdi3+0x318>
1000ae48:	00803fc4 	movi	r2,255
1000ae4c:	1181622e 	bgeu	r2,r6,1000b3d8 <__udivdi3+0x5e0>
1000ae50:	00800204 	movi	r2,8
1000ae54:	1007883a 	mov	r3,r2
1000ae58:	3084d83a 	srl	r2,r6,r2
1000ae5c:	01040074 	movhi	r4,4097
1000ae60:	213d9d04 	addi	r4,r4,-2444
1000ae64:	2085883a 	add	r2,r4,r2
1000ae68:	11000003 	ldbu	r4,0(r2)
1000ae6c:	20c9883a 	add	r4,r4,r3
1000ae70:	00c00804 	movi	r3,32
1000ae74:	1907c83a 	sub	r3,r3,r4
1000ae78:	18000526 	beq	r3,zero,1000ae90 <__udivdi3+0x98>
1000ae7c:	80e0983a 	sll	r16,r16,r3
1000ae80:	9908d83a 	srl	r4,r19,r4
1000ae84:	30e4983a 	sll	r18,r6,r3
1000ae88:	98e2983a 	sll	r17,r19,r3
1000ae8c:	8128b03a 	or	r20,r16,r4
1000ae90:	902ad43a 	srli	r21,r18,16
1000ae94:	a009883a 	mov	r4,r20
1000ae98:	95bfffcc 	andi	r22,r18,65535
1000ae9c:	a80b883a 	mov	r5,r21
1000aea0:	00019bc0 	call	100019bc <__umodsi3>
1000aea4:	a009883a 	mov	r4,r20
1000aea8:	a80b883a 	mov	r5,r21
1000aeac:	102f883a 	mov	r23,r2
1000aeb0:	00019b40 	call	100019b4 <__udivsi3>
1000aeb4:	1009883a 	mov	r4,r2
1000aeb8:	b00b883a 	mov	r5,r22
1000aebc:	1021883a 	mov	r16,r2
1000aec0:	00019c40 	call	100019c4 <__mulsi3>
1000aec4:	b82e943a 	slli	r23,r23,16
1000aec8:	8808d43a 	srli	r4,r17,16
1000aecc:	b906b03a 	or	r3,r23,r4
1000aed0:	1880052e 	bgeu	r3,r2,1000aee8 <__udivdi3+0xf0>
1000aed4:	1c87883a 	add	r3,r3,r18
1000aed8:	813fffc4 	addi	r4,r16,-1
1000aedc:	1c800136 	bltu	r3,r18,1000aee4 <__udivdi3+0xec>
1000aee0:	18815236 	bltu	r3,r2,1000b42c <__udivdi3+0x634>
1000aee4:	2021883a 	mov	r16,r4
1000aee8:	18a7c83a 	sub	r19,r3,r2
1000aeec:	9809883a 	mov	r4,r19
1000aef0:	a80b883a 	mov	r5,r21
1000aef4:	00019bc0 	call	100019bc <__umodsi3>
1000aef8:	1029883a 	mov	r20,r2
1000aefc:	9809883a 	mov	r4,r19
1000af00:	a80b883a 	mov	r5,r21
1000af04:	a028943a 	slli	r20,r20,16
1000af08:	00019b40 	call	100019b4 <__udivsi3>
1000af0c:	1009883a 	mov	r4,r2
1000af10:	b00b883a 	mov	r5,r22
1000af14:	8c7fffcc 	andi	r17,r17,65535
1000af18:	1027883a 	mov	r19,r2
1000af1c:	a462b03a 	or	r17,r20,r17
1000af20:	00019c40 	call	100019c4 <__mulsi3>
1000af24:	8880052e 	bgeu	r17,r2,1000af3c <__udivdi3+0x144>
1000af28:	8ca3883a 	add	r17,r17,r18
1000af2c:	98ffffc4 	addi	r3,r19,-1
1000af30:	8c811036 	bltu	r17,r18,1000b374 <__udivdi3+0x57c>
1000af34:	88810f2e 	bgeu	r17,r2,1000b374 <__udivdi3+0x57c>
1000af38:	9cffff84 	addi	r19,r19,-2
1000af3c:	8020943a 	slli	r16,r16,16
1000af40:	0007883a 	mov	r3,zero
1000af44:	9c04b03a 	or	r2,r19,r16
1000af48:	00006006 	br	1000b0cc <__udivdi3+0x2d4>
1000af4c:	29c05d36 	bltu	r5,r7,1000b0c4 <__udivdi3+0x2cc>
1000af50:	00bfffd4 	movui	r2,65535
1000af54:	11c0692e 	bgeu	r2,r7,1000b0fc <__udivdi3+0x304>
1000af58:	00804034 	movhi	r2,256
1000af5c:	10bfffc4 	addi	r2,r2,-1
1000af60:	11c10e2e 	bgeu	r2,r7,1000b39c <__udivdi3+0x5a4>
1000af64:	01400604 	movi	r5,24
1000af68:	2811883a 	mov	r8,r5
1000af6c:	394ad83a 	srl	r5,r7,r5
1000af70:	00840074 	movhi	r2,4097
1000af74:	10bd9d04 	addi	r2,r2,-2444
1000af78:	114b883a 	add	r5,r2,r5
1000af7c:	29400003 	ldbu	r5,0(r5)
1000af80:	00c00804 	movi	r3,32
1000af84:	2a0b883a 	add	r5,r5,r8
1000af88:	196fc83a 	sub	r23,r3,r5
1000af8c:	b8006b1e 	bne	r23,zero,1000b13c <__udivdi3+0x344>
1000af90:	3c011436 	bltu	r7,r16,1000b3e4 <__udivdi3+0x5ec>
1000af94:	9985403a 	cmpgeu	r2,r19,r6
1000af98:	0007883a 	mov	r3,zero
1000af9c:	00004b06 	br	1000b0cc <__udivdi3+0x2d4>
1000afa0:	3000041e 	bne	r6,zero,1000afb4 <__udivdi3+0x1bc>
1000afa4:	01000044 	movi	r4,1
1000afa8:	000b883a 	mov	r5,zero
1000afac:	00019b40 	call	100019b4 <__udivsi3>
1000afb0:	1025883a 	mov	r18,r2
1000afb4:	00bfffd4 	movui	r2,65535
1000afb8:	14805b2e 	bgeu	r2,r18,1000b128 <__udivdi3+0x330>
1000afbc:	00804034 	movhi	r2,256
1000afc0:	10bfffc4 	addi	r2,r2,-1
1000afc4:	1480fe2e 	bgeu	r2,r18,1000b3c0 <__udivdi3+0x5c8>
1000afc8:	00800604 	movi	r2,24
1000afcc:	1007883a 	mov	r3,r2
1000afd0:	9084d83a 	srl	r2,r18,r2
1000afd4:	01040074 	movhi	r4,4097
1000afd8:	213d9d04 	addi	r4,r4,-2444
1000afdc:	2085883a 	add	r2,r4,r2
1000afe0:	11800003 	ldbu	r6,0(r2)
1000afe4:	01c00804 	movi	r7,32
1000afe8:	30c7883a 	add	r3,r6,r3
1000afec:	38cfc83a 	sub	r7,r7,r3
1000aff0:	3800a71e 	bne	r7,zero,1000b290 <__udivdi3+0x498>
1000aff4:	9028d43a 	srli	r20,r18,16
1000aff8:	84a1c83a 	sub	r16,r16,r18
1000affc:	957fffcc 	andi	r21,r18,65535
1000b000:	00c00044 	movi	r3,1
1000b004:	8009883a 	mov	r4,r16
1000b008:	a00b883a 	mov	r5,r20
1000b00c:	d8c00015 	stw	r3,0(sp)
1000b010:	00019bc0 	call	100019bc <__umodsi3>
1000b014:	8009883a 	mov	r4,r16
1000b018:	a00b883a 	mov	r5,r20
1000b01c:	102d883a 	mov	r22,r2
1000b020:	00019b40 	call	100019b4 <__udivsi3>
1000b024:	1009883a 	mov	r4,r2
1000b028:	a80b883a 	mov	r5,r21
1000b02c:	1021883a 	mov	r16,r2
1000b030:	00019c40 	call	100019c4 <__mulsi3>
1000b034:	b02c943a 	slli	r22,r22,16
1000b038:	880ed43a 	srli	r7,r17,16
1000b03c:	d8c00017 	ldw	r3,0(sp)
1000b040:	b1ccb03a 	or	r6,r22,r7
1000b044:	3080052e 	bgeu	r6,r2,1000b05c <__udivdi3+0x264>
1000b048:	348d883a 	add	r6,r6,r18
1000b04c:	813fffc4 	addi	r4,r16,-1
1000b050:	34800136 	bltu	r6,r18,1000b058 <__udivdi3+0x260>
1000b054:	3080f236 	bltu	r6,r2,1000b420 <__udivdi3+0x628>
1000b058:	2021883a 	mov	r16,r4
1000b05c:	30a7c83a 	sub	r19,r6,r2
1000b060:	9809883a 	mov	r4,r19
1000b064:	a00b883a 	mov	r5,r20
1000b068:	d8c00015 	stw	r3,0(sp)
1000b06c:	00019bc0 	call	100019bc <__umodsi3>
1000b070:	102d883a 	mov	r22,r2
1000b074:	9809883a 	mov	r4,r19
1000b078:	a00b883a 	mov	r5,r20
1000b07c:	b02c943a 	slli	r22,r22,16
1000b080:	00019b40 	call	100019b4 <__udivsi3>
1000b084:	1009883a 	mov	r4,r2
1000b088:	a80b883a 	mov	r5,r21
1000b08c:	8c7fffcc 	andi	r17,r17,65535
1000b090:	1027883a 	mov	r19,r2
1000b094:	b462b03a 	or	r17,r22,r17
1000b098:	00019c40 	call	100019c4 <__mulsi3>
1000b09c:	d8c00017 	ldw	r3,0(sp)
1000b0a0:	8880052e 	bgeu	r17,r2,1000b0b8 <__udivdi3+0x2c0>
1000b0a4:	8ca3883a 	add	r17,r17,r18
1000b0a8:	993fffc4 	addi	r4,r19,-1
1000b0ac:	8c80af36 	bltu	r17,r18,1000b36c <__udivdi3+0x574>
1000b0b0:	8880ae2e 	bgeu	r17,r2,1000b36c <__udivdi3+0x574>
1000b0b4:	9cffff84 	addi	r19,r19,-2
1000b0b8:	8020943a 	slli	r16,r16,16
1000b0bc:	9c04b03a 	or	r2,r19,r16
1000b0c0:	00000206 	br	1000b0cc <__udivdi3+0x2d4>
1000b0c4:	0007883a 	mov	r3,zero
1000b0c8:	0005883a 	mov	r2,zero
1000b0cc:	dfc00a17 	ldw	ra,40(sp)
1000b0d0:	df000917 	ldw	fp,36(sp)
1000b0d4:	ddc00817 	ldw	r23,32(sp)
1000b0d8:	dd800717 	ldw	r22,28(sp)
1000b0dc:	dd400617 	ldw	r21,24(sp)
1000b0e0:	dd000517 	ldw	r20,20(sp)
1000b0e4:	dcc00417 	ldw	r19,16(sp)
1000b0e8:	dc800317 	ldw	r18,12(sp)
1000b0ec:	dc400217 	ldw	r17,8(sp)
1000b0f0:	dc000117 	ldw	r16,4(sp)
1000b0f4:	dec00b04 	addi	sp,sp,44
1000b0f8:	f800283a 	ret
1000b0fc:	00803fc4 	movi	r2,255
1000b100:	11c0a92e 	bgeu	r2,r7,1000b3a8 <__udivdi3+0x5b0>
1000b104:	01400204 	movi	r5,8
1000b108:	2811883a 	mov	r8,r5
1000b10c:	003f9706 	br	1000af6c <__alt_data_end+0xf800af6c>
1000b110:	00804034 	movhi	r2,256
1000b114:	10bfffc4 	addi	r2,r2,-1
1000b118:	1180a62e 	bgeu	r2,r6,1000b3b4 <__udivdi3+0x5bc>
1000b11c:	00800604 	movi	r2,24
1000b120:	1007883a 	mov	r3,r2
1000b124:	003f4c06 	br	1000ae58 <__alt_data_end+0xf800ae58>
1000b128:	00803fc4 	movi	r2,255
1000b12c:	1480a72e 	bgeu	r2,r18,1000b3cc <__udivdi3+0x5d4>
1000b130:	00800204 	movi	r2,8
1000b134:	1007883a 	mov	r3,r2
1000b138:	003fa506 	br	1000afd0 <__alt_data_end+0xf800afd0>
1000b13c:	3178d83a 	srl	fp,r6,r5
1000b140:	3dce983a 	sll	r7,r7,r23
1000b144:	8168d83a 	srl	r20,r16,r5
1000b148:	9950d83a 	srl	r8,r19,r5
1000b14c:	3f38b03a 	or	fp,r7,fp
1000b150:	e024d43a 	srli	r18,fp,16
1000b154:	85e0983a 	sll	r16,r16,r23
1000b158:	a009883a 	mov	r4,r20
1000b15c:	900b883a 	mov	r5,r18
1000b160:	8220b03a 	or	r16,r16,r8
1000b164:	35ea983a 	sll	r21,r6,r23
1000b168:	00019bc0 	call	100019bc <__umodsi3>
1000b16c:	a009883a 	mov	r4,r20
1000b170:	900b883a 	mov	r5,r18
1000b174:	1023883a 	mov	r17,r2
1000b178:	e5bfffcc 	andi	r22,fp,65535
1000b17c:	00019b40 	call	100019b4 <__udivsi3>
1000b180:	1009883a 	mov	r4,r2
1000b184:	b00b883a 	mov	r5,r22
1000b188:	1029883a 	mov	r20,r2
1000b18c:	00019c40 	call	100019c4 <__mulsi3>
1000b190:	8806943a 	slli	r3,r17,16
1000b194:	8014d43a 	srli	r10,r16,16
1000b198:	1a92b03a 	or	r9,r3,r10
1000b19c:	4880042e 	bgeu	r9,r2,1000b1b0 <__udivdi3+0x3b8>
1000b1a0:	4f13883a 	add	r9,r9,fp
1000b1a4:	a0ffffc4 	addi	r3,r20,-1
1000b1a8:	4f00952e 	bgeu	r9,fp,1000b400 <__udivdi3+0x608>
1000b1ac:	1829883a 	mov	r20,r3
1000b1b0:	48a3c83a 	sub	r17,r9,r2
1000b1b4:	8809883a 	mov	r4,r17
1000b1b8:	900b883a 	mov	r5,r18
1000b1bc:	00019bc0 	call	100019bc <__umodsi3>
1000b1c0:	8809883a 	mov	r4,r17
1000b1c4:	900b883a 	mov	r5,r18
1000b1c8:	d8800015 	stw	r2,0(sp)
1000b1cc:	00019b40 	call	100019b4 <__udivsi3>
1000b1d0:	1009883a 	mov	r4,r2
1000b1d4:	b00b883a 	mov	r5,r22
1000b1d8:	1023883a 	mov	r17,r2
1000b1dc:	00019c40 	call	100019c4 <__mulsi3>
1000b1e0:	d8c00017 	ldw	r3,0(sp)
1000b1e4:	823fffcc 	andi	r8,r16,65535
1000b1e8:	1806943a 	slli	r3,r3,16
1000b1ec:	1a20b03a 	or	r16,r3,r8
1000b1f0:	8080042e 	bgeu	r16,r2,1000b204 <__udivdi3+0x40c>
1000b1f4:	8721883a 	add	r16,r16,fp
1000b1f8:	88ffffc4 	addi	r3,r17,-1
1000b1fc:	87007c2e 	bgeu	r16,fp,1000b3f0 <__udivdi3+0x5f8>
1000b200:	1823883a 	mov	r17,r3
1000b204:	a028943a 	slli	r20,r20,16
1000b208:	acbfffcc 	andi	r18,r21,65535
1000b20c:	900b883a 	mov	r5,r18
1000b210:	8d28b03a 	or	r20,r17,r20
1000b214:	a022d43a 	srli	r17,r20,16
1000b218:	a5bfffcc 	andi	r22,r20,65535
1000b21c:	b009883a 	mov	r4,r22
1000b220:	a82ad43a 	srli	r21,r21,16
1000b224:	80a1c83a 	sub	r16,r16,r2
1000b228:	00019c40 	call	100019c4 <__mulsi3>
1000b22c:	8809883a 	mov	r4,r17
1000b230:	900b883a 	mov	r5,r18
1000b234:	1039883a 	mov	fp,r2
1000b238:	00019c40 	call	100019c4 <__mulsi3>
1000b23c:	8809883a 	mov	r4,r17
1000b240:	a80b883a 	mov	r5,r21
1000b244:	1025883a 	mov	r18,r2
1000b248:	00019c40 	call	100019c4 <__mulsi3>
1000b24c:	b009883a 	mov	r4,r22
1000b250:	a80b883a 	mov	r5,r21
1000b254:	1023883a 	mov	r17,r2
1000b258:	00019c40 	call	100019c4 <__mulsi3>
1000b25c:	e006d43a 	srli	r3,fp,16
1000b260:	9085883a 	add	r2,r18,r2
1000b264:	10c7883a 	add	r3,r2,r3
1000b268:	1c80022e 	bgeu	r3,r18,1000b274 <__udivdi3+0x47c>
1000b26c:	00800074 	movhi	r2,1
1000b270:	88a3883a 	add	r17,r17,r2
1000b274:	1808d43a 	srli	r4,r3,16
1000b278:	8909883a 	add	r4,r17,r4
1000b27c:	81004436 	bltu	r16,r4,1000b390 <__udivdi3+0x598>
1000b280:	81003e26 	beq	r16,r4,1000b37c <__udivdi3+0x584>
1000b284:	a005883a 	mov	r2,r20
1000b288:	0007883a 	mov	r3,zero
1000b28c:	003f8f06 	br	1000b0cc <__alt_data_end+0xf800b0cc>
1000b290:	91e4983a 	sll	r18,r18,r7
1000b294:	80eed83a 	srl	r23,r16,r3
1000b298:	81cc983a 	sll	r6,r16,r7
1000b29c:	9028d43a 	srli	r20,r18,16
1000b2a0:	98c6d83a 	srl	r3,r19,r3
1000b2a4:	b809883a 	mov	r4,r23
1000b2a8:	a00b883a 	mov	r5,r20
1000b2ac:	30ecb03a 	or	r22,r6,r3
1000b2b0:	99e2983a 	sll	r17,r19,r7
1000b2b4:	00019bc0 	call	100019bc <__umodsi3>
1000b2b8:	b809883a 	mov	r4,r23
1000b2bc:	a00b883a 	mov	r5,r20
1000b2c0:	1021883a 	mov	r16,r2
1000b2c4:	957fffcc 	andi	r21,r18,65535
1000b2c8:	00019b40 	call	100019b4 <__udivsi3>
1000b2cc:	a80b883a 	mov	r5,r21
1000b2d0:	1009883a 	mov	r4,r2
1000b2d4:	102f883a 	mov	r23,r2
1000b2d8:	00019c40 	call	100019c4 <__mulsi3>
1000b2dc:	8020943a 	slli	r16,r16,16
1000b2e0:	b00ad43a 	srli	r5,r22,16
1000b2e4:	814cb03a 	or	r6,r16,r5
1000b2e8:	3080062e 	bgeu	r6,r2,1000b304 <__udivdi3+0x50c>
1000b2ec:	348d883a 	add	r6,r6,r18
1000b2f0:	b8ffffc4 	addi	r3,r23,-1
1000b2f4:	34804836 	bltu	r6,r18,1000b418 <__udivdi3+0x620>
1000b2f8:	3080472e 	bgeu	r6,r2,1000b418 <__udivdi3+0x620>
1000b2fc:	bdffff84 	addi	r23,r23,-2
1000b300:	348d883a 	add	r6,r6,r18
1000b304:	30a7c83a 	sub	r19,r6,r2
1000b308:	9809883a 	mov	r4,r19
1000b30c:	a00b883a 	mov	r5,r20
1000b310:	00019bc0 	call	100019bc <__umodsi3>
1000b314:	9809883a 	mov	r4,r19
1000b318:	a00b883a 	mov	r5,r20
1000b31c:	1039883a 	mov	fp,r2
1000b320:	00019b40 	call	100019b4 <__udivsi3>
1000b324:	1009883a 	mov	r4,r2
1000b328:	a80b883a 	mov	r5,r21
1000b32c:	e038943a 	slli	fp,fp,16
1000b330:	1027883a 	mov	r19,r2
1000b334:	00019c40 	call	100019c4 <__mulsi3>
1000b338:	b1bfffcc 	andi	r6,r22,65535
1000b33c:	e18cb03a 	or	r6,fp,r6
1000b340:	3080062e 	bgeu	r6,r2,1000b35c <__udivdi3+0x564>
1000b344:	348d883a 	add	r6,r6,r18
1000b348:	98ffffc4 	addi	r3,r19,-1
1000b34c:	34803036 	bltu	r6,r18,1000b410 <__udivdi3+0x618>
1000b350:	30802f2e 	bgeu	r6,r2,1000b410 <__udivdi3+0x618>
1000b354:	9cffff84 	addi	r19,r19,-2
1000b358:	348d883a 	add	r6,r6,r18
1000b35c:	b82e943a 	slli	r23,r23,16
1000b360:	30a1c83a 	sub	r16,r6,r2
1000b364:	9dc6b03a 	or	r3,r19,r23
1000b368:	003f2606 	br	1000b004 <__alt_data_end+0xf800b004>
1000b36c:	2027883a 	mov	r19,r4
1000b370:	003f5106 	br	1000b0b8 <__alt_data_end+0xf800b0b8>
1000b374:	1827883a 	mov	r19,r3
1000b378:	003ef006 	br	1000af3c <__alt_data_end+0xf800af3c>
1000b37c:	1808943a 	slli	r4,r3,16
1000b380:	9dc6983a 	sll	r3,r19,r23
1000b384:	e73fffcc 	andi	fp,fp,65535
1000b388:	2709883a 	add	r4,r4,fp
1000b38c:	193fbd2e 	bgeu	r3,r4,1000b284 <__alt_data_end+0xf800b284>
1000b390:	a0bfffc4 	addi	r2,r20,-1
1000b394:	0007883a 	mov	r3,zero
1000b398:	003f4c06 	br	1000b0cc <__alt_data_end+0xf800b0cc>
1000b39c:	01400404 	movi	r5,16
1000b3a0:	2811883a 	mov	r8,r5
1000b3a4:	003ef106 	br	1000af6c <__alt_data_end+0xf800af6c>
1000b3a8:	000b883a 	mov	r5,zero
1000b3ac:	0011883a 	mov	r8,zero
1000b3b0:	003eee06 	br	1000af6c <__alt_data_end+0xf800af6c>
1000b3b4:	00800404 	movi	r2,16
1000b3b8:	1007883a 	mov	r3,r2
1000b3bc:	003ea606 	br	1000ae58 <__alt_data_end+0xf800ae58>
1000b3c0:	00800404 	movi	r2,16
1000b3c4:	1007883a 	mov	r3,r2
1000b3c8:	003f0106 	br	1000afd0 <__alt_data_end+0xf800afd0>
1000b3cc:	0005883a 	mov	r2,zero
1000b3d0:	0007883a 	mov	r3,zero
1000b3d4:	003efe06 	br	1000afd0 <__alt_data_end+0xf800afd0>
1000b3d8:	0005883a 	mov	r2,zero
1000b3dc:	0007883a 	mov	r3,zero
1000b3e0:	003e9d06 	br	1000ae58 <__alt_data_end+0xf800ae58>
1000b3e4:	0007883a 	mov	r3,zero
1000b3e8:	00800044 	movi	r2,1
1000b3ec:	003f3706 	br	1000b0cc <__alt_data_end+0xf800b0cc>
1000b3f0:	80bf832e 	bgeu	r16,r2,1000b200 <__alt_data_end+0xf800b200>
1000b3f4:	8c7fff84 	addi	r17,r17,-2
1000b3f8:	8721883a 	add	r16,r16,fp
1000b3fc:	003f8106 	br	1000b204 <__alt_data_end+0xf800b204>
1000b400:	48bf6a2e 	bgeu	r9,r2,1000b1ac <__alt_data_end+0xf800b1ac>
1000b404:	a53fff84 	addi	r20,r20,-2
1000b408:	4f13883a 	add	r9,r9,fp
1000b40c:	003f6806 	br	1000b1b0 <__alt_data_end+0xf800b1b0>
1000b410:	1827883a 	mov	r19,r3
1000b414:	003fd106 	br	1000b35c <__alt_data_end+0xf800b35c>
1000b418:	182f883a 	mov	r23,r3
1000b41c:	003fb906 	br	1000b304 <__alt_data_end+0xf800b304>
1000b420:	843fff84 	addi	r16,r16,-2
1000b424:	348d883a 	add	r6,r6,r18
1000b428:	003f0c06 	br	1000b05c <__alt_data_end+0xf800b05c>
1000b42c:	843fff84 	addi	r16,r16,-2
1000b430:	1c87883a 	add	r3,r3,r18
1000b434:	003eac06 	br	1000aee8 <__alt_data_end+0xf800aee8>

1000b438 <__umoddi3>:
1000b438:	defff404 	addi	sp,sp,-48
1000b43c:	dd800815 	stw	r22,32(sp)
1000b440:	dc400315 	stw	r17,12(sp)
1000b444:	dc000215 	stw	r16,8(sp)
1000b448:	dfc00b15 	stw	ra,44(sp)
1000b44c:	df000a15 	stw	fp,40(sp)
1000b450:	ddc00915 	stw	r23,36(sp)
1000b454:	dd400715 	stw	r21,28(sp)
1000b458:	dd000615 	stw	r20,24(sp)
1000b45c:	dcc00515 	stw	r19,20(sp)
1000b460:	dc800415 	stw	r18,16(sp)
1000b464:	2021883a 	mov	r16,r4
1000b468:	2823883a 	mov	r17,r5
1000b46c:	282d883a 	mov	r22,r5
1000b470:	38003c1e 	bne	r7,zero,1000b564 <__umoddi3+0x12c>
1000b474:	3027883a 	mov	r19,r6
1000b478:	2029883a 	mov	r20,r4
1000b47c:	2980522e 	bgeu	r5,r6,1000b5c8 <__umoddi3+0x190>
1000b480:	00bfffd4 	movui	r2,65535
1000b484:	1180a436 	bltu	r2,r6,1000b718 <__umoddi3+0x2e0>
1000b488:	00803fc4 	movi	r2,255
1000b48c:	11815e2e 	bgeu	r2,r6,1000ba08 <__umoddi3+0x5d0>
1000b490:	01400204 	movi	r5,8
1000b494:	2805883a 	mov	r2,r5
1000b498:	314ad83a 	srl	r5,r6,r5
1000b49c:	00c40074 	movhi	r3,4097
1000b4a0:	18fd9d04 	addi	r3,r3,-2444
1000b4a4:	194b883a 	add	r5,r3,r5
1000b4a8:	29000003 	ldbu	r4,0(r5)
1000b4ac:	2089883a 	add	r4,r4,r2
1000b4b0:	00800804 	movi	r2,32
1000b4b4:	1105c83a 	sub	r2,r2,r4
1000b4b8:	10010c26 	beq	r2,zero,1000b8ec <__umoddi3+0x4b4>
1000b4bc:	88a2983a 	sll	r17,r17,r2
1000b4c0:	8108d83a 	srl	r4,r16,r4
1000b4c4:	30a6983a 	sll	r19,r6,r2
1000b4c8:	80a8983a 	sll	r20,r16,r2
1000b4cc:	1025883a 	mov	r18,r2
1000b4d0:	892cb03a 	or	r22,r17,r4
1000b4d4:	9822d43a 	srli	r17,r19,16
1000b4d8:	b009883a 	mov	r4,r22
1000b4dc:	9d7fffcc 	andi	r21,r19,65535
1000b4e0:	880b883a 	mov	r5,r17
1000b4e4:	00019bc0 	call	100019bc <__umodsi3>
1000b4e8:	b009883a 	mov	r4,r22
1000b4ec:	880b883a 	mov	r5,r17
1000b4f0:	102f883a 	mov	r23,r2
1000b4f4:	00019b40 	call	100019b4 <__udivsi3>
1000b4f8:	1009883a 	mov	r4,r2
1000b4fc:	a80b883a 	mov	r5,r21
1000b500:	00019c40 	call	100019c4 <__mulsi3>
1000b504:	b82e943a 	slli	r23,r23,16
1000b508:	a008d43a 	srli	r4,r20,16
1000b50c:	b906b03a 	or	r3,r23,r4
1000b510:	1880042e 	bgeu	r3,r2,1000b524 <__umoddi3+0xec>
1000b514:	1cc7883a 	add	r3,r3,r19
1000b518:	1cc00236 	bltu	r3,r19,1000b524 <__umoddi3+0xec>
1000b51c:	1880012e 	bgeu	r3,r2,1000b524 <__umoddi3+0xec>
1000b520:	1cc7883a 	add	r3,r3,r19
1000b524:	18a1c83a 	sub	r16,r3,r2
1000b528:	8009883a 	mov	r4,r16
1000b52c:	880b883a 	mov	r5,r17
1000b530:	00019bc0 	call	100019bc <__umodsi3>
1000b534:	8009883a 	mov	r4,r16
1000b538:	880b883a 	mov	r5,r17
1000b53c:	102d883a 	mov	r22,r2
1000b540:	00019b40 	call	100019b4 <__udivsi3>
1000b544:	1009883a 	mov	r4,r2
1000b548:	a80b883a 	mov	r5,r21
1000b54c:	b02c943a 	slli	r22,r22,16
1000b550:	00019c40 	call	100019c4 <__mulsi3>
1000b554:	a13fffcc 	andi	r4,r20,65535
1000b558:	b106b03a 	or	r3,r22,r4
1000b55c:	1880572e 	bgeu	r3,r2,1000b6bc <__umoddi3+0x284>
1000b560:	00005206 	br	1000b6ac <__umoddi3+0x274>
1000b564:	29c05936 	bltu	r5,r7,1000b6cc <__umoddi3+0x294>
1000b568:	00bfffd4 	movui	r2,65535
1000b56c:	11c0652e 	bgeu	r2,r7,1000b704 <__umoddi3+0x2cc>
1000b570:	00804034 	movhi	r2,256
1000b574:	10bfffc4 	addi	r2,r2,-1
1000b578:	11c1172e 	bgeu	r2,r7,1000b9d8 <__umoddi3+0x5a0>
1000b57c:	01400604 	movi	r5,24
1000b580:	282b883a 	mov	r21,r5
1000b584:	394ad83a 	srl	r5,r7,r5
1000b588:	00c40074 	movhi	r3,4097
1000b58c:	18fd9d04 	addi	r3,r3,-2444
1000b590:	194b883a 	add	r5,r3,r5
1000b594:	28800003 	ldbu	r2,0(r5)
1000b598:	00c00804 	movi	r3,32
1000b59c:	156b883a 	add	r21,r2,r21
1000b5a0:	1d69c83a 	sub	r20,r3,r21
1000b5a4:	a000671e 	bne	r20,zero,1000b744 <__umoddi3+0x30c>
1000b5a8:	3c400136 	bltu	r7,r17,1000b5b0 <__umoddi3+0x178>
1000b5ac:	81812336 	bltu	r16,r6,1000ba3c <__umoddi3+0x604>
1000b5b0:	8185c83a 	sub	r2,r16,r6
1000b5b4:	89e3c83a 	sub	r17,r17,r7
1000b5b8:	8087803a 	cmpltu	r3,r16,r2
1000b5bc:	88edc83a 	sub	r22,r17,r3
1000b5c0:	b007883a 	mov	r3,r22
1000b5c4:	00004306 	br	1000b6d4 <__umoddi3+0x29c>
1000b5c8:	3000041e 	bne	r6,zero,1000b5dc <__umoddi3+0x1a4>
1000b5cc:	01000044 	movi	r4,1
1000b5d0:	000b883a 	mov	r5,zero
1000b5d4:	00019b40 	call	100019b4 <__udivsi3>
1000b5d8:	1027883a 	mov	r19,r2
1000b5dc:	00bfffd4 	movui	r2,65535
1000b5e0:	14c0532e 	bgeu	r2,r19,1000b730 <__umoddi3+0x2f8>
1000b5e4:	00804034 	movhi	r2,256
1000b5e8:	10bfffc4 	addi	r2,r2,-1
1000b5ec:	14c1032e 	bgeu	r2,r19,1000b9fc <__umoddi3+0x5c4>
1000b5f0:	00800604 	movi	r2,24
1000b5f4:	1007883a 	mov	r3,r2
1000b5f8:	9884d83a 	srl	r2,r19,r2
1000b5fc:	01040074 	movhi	r4,4097
1000b600:	213d9d04 	addi	r4,r4,-2444
1000b604:	2085883a 	add	r2,r4,r2
1000b608:	11000003 	ldbu	r4,0(r2)
1000b60c:	00800804 	movi	r2,32
1000b610:	20c7883a 	add	r3,r4,r3
1000b614:	10c5c83a 	sub	r2,r2,r3
1000b618:	1000b61e 	bne	r2,zero,1000b8f4 <__umoddi3+0x4bc>
1000b61c:	982ad43a 	srli	r21,r19,16
1000b620:	8ce3c83a 	sub	r17,r17,r19
1000b624:	9dbfffcc 	andi	r22,r19,65535
1000b628:	0025883a 	mov	r18,zero
1000b62c:	8809883a 	mov	r4,r17
1000b630:	a80b883a 	mov	r5,r21
1000b634:	00019bc0 	call	100019bc <__umodsi3>
1000b638:	8809883a 	mov	r4,r17
1000b63c:	a80b883a 	mov	r5,r21
1000b640:	102f883a 	mov	r23,r2
1000b644:	00019b40 	call	100019b4 <__udivsi3>
1000b648:	1009883a 	mov	r4,r2
1000b64c:	b00b883a 	mov	r5,r22
1000b650:	00019c40 	call	100019c4 <__mulsi3>
1000b654:	b82e943a 	slli	r23,r23,16
1000b658:	a008d43a 	srli	r4,r20,16
1000b65c:	b906b03a 	or	r3,r23,r4
1000b660:	1880032e 	bgeu	r3,r2,1000b670 <__umoddi3+0x238>
1000b664:	1cc7883a 	add	r3,r3,r19
1000b668:	1cc00136 	bltu	r3,r19,1000b670 <__umoddi3+0x238>
1000b66c:	1880f136 	bltu	r3,r2,1000ba34 <__umoddi3+0x5fc>
1000b670:	18a1c83a 	sub	r16,r3,r2
1000b674:	8009883a 	mov	r4,r16
1000b678:	a80b883a 	mov	r5,r21
1000b67c:	00019bc0 	call	100019bc <__umodsi3>
1000b680:	8009883a 	mov	r4,r16
1000b684:	a80b883a 	mov	r5,r21
1000b688:	1023883a 	mov	r17,r2
1000b68c:	00019b40 	call	100019b4 <__udivsi3>
1000b690:	1009883a 	mov	r4,r2
1000b694:	b00b883a 	mov	r5,r22
1000b698:	8822943a 	slli	r17,r17,16
1000b69c:	00019c40 	call	100019c4 <__mulsi3>
1000b6a0:	a13fffcc 	andi	r4,r20,65535
1000b6a4:	8906b03a 	or	r3,r17,r4
1000b6a8:	1880042e 	bgeu	r3,r2,1000b6bc <__umoddi3+0x284>
1000b6ac:	1cc7883a 	add	r3,r3,r19
1000b6b0:	1cc00236 	bltu	r3,r19,1000b6bc <__umoddi3+0x284>
1000b6b4:	1880012e 	bgeu	r3,r2,1000b6bc <__umoddi3+0x284>
1000b6b8:	1cc7883a 	add	r3,r3,r19
1000b6bc:	1887c83a 	sub	r3,r3,r2
1000b6c0:	1c84d83a 	srl	r2,r3,r18
1000b6c4:	0007883a 	mov	r3,zero
1000b6c8:	00000206 	br	1000b6d4 <__umoddi3+0x29c>
1000b6cc:	2005883a 	mov	r2,r4
1000b6d0:	2807883a 	mov	r3,r5
1000b6d4:	dfc00b17 	ldw	ra,44(sp)
1000b6d8:	df000a17 	ldw	fp,40(sp)
1000b6dc:	ddc00917 	ldw	r23,36(sp)
1000b6e0:	dd800817 	ldw	r22,32(sp)
1000b6e4:	dd400717 	ldw	r21,28(sp)
1000b6e8:	dd000617 	ldw	r20,24(sp)
1000b6ec:	dcc00517 	ldw	r19,20(sp)
1000b6f0:	dc800417 	ldw	r18,16(sp)
1000b6f4:	dc400317 	ldw	r17,12(sp)
1000b6f8:	dc000217 	ldw	r16,8(sp)
1000b6fc:	dec00c04 	addi	sp,sp,48
1000b700:	f800283a 	ret
1000b704:	00803fc4 	movi	r2,255
1000b708:	11c0b02e 	bgeu	r2,r7,1000b9cc <__umoddi3+0x594>
1000b70c:	01400204 	movi	r5,8
1000b710:	282b883a 	mov	r21,r5
1000b714:	003f9b06 	br	1000b584 <__alt_data_end+0xf800b584>
1000b718:	00804034 	movhi	r2,256
1000b71c:	10bfffc4 	addi	r2,r2,-1
1000b720:	1180b02e 	bgeu	r2,r6,1000b9e4 <__umoddi3+0x5ac>
1000b724:	01400604 	movi	r5,24
1000b728:	2805883a 	mov	r2,r5
1000b72c:	003f5a06 	br	1000b498 <__alt_data_end+0xf800b498>
1000b730:	00803fc4 	movi	r2,255
1000b734:	14c0ae2e 	bgeu	r2,r19,1000b9f0 <__umoddi3+0x5b8>
1000b738:	00800204 	movi	r2,8
1000b73c:	1007883a 	mov	r3,r2
1000b740:	003fad06 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000b744:	3d0a983a 	sll	r5,r7,r20
1000b748:	356cd83a 	srl	r22,r6,r21
1000b74c:	8d78d83a 	srl	fp,r17,r21
1000b750:	8d10983a 	sll	r8,r17,r20
1000b754:	2dacb03a 	or	r22,r5,r22
1000b758:	b02ed43a 	srli	r23,r22,16
1000b75c:	8564d83a 	srl	r18,r16,r21
1000b760:	e009883a 	mov	r4,fp
1000b764:	b80b883a 	mov	r5,r23
1000b768:	44a4b03a 	or	r18,r8,r18
1000b76c:	3526983a 	sll	r19,r6,r20
1000b770:	00019bc0 	call	100019bc <__umodsi3>
1000b774:	e009883a 	mov	r4,fp
1000b778:	b80b883a 	mov	r5,r23
1000b77c:	b47fffcc 	andi	r17,r22,65535
1000b780:	d8800015 	stw	r2,0(sp)
1000b784:	00019b40 	call	100019b4 <__udivsi3>
1000b788:	1009883a 	mov	r4,r2
1000b78c:	880b883a 	mov	r5,r17
1000b790:	1039883a 	mov	fp,r2
1000b794:	00019c40 	call	100019c4 <__mulsi3>
1000b798:	d9800017 	ldw	r6,0(sp)
1000b79c:	9008d43a 	srli	r4,r18,16
1000b7a0:	8520983a 	sll	r16,r16,r20
1000b7a4:	300c943a 	slli	r6,r6,16
1000b7a8:	3106b03a 	or	r3,r6,r4
1000b7ac:	1880042e 	bgeu	r3,r2,1000b7c0 <__umoddi3+0x388>
1000b7b0:	1d87883a 	add	r3,r3,r22
1000b7b4:	e13fffc4 	addi	r4,fp,-1
1000b7b8:	1d809a2e 	bgeu	r3,r22,1000ba24 <__umoddi3+0x5ec>
1000b7bc:	2039883a 	mov	fp,r4
1000b7c0:	1887c83a 	sub	r3,r3,r2
1000b7c4:	1809883a 	mov	r4,r3
1000b7c8:	b80b883a 	mov	r5,r23
1000b7cc:	d8c00115 	stw	r3,4(sp)
1000b7d0:	00019bc0 	call	100019bc <__umodsi3>
1000b7d4:	d8c00117 	ldw	r3,4(sp)
1000b7d8:	b80b883a 	mov	r5,r23
1000b7dc:	d8800015 	stw	r2,0(sp)
1000b7e0:	1809883a 	mov	r4,r3
1000b7e4:	00019b40 	call	100019b4 <__udivsi3>
1000b7e8:	880b883a 	mov	r5,r17
1000b7ec:	1009883a 	mov	r4,r2
1000b7f0:	102f883a 	mov	r23,r2
1000b7f4:	00019c40 	call	100019c4 <__mulsi3>
1000b7f8:	d9800017 	ldw	r6,0(sp)
1000b7fc:	947fffcc 	andi	r17,r18,65535
1000b800:	300c943a 	slli	r6,r6,16
1000b804:	3464b03a 	or	r18,r6,r17
1000b808:	9080042e 	bgeu	r18,r2,1000b81c <__umoddi3+0x3e4>
1000b80c:	95a5883a 	add	r18,r18,r22
1000b810:	b8ffffc4 	addi	r3,r23,-1
1000b814:	95807f2e 	bgeu	r18,r22,1000ba14 <__umoddi3+0x5dc>
1000b818:	182f883a 	mov	r23,r3
1000b81c:	e038943a 	slli	fp,fp,16
1000b820:	980cd43a 	srli	r6,r19,16
1000b824:	98ffffcc 	andi	r3,r19,65535
1000b828:	bf38b03a 	or	fp,r23,fp
1000b82c:	e02ed43a 	srli	r23,fp,16
1000b830:	e73fffcc 	andi	fp,fp,65535
1000b834:	180b883a 	mov	r5,r3
1000b838:	e009883a 	mov	r4,fp
1000b83c:	d9800015 	stw	r6,0(sp)
1000b840:	d8c00115 	stw	r3,4(sp)
1000b844:	90a5c83a 	sub	r18,r18,r2
1000b848:	00019c40 	call	100019c4 <__mulsi3>
1000b84c:	d8c00117 	ldw	r3,4(sp)
1000b850:	b809883a 	mov	r4,r23
1000b854:	1023883a 	mov	r17,r2
1000b858:	180b883a 	mov	r5,r3
1000b85c:	00019c40 	call	100019c4 <__mulsi3>
1000b860:	d9800017 	ldw	r6,0(sp)
1000b864:	b809883a 	mov	r4,r23
1000b868:	d8800115 	stw	r2,4(sp)
1000b86c:	300b883a 	mov	r5,r6
1000b870:	302f883a 	mov	r23,r6
1000b874:	00019c40 	call	100019c4 <__mulsi3>
1000b878:	e009883a 	mov	r4,fp
1000b87c:	b80b883a 	mov	r5,r23
1000b880:	d8800015 	stw	r2,0(sp)
1000b884:	00019c40 	call	100019c4 <__mulsi3>
1000b888:	d8c00117 	ldw	r3,4(sp)
1000b88c:	880cd43a 	srli	r6,r17,16
1000b890:	d9c00017 	ldw	r7,0(sp)
1000b894:	1885883a 	add	r2,r3,r2
1000b898:	118d883a 	add	r6,r2,r6
1000b89c:	30c0022e 	bgeu	r6,r3,1000b8a8 <__umoddi3+0x470>
1000b8a0:	00800074 	movhi	r2,1
1000b8a4:	388f883a 	add	r7,r7,r2
1000b8a8:	3006d43a 	srli	r3,r6,16
1000b8ac:	300c943a 	slli	r6,r6,16
1000b8b0:	8c7fffcc 	andi	r17,r17,65535
1000b8b4:	38c7883a 	add	r3,r7,r3
1000b8b8:	3463883a 	add	r17,r6,r17
1000b8bc:	90c03d36 	bltu	r18,r3,1000b9b4 <__umoddi3+0x57c>
1000b8c0:	90c06026 	beq	r18,r3,1000ba44 <__umoddi3+0x60c>
1000b8c4:	90c9c83a 	sub	r4,r18,r3
1000b8c8:	880f883a 	mov	r7,r17
1000b8cc:	81cfc83a 	sub	r7,r16,r7
1000b8d0:	81c7803a 	cmpltu	r3,r16,r7
1000b8d4:	20c7c83a 	sub	r3,r4,r3
1000b8d8:	1d44983a 	sll	r2,r3,r21
1000b8dc:	3d0ed83a 	srl	r7,r7,r20
1000b8e0:	1d06d83a 	srl	r3,r3,r20
1000b8e4:	11c4b03a 	or	r2,r2,r7
1000b8e8:	003f7a06 	br	1000b6d4 <__alt_data_end+0xf800b6d4>
1000b8ec:	0025883a 	mov	r18,zero
1000b8f0:	003ef806 	br	1000b4d4 <__alt_data_end+0xf800b4d4>
1000b8f4:	98a6983a 	sll	r19,r19,r2
1000b8f8:	88e8d83a 	srl	r20,r17,r3
1000b8fc:	80c6d83a 	srl	r3,r16,r3
1000b900:	982ad43a 	srli	r21,r19,16
1000b904:	88a2983a 	sll	r17,r17,r2
1000b908:	a009883a 	mov	r4,r20
1000b90c:	a80b883a 	mov	r5,r21
1000b910:	88eeb03a 	or	r23,r17,r3
1000b914:	1025883a 	mov	r18,r2
1000b918:	00019bc0 	call	100019bc <__umodsi3>
1000b91c:	a009883a 	mov	r4,r20
1000b920:	a80b883a 	mov	r5,r21
1000b924:	1023883a 	mov	r17,r2
1000b928:	9dbfffcc 	andi	r22,r19,65535
1000b92c:	00019b40 	call	100019b4 <__udivsi3>
1000b930:	1009883a 	mov	r4,r2
1000b934:	b00b883a 	mov	r5,r22
1000b938:	00019c40 	call	100019c4 <__mulsi3>
1000b93c:	8822943a 	slli	r17,r17,16
1000b940:	b808d43a 	srli	r4,r23,16
1000b944:	84a8983a 	sll	r20,r16,r18
1000b948:	8906b03a 	or	r3,r17,r4
1000b94c:	1880042e 	bgeu	r3,r2,1000b960 <__umoddi3+0x528>
1000b950:	1cc7883a 	add	r3,r3,r19
1000b954:	1cc00236 	bltu	r3,r19,1000b960 <__umoddi3+0x528>
1000b958:	1880012e 	bgeu	r3,r2,1000b960 <__umoddi3+0x528>
1000b95c:	1cc7883a 	add	r3,r3,r19
1000b960:	18a1c83a 	sub	r16,r3,r2
1000b964:	8009883a 	mov	r4,r16
1000b968:	a80b883a 	mov	r5,r21
1000b96c:	00019bc0 	call	100019bc <__umodsi3>
1000b970:	8009883a 	mov	r4,r16
1000b974:	a80b883a 	mov	r5,r21
1000b978:	1039883a 	mov	fp,r2
1000b97c:	00019b40 	call	100019b4 <__udivsi3>
1000b980:	1009883a 	mov	r4,r2
1000b984:	b00b883a 	mov	r5,r22
1000b988:	00019c40 	call	100019c4 <__mulsi3>
1000b98c:	e006943a 	slli	r3,fp,16
1000b990:	b93fffcc 	andi	r4,r23,65535
1000b994:	1906b03a 	or	r3,r3,r4
1000b998:	1880042e 	bgeu	r3,r2,1000b9ac <__umoddi3+0x574>
1000b99c:	1cc7883a 	add	r3,r3,r19
1000b9a0:	1cc00236 	bltu	r3,r19,1000b9ac <__umoddi3+0x574>
1000b9a4:	1880012e 	bgeu	r3,r2,1000b9ac <__umoddi3+0x574>
1000b9a8:	1cc7883a 	add	r3,r3,r19
1000b9ac:	18a3c83a 	sub	r17,r3,r2
1000b9b0:	003f1e06 	br	1000b62c <__alt_data_end+0xf800b62c>
1000b9b4:	8ccfc83a 	sub	r7,r17,r19
1000b9b8:	1d89c83a 	sub	r4,r3,r22
1000b9bc:	89e3803a 	cmpltu	r17,r17,r7
1000b9c0:	2463c83a 	sub	r17,r4,r17
1000b9c4:	9449c83a 	sub	r4,r18,r17
1000b9c8:	003fc006 	br	1000b8cc <__alt_data_end+0xf800b8cc>
1000b9cc:	000b883a 	mov	r5,zero
1000b9d0:	002b883a 	mov	r21,zero
1000b9d4:	003eeb06 	br	1000b584 <__alt_data_end+0xf800b584>
1000b9d8:	01400404 	movi	r5,16
1000b9dc:	282b883a 	mov	r21,r5
1000b9e0:	003ee806 	br	1000b584 <__alt_data_end+0xf800b584>
1000b9e4:	01400404 	movi	r5,16
1000b9e8:	2805883a 	mov	r2,r5
1000b9ec:	003eaa06 	br	1000b498 <__alt_data_end+0xf800b498>
1000b9f0:	0005883a 	mov	r2,zero
1000b9f4:	0007883a 	mov	r3,zero
1000b9f8:	003eff06 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000b9fc:	00800404 	movi	r2,16
1000ba00:	1007883a 	mov	r3,r2
1000ba04:	003efc06 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000ba08:	000b883a 	mov	r5,zero
1000ba0c:	0005883a 	mov	r2,zero
1000ba10:	003ea106 	br	1000b498 <__alt_data_end+0xf800b498>
1000ba14:	90bf802e 	bgeu	r18,r2,1000b818 <__alt_data_end+0xf800b818>
1000ba18:	bdffff84 	addi	r23,r23,-2
1000ba1c:	95a5883a 	add	r18,r18,r22
1000ba20:	003f7e06 	br	1000b81c <__alt_data_end+0xf800b81c>
1000ba24:	18bf652e 	bgeu	r3,r2,1000b7bc <__alt_data_end+0xf800b7bc>
1000ba28:	e73fff84 	addi	fp,fp,-2
1000ba2c:	1d87883a 	add	r3,r3,r22
1000ba30:	003f6306 	br	1000b7c0 <__alt_data_end+0xf800b7c0>
1000ba34:	1cc7883a 	add	r3,r3,r19
1000ba38:	003f0d06 	br	1000b670 <__alt_data_end+0xf800b670>
1000ba3c:	8005883a 	mov	r2,r16
1000ba40:	003edf06 	br	1000b5c0 <__alt_data_end+0xf800b5c0>
1000ba44:	847fdb36 	bltu	r16,r17,1000b9b4 <__alt_data_end+0xf800b9b4>
1000ba48:	880f883a 	mov	r7,r17
1000ba4c:	0009883a 	mov	r4,zero
1000ba50:	003f9e06 	br	1000b8cc <__alt_data_end+0xf800b8cc>

1000ba54 <__adddf3>:
1000ba54:	02000434 	movhi	r8,16
1000ba58:	423fffc4 	addi	r8,r8,-1
1000ba5c:	defffb04 	addi	sp,sp,-20
1000ba60:	2a12703a 	and	r9,r5,r8
1000ba64:	2806d7fa 	srli	r3,r5,31
1000ba68:	3a10703a 	and	r8,r7,r8
1000ba6c:	3804d53a 	srli	r2,r7,20
1000ba70:	3014d77a 	srli	r10,r6,29
1000ba74:	dc000015 	stw	r16,0(sp)
1000ba78:	481290fa 	slli	r9,r9,3
1000ba7c:	2820d53a 	srli	r16,r5,20
1000ba80:	401090fa 	slli	r8,r8,3
1000ba84:	200ad77a 	srli	r5,r4,29
1000ba88:	380ed7fa 	srli	r7,r7,31
1000ba8c:	dc800215 	stw	r18,8(sp)
1000ba90:	dc400115 	stw	r17,4(sp)
1000ba94:	dfc00415 	stw	ra,16(sp)
1000ba98:	dcc00315 	stw	r19,12(sp)
1000ba9c:	1c803fcc 	andi	r18,r3,255
1000baa0:	8401ffcc 	andi	r16,r16,2047
1000baa4:	494ab03a 	or	r5,r9,r5
1000baa8:	202290fa 	slli	r17,r4,3
1000baac:	1081ffcc 	andi	r2,r2,2047
1000bab0:	4290b03a 	or	r8,r8,r10
1000bab4:	300c90fa 	slli	r6,r6,3
1000bab8:	91c07026 	beq	r18,r7,1000bc7c <__adddf3+0x228>
1000babc:	8087c83a 	sub	r3,r16,r2
1000bac0:	00c0b30e 	bge	zero,r3,1000bd90 <__adddf3+0x33c>
1000bac4:	10002a1e 	bne	r2,zero,1000bb70 <__adddf3+0x11c>
1000bac8:	4184b03a 	or	r2,r8,r6
1000bacc:	1000991e 	bne	r2,zero,1000bd34 <__adddf3+0x2e0>
1000bad0:	888001cc 	andi	r2,r17,7
1000bad4:	10005b26 	beq	r2,zero,1000bc44 <__adddf3+0x1f0>
1000bad8:	88c003cc 	andi	r3,r17,15
1000badc:	00800104 	movi	r2,4
1000bae0:	18805826 	beq	r3,r2,1000bc44 <__adddf3+0x1f0>
1000bae4:	89800104 	addi	r6,r17,4
1000bae8:	3463803a 	cmpltu	r17,r6,r17
1000baec:	2c4b883a 	add	r5,r5,r17
1000baf0:	2880202c 	andhi	r2,r5,128
1000baf4:	9007883a 	mov	r3,r18
1000baf8:	3023883a 	mov	r17,r6
1000bafc:	10005426 	beq	r2,zero,1000bc50 <__adddf3+0x1fc>
1000bb00:	84000044 	addi	r16,r16,1
1000bb04:	0081ffc4 	movi	r2,2047
1000bb08:	8080c126 	beq	r16,r2,1000be10 <__adddf3+0x3bc>
1000bb0c:	013fe034 	movhi	r4,65408
1000bb10:	213fffc4 	addi	r4,r4,-1
1000bb14:	290a703a 	and	r5,r5,r4
1000bb18:	2804977a 	slli	r2,r5,29
1000bb1c:	280a927a 	slli	r5,r5,9
1000bb20:	8822d0fa 	srli	r17,r17,3
1000bb24:	8401ffcc 	andi	r16,r16,2047
1000bb28:	2808d33a 	srli	r4,r5,12
1000bb2c:	1444b03a 	or	r2,r2,r17
1000bb30:	8401ffcc 	andi	r16,r16,2047
1000bb34:	800a953a 	slli	r5,r16,20
1000bb38:	18c03fcc 	andi	r3,r3,255
1000bb3c:	04000434 	movhi	r16,16
1000bb40:	180697fa 	slli	r3,r3,31
1000bb44:	843fffc4 	addi	r16,r16,-1
1000bb48:	2420703a 	and	r16,r4,r16
1000bb4c:	8160b03a 	or	r16,r16,r5
1000bb50:	80c6b03a 	or	r3,r16,r3
1000bb54:	dfc00417 	ldw	ra,16(sp)
1000bb58:	dcc00317 	ldw	r19,12(sp)
1000bb5c:	dc800217 	ldw	r18,8(sp)
1000bb60:	dc400117 	ldw	r17,4(sp)
1000bb64:	dc000017 	ldw	r16,0(sp)
1000bb68:	dec00504 	addi	sp,sp,20
1000bb6c:	f800283a 	ret
1000bb70:	0081ffc4 	movi	r2,2047
1000bb74:	80bfd626 	beq	r16,r2,1000bad0 <__alt_data_end+0xf800bad0>
1000bb78:	42002034 	orhi	r8,r8,128
1000bb7c:	00800e04 	movi	r2,56
1000bb80:	10c0a616 	blt	r2,r3,1000be1c <__adddf3+0x3c8>
1000bb84:	008007c4 	movi	r2,31
1000bb88:	10c0c916 	blt	r2,r3,1000beb0 <__adddf3+0x45c>
1000bb8c:	00800804 	movi	r2,32
1000bb90:	10c5c83a 	sub	r2,r2,r3
1000bb94:	408e983a 	sll	r7,r8,r2
1000bb98:	30c8d83a 	srl	r4,r6,r3
1000bb9c:	3084983a 	sll	r2,r6,r2
1000bba0:	40c6d83a 	srl	r3,r8,r3
1000bba4:	390cb03a 	or	r6,r7,r4
1000bba8:	1004c03a 	cmpne	r2,r2,zero
1000bbac:	308cb03a 	or	r6,r6,r2
1000bbb0:	898dc83a 	sub	r6,r17,r6
1000bbb4:	89a3803a 	cmpltu	r17,r17,r6
1000bbb8:	28cbc83a 	sub	r5,r5,r3
1000bbbc:	2c4bc83a 	sub	r5,r5,r17
1000bbc0:	3023883a 	mov	r17,r6
1000bbc4:	2880202c 	andhi	r2,r5,128
1000bbc8:	10006d26 	beq	r2,zero,1000bd80 <__adddf3+0x32c>
1000bbcc:	04c02034 	movhi	r19,128
1000bbd0:	9cffffc4 	addi	r19,r19,-1
1000bbd4:	2ce6703a 	and	r19,r5,r19
1000bbd8:	98007e26 	beq	r19,zero,1000bdd4 <__adddf3+0x380>
1000bbdc:	9809883a 	mov	r4,r19
1000bbe0:	00018340 	call	10001834 <__clzsi2>
1000bbe4:	10fffe04 	addi	r3,r2,-8
1000bbe8:	010007c4 	movi	r4,31
1000bbec:	20c07f16 	blt	r4,r3,1000bdec <__adddf3+0x398>
1000bbf0:	01400a04 	movi	r5,40
1000bbf4:	2885c83a 	sub	r2,r5,r2
1000bbf8:	888ad83a 	srl	r5,r17,r2
1000bbfc:	98e6983a 	sll	r19,r19,r3
1000bc00:	88e2983a 	sll	r17,r17,r3
1000bc04:	2ce6b03a 	or	r19,r5,r19
1000bc08:	1c007c16 	blt	r3,r16,1000bdfc <__adddf3+0x3a8>
1000bc0c:	1c21c83a 	sub	r16,r3,r16
1000bc10:	81400044 	addi	r5,r16,1
1000bc14:	00c007c4 	movi	r3,31
1000bc18:	19409816 	blt	r3,r5,1000be7c <__adddf3+0x428>
1000bc1c:	1c21c83a 	sub	r16,r3,r16
1000bc20:	8c08983a 	sll	r4,r17,r16
1000bc24:	8946d83a 	srl	r3,r17,r5
1000bc28:	9c20983a 	sll	r16,r19,r16
1000bc2c:	2008c03a 	cmpne	r4,r4,zero
1000bc30:	994ad83a 	srl	r5,r19,r5
1000bc34:	1c06b03a 	or	r3,r3,r16
1000bc38:	1922b03a 	or	r17,r3,r4
1000bc3c:	0021883a 	mov	r16,zero
1000bc40:	003fa306 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000bc44:	2880202c 	andhi	r2,r5,128
1000bc48:	9007883a 	mov	r3,r18
1000bc4c:	103fac1e 	bne	r2,zero,1000bb00 <__alt_data_end+0xf800bb00>
1000bc50:	2804977a 	slli	r2,r5,29
1000bc54:	8822d0fa 	srli	r17,r17,3
1000bc58:	0101ffc4 	movi	r4,2047
1000bc5c:	280ad0fa 	srli	r5,r5,3
1000bc60:	1444b03a 	or	r2,r2,r17
1000bc64:	81002c26 	beq	r16,r4,1000bd18 <__adddf3+0x2c4>
1000bc68:	8120703a 	and	r16,r16,r4
1000bc6c:	01000434 	movhi	r4,16
1000bc70:	213fffc4 	addi	r4,r4,-1
1000bc74:	2908703a 	and	r4,r5,r4
1000bc78:	003fad06 	br	1000bb30 <__alt_data_end+0xf800bb30>
1000bc7c:	8089c83a 	sub	r4,r16,r2
1000bc80:	01006a0e 	bge	zero,r4,1000be2c <__adddf3+0x3d8>
1000bc84:	10003326 	beq	r2,zero,1000bd54 <__adddf3+0x300>
1000bc88:	0081ffc4 	movi	r2,2047
1000bc8c:	80bf9026 	beq	r16,r2,1000bad0 <__alt_data_end+0xf800bad0>
1000bc90:	42002034 	orhi	r8,r8,128
1000bc94:	00800e04 	movi	r2,56
1000bc98:	1100b116 	blt	r2,r4,1000bf60 <__adddf3+0x50c>
1000bc9c:	008007c4 	movi	r2,31
1000bca0:	1100e216 	blt	r2,r4,1000c02c <__adddf3+0x5d8>
1000bca4:	00800804 	movi	r2,32
1000bca8:	1105c83a 	sub	r2,r2,r4
1000bcac:	4092983a 	sll	r9,r8,r2
1000bcb0:	310ed83a 	srl	r7,r6,r4
1000bcb4:	3084983a 	sll	r2,r6,r2
1000bcb8:	4110d83a 	srl	r8,r8,r4
1000bcbc:	49ccb03a 	or	r6,r9,r7
1000bcc0:	1004c03a 	cmpne	r2,r2,zero
1000bcc4:	308cb03a 	or	r6,r6,r2
1000bcc8:	344d883a 	add	r6,r6,r17
1000bccc:	3463803a 	cmpltu	r17,r6,r17
1000bcd0:	414b883a 	add	r5,r8,r5
1000bcd4:	2c4b883a 	add	r5,r5,r17
1000bcd8:	3023883a 	mov	r17,r6
1000bcdc:	2880202c 	andhi	r2,r5,128
1000bce0:	10002726 	beq	r2,zero,1000bd80 <__adddf3+0x32c>
1000bce4:	84000044 	addi	r16,r16,1
1000bce8:	0081ffc4 	movi	r2,2047
1000bcec:	8080ae26 	beq	r16,r2,1000bfa8 <__adddf3+0x554>
1000bcf0:	00bfe034 	movhi	r2,65408
1000bcf4:	10bfffc4 	addi	r2,r2,-1
1000bcf8:	288a703a 	and	r5,r5,r2
1000bcfc:	880cd07a 	srli	r6,r17,1
1000bd00:	280897fa 	slli	r4,r5,31
1000bd04:	88c0004c 	andi	r3,r17,1
1000bd08:	30e2b03a 	or	r17,r6,r3
1000bd0c:	280ad07a 	srli	r5,r5,1
1000bd10:	8922b03a 	or	r17,r17,r4
1000bd14:	003f6e06 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000bd18:	1148b03a 	or	r4,r2,r5
1000bd1c:	20003c26 	beq	r4,zero,1000be10 <__adddf3+0x3bc>
1000bd20:	29000234 	orhi	r4,r5,8
1000bd24:	01400434 	movhi	r5,16
1000bd28:	297fffc4 	addi	r5,r5,-1
1000bd2c:	2148703a 	and	r4,r4,r5
1000bd30:	003f7f06 	br	1000bb30 <__alt_data_end+0xf800bb30>
1000bd34:	18ffffc4 	addi	r3,r3,-1
1000bd38:	18004d1e 	bne	r3,zero,1000be70 <__adddf3+0x41c>
1000bd3c:	898dc83a 	sub	r6,r17,r6
1000bd40:	89a3803a 	cmpltu	r17,r17,r6
1000bd44:	2a0bc83a 	sub	r5,r5,r8
1000bd48:	2c4bc83a 	sub	r5,r5,r17
1000bd4c:	3023883a 	mov	r17,r6
1000bd50:	003f9c06 	br	1000bbc4 <__alt_data_end+0xf800bbc4>
1000bd54:	4184b03a 	or	r2,r8,r6
1000bd58:	103f5d26 	beq	r2,zero,1000bad0 <__alt_data_end+0xf800bad0>
1000bd5c:	213fffc4 	addi	r4,r4,-1
1000bd60:	203fd926 	beq	r4,zero,1000bcc8 <__alt_data_end+0xf800bcc8>
1000bd64:	0081ffc4 	movi	r2,2047
1000bd68:	80bfca1e 	bne	r16,r2,1000bc94 <__alt_data_end+0xf800bc94>
1000bd6c:	003f5806 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000bd70:	10c8b03a 	or	r4,r2,r3
1000bd74:	20008b26 	beq	r4,zero,1000bfa4 <__adddf3+0x550>
1000bd78:	100b883a 	mov	r5,r2
1000bd7c:	1823883a 	mov	r17,r3
1000bd80:	888001cc 	andi	r2,r17,7
1000bd84:	103f541e 	bne	r2,zero,1000bad8 <__alt_data_end+0xf800bad8>
1000bd88:	9007883a 	mov	r3,r18
1000bd8c:	003fb006 	br	1000bc50 <__alt_data_end+0xf800bc50>
1000bd90:	1800531e 	bne	r3,zero,1000bee0 <__adddf3+0x48c>
1000bd94:	80800044 	addi	r2,r16,1
1000bd98:	1081ffcc 	andi	r2,r2,2047
1000bd9c:	00c00044 	movi	r3,1
1000bda0:	1880990e 	bge	r3,r2,1000c008 <__adddf3+0x5b4>
1000bda4:	8985c83a 	sub	r2,r17,r6
1000bda8:	8887803a 	cmpltu	r3,r17,r2
1000bdac:	2a27c83a 	sub	r19,r5,r8
1000bdb0:	98e7c83a 	sub	r19,r19,r3
1000bdb4:	98c0202c 	andhi	r3,r19,128
1000bdb8:	18006226 	beq	r3,zero,1000bf44 <__adddf3+0x4f0>
1000bdbc:	3463c83a 	sub	r17,r6,r17
1000bdc0:	4151c83a 	sub	r8,r8,r5
1000bdc4:	344d803a 	cmpltu	r6,r6,r17
1000bdc8:	41a7c83a 	sub	r19,r8,r6
1000bdcc:	3825883a 	mov	r18,r7
1000bdd0:	983f821e 	bne	r19,zero,1000bbdc <__alt_data_end+0xf800bbdc>
1000bdd4:	8809883a 	mov	r4,r17
1000bdd8:	00018340 	call	10001834 <__clzsi2>
1000bddc:	10800804 	addi	r2,r2,32
1000bde0:	10fffe04 	addi	r3,r2,-8
1000bde4:	010007c4 	movi	r4,31
1000bde8:	20ff810e 	bge	r4,r3,1000bbf0 <__alt_data_end+0xf800bbf0>
1000bdec:	14fff604 	addi	r19,r2,-40
1000bdf0:	8ce6983a 	sll	r19,r17,r19
1000bdf4:	0023883a 	mov	r17,zero
1000bdf8:	1c3f840e 	bge	r3,r16,1000bc0c <__alt_data_end+0xf800bc0c>
1000bdfc:	017fe034 	movhi	r5,65408
1000be00:	297fffc4 	addi	r5,r5,-1
1000be04:	80e1c83a 	sub	r16,r16,r3
1000be08:	994a703a 	and	r5,r19,r5
1000be0c:	003f3006 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000be10:	0009883a 	mov	r4,zero
1000be14:	0005883a 	mov	r2,zero
1000be18:	003f4506 	br	1000bb30 <__alt_data_end+0xf800bb30>
1000be1c:	418cb03a 	or	r6,r8,r6
1000be20:	300cc03a 	cmpne	r6,r6,zero
1000be24:	0007883a 	mov	r3,zero
1000be28:	003f6106 	br	1000bbb0 <__alt_data_end+0xf800bbb0>
1000be2c:	2000921e 	bne	r4,zero,1000c078 <__adddf3+0x624>
1000be30:	80800044 	addi	r2,r16,1
1000be34:	11c1ffcc 	andi	r7,r2,2047
1000be38:	01000044 	movi	r4,1
1000be3c:	21c0610e 	bge	r4,r7,1000bfc4 <__adddf3+0x570>
1000be40:	0101ffc4 	movi	r4,2047
1000be44:	1100a326 	beq	r2,r4,1000c0d4 <__adddf3+0x680>
1000be48:	344d883a 	add	r6,r6,r17
1000be4c:	3463803a 	cmpltu	r17,r6,r17
1000be50:	414b883a 	add	r5,r8,r5
1000be54:	2c4b883a 	add	r5,r5,r17
1000be58:	282297fa 	slli	r17,r5,31
1000be5c:	300cd07a 	srli	r6,r6,1
1000be60:	280ad07a 	srli	r5,r5,1
1000be64:	1021883a 	mov	r16,r2
1000be68:	89a2b03a 	or	r17,r17,r6
1000be6c:	003f1806 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000be70:	0081ffc4 	movi	r2,2047
1000be74:	80bf411e 	bne	r16,r2,1000bb7c <__alt_data_end+0xf800bb7c>
1000be78:	003f1506 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000be7c:	80bff844 	addi	r2,r16,-31
1000be80:	00c00804 	movi	r3,32
1000be84:	9884d83a 	srl	r2,r19,r2
1000be88:	28c04a26 	beq	r5,r3,1000bfb4 <__adddf3+0x560>
1000be8c:	00c00fc4 	movi	r3,63
1000be90:	1c21c83a 	sub	r16,r3,r16
1000be94:	9c26983a 	sll	r19,r19,r16
1000be98:	9c62b03a 	or	r17,r19,r17
1000be9c:	8822c03a 	cmpne	r17,r17,zero
1000bea0:	88a2b03a 	or	r17,r17,r2
1000bea4:	000b883a 	mov	r5,zero
1000bea8:	0021883a 	mov	r16,zero
1000beac:	003fb406 	br	1000bd80 <__alt_data_end+0xf800bd80>
1000beb0:	18bff804 	addi	r2,r3,-32
1000beb4:	01000804 	movi	r4,32
1000beb8:	4084d83a 	srl	r2,r8,r2
1000bebc:	19003f26 	beq	r3,r4,1000bfbc <__adddf3+0x568>
1000bec0:	01001004 	movi	r4,64
1000bec4:	20c7c83a 	sub	r3,r4,r3
1000bec8:	40d0983a 	sll	r8,r8,r3
1000becc:	418cb03a 	or	r6,r8,r6
1000bed0:	300cc03a 	cmpne	r6,r6,zero
1000bed4:	308cb03a 	or	r6,r6,r2
1000bed8:	0007883a 	mov	r3,zero
1000bedc:	003f3406 	br	1000bbb0 <__alt_data_end+0xf800bbb0>
1000bee0:	80002326 	beq	r16,zero,1000bf70 <__adddf3+0x51c>
1000bee4:	0101ffc4 	movi	r4,2047
1000bee8:	11005e26 	beq	r2,r4,1000c064 <__adddf3+0x610>
1000beec:	00c7c83a 	sub	r3,zero,r3
1000bef0:	29402034 	orhi	r5,r5,128
1000bef4:	01000e04 	movi	r4,56
1000bef8:	20c07216 	blt	r4,r3,1000c0c4 <__adddf3+0x670>
1000befc:	010007c4 	movi	r4,31
1000bf00:	20c0ce16 	blt	r4,r3,1000c23c <__adddf3+0x7e8>
1000bf04:	01000804 	movi	r4,32
1000bf08:	20c9c83a 	sub	r4,r4,r3
1000bf0c:	2914983a 	sll	r10,r5,r4
1000bf10:	88d2d83a 	srl	r9,r17,r3
1000bf14:	8908983a 	sll	r4,r17,r4
1000bf18:	28c6d83a 	srl	r3,r5,r3
1000bf1c:	5262b03a 	or	r17,r10,r9
1000bf20:	2008c03a 	cmpne	r4,r4,zero
1000bf24:	8922b03a 	or	r17,r17,r4
1000bf28:	3463c83a 	sub	r17,r6,r17
1000bf2c:	40c7c83a 	sub	r3,r8,r3
1000bf30:	344d803a 	cmpltu	r6,r6,r17
1000bf34:	198bc83a 	sub	r5,r3,r6
1000bf38:	1021883a 	mov	r16,r2
1000bf3c:	3825883a 	mov	r18,r7
1000bf40:	003f2006 	br	1000bbc4 <__alt_data_end+0xf800bbc4>
1000bf44:	9886b03a 	or	r3,r19,r2
1000bf48:	1800141e 	bne	r3,zero,1000bf9c <__adddf3+0x548>
1000bf4c:	0007883a 	mov	r3,zero
1000bf50:	000b883a 	mov	r5,zero
1000bf54:	0023883a 	mov	r17,zero
1000bf58:	0021883a 	mov	r16,zero
1000bf5c:	003f3c06 	br	1000bc50 <__alt_data_end+0xf800bc50>
1000bf60:	418cb03a 	or	r6,r8,r6
1000bf64:	300cc03a 	cmpne	r6,r6,zero
1000bf68:	0011883a 	mov	r8,zero
1000bf6c:	003f5606 	br	1000bcc8 <__alt_data_end+0xf800bcc8>
1000bf70:	2c48b03a 	or	r4,r5,r17
1000bf74:	20003b26 	beq	r4,zero,1000c064 <__adddf3+0x610>
1000bf78:	00c6303a 	nor	r3,zero,r3
1000bf7c:	1800371e 	bne	r3,zero,1000c05c <__adddf3+0x608>
1000bf80:	3463c83a 	sub	r17,r6,r17
1000bf84:	414bc83a 	sub	r5,r8,r5
1000bf88:	344d803a 	cmpltu	r6,r6,r17
1000bf8c:	298bc83a 	sub	r5,r5,r6
1000bf90:	1021883a 	mov	r16,r2
1000bf94:	3825883a 	mov	r18,r7
1000bf98:	003f0a06 	br	1000bbc4 <__alt_data_end+0xf800bbc4>
1000bf9c:	1023883a 	mov	r17,r2
1000bfa0:	003f0d06 	br	1000bbd8 <__alt_data_end+0xf800bbd8>
1000bfa4:	0007883a 	mov	r3,zero
1000bfa8:	000b883a 	mov	r5,zero
1000bfac:	0023883a 	mov	r17,zero
1000bfb0:	003f2706 	br	1000bc50 <__alt_data_end+0xf800bc50>
1000bfb4:	0027883a 	mov	r19,zero
1000bfb8:	003fb706 	br	1000be98 <__alt_data_end+0xf800be98>
1000bfbc:	0011883a 	mov	r8,zero
1000bfc0:	003fc206 	br	1000becc <__alt_data_end+0xf800becc>
1000bfc4:	2c44b03a 	or	r2,r5,r17
1000bfc8:	8000871e 	bne	r16,zero,1000c1e8 <__adddf3+0x794>
1000bfcc:	1000b126 	beq	r2,zero,1000c294 <__adddf3+0x840>
1000bfd0:	4184b03a 	or	r2,r8,r6
1000bfd4:	103ebe26 	beq	r2,zero,1000bad0 <__alt_data_end+0xf800bad0>
1000bfd8:	3445883a 	add	r2,r6,r17
1000bfdc:	1463803a 	cmpltu	r17,r2,r17
1000bfe0:	414b883a 	add	r5,r8,r5
1000bfe4:	2c4b883a 	add	r5,r5,r17
1000bfe8:	28c0202c 	andhi	r3,r5,128
1000bfec:	1023883a 	mov	r17,r2
1000bff0:	183f6326 	beq	r3,zero,1000bd80 <__alt_data_end+0xf800bd80>
1000bff4:	00bfe034 	movhi	r2,65408
1000bff8:	10bfffc4 	addi	r2,r2,-1
1000bffc:	2021883a 	mov	r16,r4
1000c000:	288a703a 	and	r5,r5,r2
1000c004:	003eb206 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c008:	2c44b03a 	or	r2,r5,r17
1000c00c:	8000251e 	bne	r16,zero,1000c0a4 <__adddf3+0x650>
1000c010:	10004b1e 	bne	r2,zero,1000c140 <__adddf3+0x6ec>
1000c014:	4184b03a 	or	r2,r8,r6
1000c018:	103fe226 	beq	r2,zero,1000bfa4 <__alt_data_end+0xf800bfa4>
1000c01c:	400b883a 	mov	r5,r8
1000c020:	3023883a 	mov	r17,r6
1000c024:	3825883a 	mov	r18,r7
1000c028:	003ea906 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c02c:	20bff804 	addi	r2,r4,-32
1000c030:	01c00804 	movi	r7,32
1000c034:	4084d83a 	srl	r2,r8,r2
1000c038:	21c07e26 	beq	r4,r7,1000c234 <__adddf3+0x7e0>
1000c03c:	01c01004 	movi	r7,64
1000c040:	3909c83a 	sub	r4,r7,r4
1000c044:	4110983a 	sll	r8,r8,r4
1000c048:	418cb03a 	or	r6,r8,r6
1000c04c:	300cc03a 	cmpne	r6,r6,zero
1000c050:	308cb03a 	or	r6,r6,r2
1000c054:	0011883a 	mov	r8,zero
1000c058:	003f1b06 	br	1000bcc8 <__alt_data_end+0xf800bcc8>
1000c05c:	0101ffc4 	movi	r4,2047
1000c060:	113fa41e 	bne	r2,r4,1000bef4 <__alt_data_end+0xf800bef4>
1000c064:	400b883a 	mov	r5,r8
1000c068:	3023883a 	mov	r17,r6
1000c06c:	1021883a 	mov	r16,r2
1000c070:	3825883a 	mov	r18,r7
1000c074:	003e9606 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c078:	80001a1e 	bne	r16,zero,1000c0e4 <__adddf3+0x690>
1000c07c:	2c4eb03a 	or	r7,r5,r17
1000c080:	38005526 	beq	r7,zero,1000c1d8 <__adddf3+0x784>
1000c084:	0108303a 	nor	r4,zero,r4
1000c088:	2000511e 	bne	r4,zero,1000c1d0 <__adddf3+0x77c>
1000c08c:	89a3883a 	add	r17,r17,r6
1000c090:	414b883a 	add	r5,r8,r5
1000c094:	898d803a 	cmpltu	r6,r17,r6
1000c098:	298b883a 	add	r5,r5,r6
1000c09c:	1021883a 	mov	r16,r2
1000c0a0:	003f0e06 	br	1000bcdc <__alt_data_end+0xf800bcdc>
1000c0a4:	1000341e 	bne	r2,zero,1000c178 <__adddf3+0x724>
1000c0a8:	4184b03a 	or	r2,r8,r6
1000c0ac:	10006f26 	beq	r2,zero,1000c26c <__adddf3+0x818>
1000c0b0:	400b883a 	mov	r5,r8
1000c0b4:	3023883a 	mov	r17,r6
1000c0b8:	3825883a 	mov	r18,r7
1000c0bc:	0401ffc4 	movi	r16,2047
1000c0c0:	003e8306 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c0c4:	2c62b03a 	or	r17,r5,r17
1000c0c8:	8822c03a 	cmpne	r17,r17,zero
1000c0cc:	0007883a 	mov	r3,zero
1000c0d0:	003f9506 	br	1000bf28 <__alt_data_end+0xf800bf28>
1000c0d4:	1021883a 	mov	r16,r2
1000c0d8:	000b883a 	mov	r5,zero
1000c0dc:	0023883a 	mov	r17,zero
1000c0e0:	003edb06 	br	1000bc50 <__alt_data_end+0xf800bc50>
1000c0e4:	01c1ffc4 	movi	r7,2047
1000c0e8:	11c03b26 	beq	r2,r7,1000c1d8 <__adddf3+0x784>
1000c0ec:	0109c83a 	sub	r4,zero,r4
1000c0f0:	29402034 	orhi	r5,r5,128
1000c0f4:	01c00e04 	movi	r7,56
1000c0f8:	39006216 	blt	r7,r4,1000c284 <__adddf3+0x830>
1000c0fc:	01c007c4 	movi	r7,31
1000c100:	39006b16 	blt	r7,r4,1000c2b0 <__adddf3+0x85c>
1000c104:	01c00804 	movi	r7,32
1000c108:	390fc83a 	sub	r7,r7,r4
1000c10c:	29d4983a 	sll	r10,r5,r7
1000c110:	8912d83a 	srl	r9,r17,r4
1000c114:	89ce983a 	sll	r7,r17,r7
1000c118:	2908d83a 	srl	r4,r5,r4
1000c11c:	5262b03a 	or	r17,r10,r9
1000c120:	380ac03a 	cmpne	r5,r7,zero
1000c124:	8962b03a 	or	r17,r17,r5
1000c128:	89a3883a 	add	r17,r17,r6
1000c12c:	2211883a 	add	r8,r4,r8
1000c130:	898d803a 	cmpltu	r6,r17,r6
1000c134:	418b883a 	add	r5,r8,r6
1000c138:	1021883a 	mov	r16,r2
1000c13c:	003ee706 	br	1000bcdc <__alt_data_end+0xf800bcdc>
1000c140:	4184b03a 	or	r2,r8,r6
1000c144:	103e6226 	beq	r2,zero,1000bad0 <__alt_data_end+0xf800bad0>
1000c148:	8987c83a 	sub	r3,r17,r6
1000c14c:	88c9803a 	cmpltu	r4,r17,r3
1000c150:	2a05c83a 	sub	r2,r5,r8
1000c154:	1105c83a 	sub	r2,r2,r4
1000c158:	1100202c 	andhi	r4,r2,128
1000c15c:	203f0426 	beq	r4,zero,1000bd70 <__alt_data_end+0xf800bd70>
1000c160:	3463c83a 	sub	r17,r6,r17
1000c164:	414bc83a 	sub	r5,r8,r5
1000c168:	344d803a 	cmpltu	r6,r6,r17
1000c16c:	298bc83a 	sub	r5,r5,r6
1000c170:	3825883a 	mov	r18,r7
1000c174:	003e5606 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c178:	4184b03a 	or	r2,r8,r6
1000c17c:	10002b26 	beq	r2,zero,1000c22c <__adddf3+0x7d8>
1000c180:	2804d0fa 	srli	r2,r5,3
1000c184:	8822d0fa 	srli	r17,r17,3
1000c188:	280a977a 	slli	r5,r5,29
1000c18c:	10c0022c 	andhi	r3,r2,8
1000c190:	2c62b03a 	or	r17,r5,r17
1000c194:	18000826 	beq	r3,zero,1000c1b8 <__adddf3+0x764>
1000c198:	4008d0fa 	srli	r4,r8,3
1000c19c:	20c0022c 	andhi	r3,r4,8
1000c1a0:	1800051e 	bne	r3,zero,1000c1b8 <__adddf3+0x764>
1000c1a4:	300cd0fa 	srli	r6,r6,3
1000c1a8:	4010977a 	slli	r8,r8,29
1000c1ac:	2005883a 	mov	r2,r4
1000c1b0:	3825883a 	mov	r18,r7
1000c1b4:	41a2b03a 	or	r17,r8,r6
1000c1b8:	880ad77a 	srli	r5,r17,29
1000c1bc:	100490fa 	slli	r2,r2,3
1000c1c0:	882290fa 	slli	r17,r17,3
1000c1c4:	0401ffc4 	movi	r16,2047
1000c1c8:	288ab03a 	or	r5,r5,r2
1000c1cc:	003e4006 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c1d0:	01c1ffc4 	movi	r7,2047
1000c1d4:	11ffc71e 	bne	r2,r7,1000c0f4 <__alt_data_end+0xf800c0f4>
1000c1d8:	400b883a 	mov	r5,r8
1000c1dc:	3023883a 	mov	r17,r6
1000c1e0:	1021883a 	mov	r16,r2
1000c1e4:	003e3a06 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c1e8:	10002d26 	beq	r2,zero,1000c2a0 <__adddf3+0x84c>
1000c1ec:	4184b03a 	or	r2,r8,r6
1000c1f0:	10000e26 	beq	r2,zero,1000c22c <__adddf3+0x7d8>
1000c1f4:	2804d0fa 	srli	r2,r5,3
1000c1f8:	8822d0fa 	srli	r17,r17,3
1000c1fc:	280a977a 	slli	r5,r5,29
1000c200:	10c0022c 	andhi	r3,r2,8
1000c204:	2c62b03a 	or	r17,r5,r17
1000c208:	183feb26 	beq	r3,zero,1000c1b8 <__alt_data_end+0xf800c1b8>
1000c20c:	4008d0fa 	srli	r4,r8,3
1000c210:	20c0022c 	andhi	r3,r4,8
1000c214:	183fe81e 	bne	r3,zero,1000c1b8 <__alt_data_end+0xf800c1b8>
1000c218:	300cd0fa 	srli	r6,r6,3
1000c21c:	4010977a 	slli	r8,r8,29
1000c220:	2005883a 	mov	r2,r4
1000c224:	41a2b03a 	or	r17,r8,r6
1000c228:	003fe306 	br	1000c1b8 <__alt_data_end+0xf800c1b8>
1000c22c:	0401ffc4 	movi	r16,2047
1000c230:	003e2706 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c234:	0011883a 	mov	r8,zero
1000c238:	003f8306 	br	1000c048 <__alt_data_end+0xf800c048>
1000c23c:	193ff804 	addi	r4,r3,-32
1000c240:	02400804 	movi	r9,32
1000c244:	2908d83a 	srl	r4,r5,r4
1000c248:	1a402526 	beq	r3,r9,1000c2e0 <__adddf3+0x88c>
1000c24c:	02401004 	movi	r9,64
1000c250:	48c7c83a 	sub	r3,r9,r3
1000c254:	28ca983a 	sll	r5,r5,r3
1000c258:	2c62b03a 	or	r17,r5,r17
1000c25c:	8822c03a 	cmpne	r17,r17,zero
1000c260:	8922b03a 	or	r17,r17,r4
1000c264:	0007883a 	mov	r3,zero
1000c268:	003f2f06 	br	1000bf28 <__alt_data_end+0xf800bf28>
1000c26c:	01402034 	movhi	r5,128
1000c270:	0007883a 	mov	r3,zero
1000c274:	297fffc4 	addi	r5,r5,-1
1000c278:	047ffe04 	movi	r17,-8
1000c27c:	0401ffc4 	movi	r16,2047
1000c280:	003e7306 	br	1000bc50 <__alt_data_end+0xf800bc50>
1000c284:	2c62b03a 	or	r17,r5,r17
1000c288:	8822c03a 	cmpne	r17,r17,zero
1000c28c:	0009883a 	mov	r4,zero
1000c290:	003fa506 	br	1000c128 <__alt_data_end+0xf800c128>
1000c294:	400b883a 	mov	r5,r8
1000c298:	3023883a 	mov	r17,r6
1000c29c:	003e0c06 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c2a0:	400b883a 	mov	r5,r8
1000c2a4:	3023883a 	mov	r17,r6
1000c2a8:	0401ffc4 	movi	r16,2047
1000c2ac:	003e0806 	br	1000bad0 <__alt_data_end+0xf800bad0>
1000c2b0:	21fff804 	addi	r7,r4,-32
1000c2b4:	02400804 	movi	r9,32
1000c2b8:	29ced83a 	srl	r7,r5,r7
1000c2bc:	22400a26 	beq	r4,r9,1000c2e8 <__adddf3+0x894>
1000c2c0:	02401004 	movi	r9,64
1000c2c4:	4909c83a 	sub	r4,r9,r4
1000c2c8:	290a983a 	sll	r5,r5,r4
1000c2cc:	2c62b03a 	or	r17,r5,r17
1000c2d0:	8822c03a 	cmpne	r17,r17,zero
1000c2d4:	89e2b03a 	or	r17,r17,r7
1000c2d8:	0009883a 	mov	r4,zero
1000c2dc:	003f9206 	br	1000c128 <__alt_data_end+0xf800c128>
1000c2e0:	000b883a 	mov	r5,zero
1000c2e4:	003fdc06 	br	1000c258 <__alt_data_end+0xf800c258>
1000c2e8:	000b883a 	mov	r5,zero
1000c2ec:	003ff706 	br	1000c2cc <__alt_data_end+0xf800c2cc>

1000c2f0 <__eqdf2>:
1000c2f0:	2804d53a 	srli	r2,r5,20
1000c2f4:	3806d53a 	srli	r3,r7,20
1000c2f8:	02000434 	movhi	r8,16
1000c2fc:	423fffc4 	addi	r8,r8,-1
1000c300:	1081ffcc 	andi	r2,r2,2047
1000c304:	0241ffc4 	movi	r9,2047
1000c308:	2a14703a 	and	r10,r5,r8
1000c30c:	18c1ffcc 	andi	r3,r3,2047
1000c310:	3a10703a 	and	r8,r7,r8
1000c314:	280ad7fa 	srli	r5,r5,31
1000c318:	380ed7fa 	srli	r7,r7,31
1000c31c:	12400f26 	beq	r2,r9,1000c35c <__eqdf2+0x6c>
1000c320:	0241ffc4 	movi	r9,2047
1000c324:	1a400326 	beq	r3,r9,1000c334 <__eqdf2+0x44>
1000c328:	10c00526 	beq	r2,r3,1000c340 <__eqdf2+0x50>
1000c32c:	00800044 	movi	r2,1
1000c330:	f800283a 	ret
1000c334:	4192b03a 	or	r9,r8,r6
1000c338:	483ffc1e 	bne	r9,zero,1000c32c <__alt_data_end+0xf800c32c>
1000c33c:	10fffb1e 	bne	r2,r3,1000c32c <__alt_data_end+0xf800c32c>
1000c340:	523ffa1e 	bne	r10,r8,1000c32c <__alt_data_end+0xf800c32c>
1000c344:	21bff91e 	bne	r4,r6,1000c32c <__alt_data_end+0xf800c32c>
1000c348:	29c00826 	beq	r5,r7,1000c36c <__eqdf2+0x7c>
1000c34c:	103ff71e 	bne	r2,zero,1000c32c <__alt_data_end+0xf800c32c>
1000c350:	5104b03a 	or	r2,r10,r4
1000c354:	1004c03a 	cmpne	r2,r2,zero
1000c358:	f800283a 	ret
1000c35c:	5112b03a 	or	r9,r10,r4
1000c360:	483fef26 	beq	r9,zero,1000c320 <__alt_data_end+0xf800c320>
1000c364:	00800044 	movi	r2,1
1000c368:	f800283a 	ret
1000c36c:	0005883a 	mov	r2,zero
1000c370:	f800283a 	ret

1000c374 <__ledf2>:
1000c374:	2804d53a 	srli	r2,r5,20
1000c378:	3810d53a 	srli	r8,r7,20
1000c37c:	00c00434 	movhi	r3,16
1000c380:	18ffffc4 	addi	r3,r3,-1
1000c384:	0241ffc4 	movi	r9,2047
1000c388:	1081ffcc 	andi	r2,r2,2047
1000c38c:	28d4703a 	and	r10,r5,r3
1000c390:	4250703a 	and	r8,r8,r9
1000c394:	38c6703a 	and	r3,r7,r3
1000c398:	280ad7fa 	srli	r5,r5,31
1000c39c:	380ed7fa 	srli	r7,r7,31
1000c3a0:	12400b26 	beq	r2,r9,1000c3d0 <__ledf2+0x5c>
1000c3a4:	42401926 	beq	r8,r9,1000c40c <__ledf2+0x98>
1000c3a8:	10000c1e 	bne	r2,zero,1000c3dc <__ledf2+0x68>
1000c3ac:	5112b03a 	or	r9,r10,r4
1000c3b0:	4813003a 	cmpeq	r9,r9,zero
1000c3b4:	4817883a 	mov	r11,r9
1000c3b8:	40000f26 	beq	r8,zero,1000c3f8 <__ledf2+0x84>
1000c3bc:	39c03fcc 	andi	r7,r7,255
1000c3c0:	58001826 	beq	r11,zero,1000c424 <__ledf2+0xb0>
1000c3c4:	38000a1e 	bne	r7,zero,1000c3f0 <__ledf2+0x7c>
1000c3c8:	00bfffc4 	movi	r2,-1
1000c3cc:	f800283a 	ret
1000c3d0:	5112b03a 	or	r9,r10,r4
1000c3d4:	48000f1e 	bne	r9,zero,1000c414 <__ledf2+0xa0>
1000c3d8:	40800c26 	beq	r8,r2,1000c40c <__ledf2+0x98>
1000c3dc:	4000101e 	bne	r8,zero,1000c420 <__ledf2+0xac>
1000c3e0:	1992b03a 	or	r9,r3,r6
1000c3e4:	0017883a 	mov	r11,zero
1000c3e8:	483ff41e 	bne	r9,zero,1000c3bc <__alt_data_end+0xf800c3bc>
1000c3ec:	283ff61e 	bne	r5,zero,1000c3c8 <__alt_data_end+0xf800c3c8>
1000c3f0:	00800044 	movi	r2,1
1000c3f4:	f800283a 	ret
1000c3f8:	1998b03a 	or	r12,r3,r6
1000c3fc:	603fef1e 	bne	r12,zero,1000c3bc <__alt_data_end+0xf800c3bc>
1000c400:	483ffa26 	beq	r9,zero,1000c3ec <__alt_data_end+0xf800c3ec>
1000c404:	0005883a 	mov	r2,zero
1000c408:	f800283a 	ret
1000c40c:	1992b03a 	or	r9,r3,r6
1000c410:	48000226 	beq	r9,zero,1000c41c <__ledf2+0xa8>
1000c414:	00800084 	movi	r2,2
1000c418:	f800283a 	ret
1000c41c:	103fe326 	beq	r2,zero,1000c3ac <__alt_data_end+0xf800c3ac>
1000c420:	39c03fcc 	andi	r7,r7,255
1000c424:	29fff11e 	bne	r5,r7,1000c3ec <__alt_data_end+0xf800c3ec>
1000c428:	40bff016 	blt	r8,r2,1000c3ec <__alt_data_end+0xf800c3ec>
1000c42c:	12000316 	blt	r2,r8,1000c43c <__ledf2+0xc8>
1000c430:	1abfee36 	bltu	r3,r10,1000c3ec <__alt_data_end+0xf800c3ec>
1000c434:	50c00326 	beq	r10,r3,1000c444 <__ledf2+0xd0>
1000c438:	50fff22e 	bgeu	r10,r3,1000c404 <__alt_data_end+0xf800c404>
1000c43c:	283fe226 	beq	r5,zero,1000c3c8 <__alt_data_end+0xf800c3c8>
1000c440:	003feb06 	br	1000c3f0 <__alt_data_end+0xf800c3f0>
1000c444:	313fe936 	bltu	r6,r4,1000c3ec <__alt_data_end+0xf800c3ec>
1000c448:	21bfee2e 	bgeu	r4,r6,1000c404 <__alt_data_end+0xf800c404>
1000c44c:	283fde26 	beq	r5,zero,1000c3c8 <__alt_data_end+0xf800c3c8>
1000c450:	003fe706 	br	1000c3f0 <__alt_data_end+0xf800c3f0>

1000c454 <__muldf3>:
1000c454:	deffee04 	addi	sp,sp,-72
1000c458:	dd000c15 	stw	r20,48(sp)
1000c45c:	2828d53a 	srli	r20,r5,20
1000c460:	dd400d15 	stw	r21,52(sp)
1000c464:	282ad7fa 	srli	r21,r5,31
1000c468:	dc000815 	stw	r16,32(sp)
1000c46c:	04000434 	movhi	r16,16
1000c470:	ddc00f15 	stw	r23,60(sp)
1000c474:	dcc00b15 	stw	r19,44(sp)
1000c478:	dc800a15 	stw	r18,40(sp)
1000c47c:	843fffc4 	addi	r16,r16,-1
1000c480:	dfc01115 	stw	ra,68(sp)
1000c484:	df001015 	stw	fp,64(sp)
1000c488:	dd800e15 	stw	r22,56(sp)
1000c48c:	dc400915 	stw	r17,36(sp)
1000c490:	a501ffcc 	andi	r20,r20,2047
1000c494:	2025883a 	mov	r18,r4
1000c498:	202f883a 	mov	r23,r4
1000c49c:	2c20703a 	and	r16,r5,r16
1000c4a0:	a827883a 	mov	r19,r21
1000c4a4:	aa403fcc 	andi	r9,r21,255
1000c4a8:	a0005926 	beq	r20,zero,1000c610 <__muldf3+0x1bc>
1000c4ac:	0081ffc4 	movi	r2,2047
1000c4b0:	a0803426 	beq	r20,r2,1000c584 <__muldf3+0x130>
1000c4b4:	84000434 	orhi	r16,r16,16
1000c4b8:	2004d77a 	srli	r2,r4,29
1000c4bc:	802090fa 	slli	r16,r16,3
1000c4c0:	202e90fa 	slli	r23,r4,3
1000c4c4:	a53f0044 	addi	r20,r20,-1023
1000c4c8:	80a0b03a 	or	r16,r16,r2
1000c4cc:	000b883a 	mov	r5,zero
1000c4d0:	0039883a 	mov	fp,zero
1000c4d4:	3806d53a 	srli	r3,r7,20
1000c4d8:	382cd7fa 	srli	r22,r7,31
1000c4dc:	00800434 	movhi	r2,16
1000c4e0:	10bfffc4 	addi	r2,r2,-1
1000c4e4:	18c1ffcc 	andi	r3,r3,2047
1000c4e8:	3025883a 	mov	r18,r6
1000c4ec:	38a2703a 	and	r17,r7,r2
1000c4f0:	b2803fcc 	andi	r10,r22,255
1000c4f4:	18006426 	beq	r3,zero,1000c688 <__muldf3+0x234>
1000c4f8:	0081ffc4 	movi	r2,2047
1000c4fc:	18805c26 	beq	r3,r2,1000c670 <__muldf3+0x21c>
1000c500:	8c400434 	orhi	r17,r17,16
1000c504:	3004d77a 	srli	r2,r6,29
1000c508:	882290fa 	slli	r17,r17,3
1000c50c:	302490fa 	slli	r18,r6,3
1000c510:	18ff0044 	addi	r3,r3,-1023
1000c514:	88a2b03a 	or	r17,r17,r2
1000c518:	000f883a 	mov	r7,zero
1000c51c:	394ab03a 	or	r5,r7,r5
1000c520:	280a90ba 	slli	r5,r5,2
1000c524:	00840074 	movhi	r2,4097
1000c528:	10b15104 	addi	r2,r2,-15036
1000c52c:	288b883a 	add	r5,r5,r2
1000c530:	28800017 	ldw	r2,0(r5)
1000c534:	a0c7883a 	add	r3,r20,r3
1000c538:	b54cf03a 	xor	r6,r22,r21
1000c53c:	1a000044 	addi	r8,r3,1
1000c540:	1000683a 	jmp	r2
1000c544:	1000c788 	cmpgei	zero,r2,798
1000c548:	1000c774 	orhi	zero,r2,797
1000c54c:	1000c774 	orhi	zero,r2,797
1000c550:	1000c760 	cmpeqi	zero,r2,797
1000c554:	1000c5a0 	cmpeqi	zero,r2,790
1000c558:	1000c5a0 	cmpeqi	zero,r2,790
1000c55c:	1000c748 	cmpgei	zero,r2,797
1000c560:	1000c760 	cmpeqi	zero,r2,797
1000c564:	1000c5a0 	cmpeqi	zero,r2,790
1000c568:	1000c748 	cmpgei	zero,r2,797
1000c56c:	1000c5a0 	cmpeqi	zero,r2,790
1000c570:	1000c760 	cmpeqi	zero,r2,797
1000c574:	1000c5a4 	muli	zero,r2,790
1000c578:	1000c5a4 	muli	zero,r2,790
1000c57c:	1000c5a4 	muli	zero,r2,790
1000c580:	1000cac4 	addi	zero,r2,811
1000c584:	8104b03a 	or	r2,r16,r4
1000c588:	10006c1e 	bne	r2,zero,1000c73c <__muldf3+0x2e8>
1000c58c:	01400204 	movi	r5,8
1000c590:	0021883a 	mov	r16,zero
1000c594:	002f883a 	mov	r23,zero
1000c598:	07000084 	movi	fp,2
1000c59c:	003fcd06 	br	1000c4d4 <__alt_data_end+0xf800c4d4>
1000c5a0:	3013883a 	mov	r9,r6
1000c5a4:	00800084 	movi	r2,2
1000c5a8:	e080501e 	bne	fp,r2,1000c6ec <__muldf3+0x298>
1000c5ac:	4cc0004c 	andi	r19,r9,1
1000c5b0:	0101ffc4 	movi	r4,2047
1000c5b4:	0021883a 	mov	r16,zero
1000c5b8:	002f883a 	mov	r23,zero
1000c5bc:	2008953a 	slli	r4,r4,20
1000c5c0:	98c03fcc 	andi	r3,r19,255
1000c5c4:	04400434 	movhi	r17,16
1000c5c8:	8c7fffc4 	addi	r17,r17,-1
1000c5cc:	180697fa 	slli	r3,r3,31
1000c5d0:	8460703a 	and	r16,r16,r17
1000c5d4:	8120b03a 	or	r16,r16,r4
1000c5d8:	80c6b03a 	or	r3,r16,r3
1000c5dc:	b805883a 	mov	r2,r23
1000c5e0:	dfc01117 	ldw	ra,68(sp)
1000c5e4:	df001017 	ldw	fp,64(sp)
1000c5e8:	ddc00f17 	ldw	r23,60(sp)
1000c5ec:	dd800e17 	ldw	r22,56(sp)
1000c5f0:	dd400d17 	ldw	r21,52(sp)
1000c5f4:	dd000c17 	ldw	r20,48(sp)
1000c5f8:	dcc00b17 	ldw	r19,44(sp)
1000c5fc:	dc800a17 	ldw	r18,40(sp)
1000c600:	dc400917 	ldw	r17,36(sp)
1000c604:	dc000817 	ldw	r16,32(sp)
1000c608:	dec01204 	addi	sp,sp,72
1000c60c:	f800283a 	ret
1000c610:	8104b03a 	or	r2,r16,r4
1000c614:	10004426 	beq	r2,zero,1000c728 <__muldf3+0x2d4>
1000c618:	80014b26 	beq	r16,zero,1000cb48 <__muldf3+0x6f4>
1000c61c:	8009883a 	mov	r4,r16
1000c620:	d9800715 	stw	r6,28(sp)
1000c624:	d9c00215 	stw	r7,8(sp)
1000c628:	da400415 	stw	r9,16(sp)
1000c62c:	00018340 	call	10001834 <__clzsi2>
1000c630:	d9800717 	ldw	r6,28(sp)
1000c634:	d9c00217 	ldw	r7,8(sp)
1000c638:	da400417 	ldw	r9,16(sp)
1000c63c:	1007883a 	mov	r3,r2
1000c640:	01000a04 	movi	r4,40
1000c644:	1dfffe04 	addi	r23,r3,-8
1000c648:	20c9c83a 	sub	r4,r4,r3
1000c64c:	85e0983a 	sll	r16,r16,r23
1000c650:	9108d83a 	srl	r4,r18,r4
1000c654:	95ee983a 	sll	r23,r18,r23
1000c658:	2420b03a 	or	r16,r4,r16
1000c65c:	053f0344 	movi	r20,-1011
1000c660:	a0e9c83a 	sub	r20,r20,r3
1000c664:	000b883a 	mov	r5,zero
1000c668:	0039883a 	mov	fp,zero
1000c66c:	003f9906 	br	1000c4d4 <__alt_data_end+0xf800c4d4>
1000c670:	8984b03a 	or	r2,r17,r6
1000c674:	10002a1e 	bne	r2,zero,1000c720 <__muldf3+0x2cc>
1000c678:	0023883a 	mov	r17,zero
1000c67c:	0025883a 	mov	r18,zero
1000c680:	01c00084 	movi	r7,2
1000c684:	003fa506 	br	1000c51c <__alt_data_end+0xf800c51c>
1000c688:	8984b03a 	or	r2,r17,r6
1000c68c:	10002026 	beq	r2,zero,1000c710 <__muldf3+0x2bc>
1000c690:	88011c26 	beq	r17,zero,1000cb04 <__muldf3+0x6b0>
1000c694:	8809883a 	mov	r4,r17
1000c698:	d9400215 	stw	r5,8(sp)
1000c69c:	d9800715 	stw	r6,28(sp)
1000c6a0:	da400415 	stw	r9,16(sp)
1000c6a4:	da800315 	stw	r10,12(sp)
1000c6a8:	00018340 	call	10001834 <__clzsi2>
1000c6ac:	d9400217 	ldw	r5,8(sp)
1000c6b0:	d9800717 	ldw	r6,28(sp)
1000c6b4:	da400417 	ldw	r9,16(sp)
1000c6b8:	da800317 	ldw	r10,12(sp)
1000c6bc:	1007883a 	mov	r3,r2
1000c6c0:	01000a04 	movi	r4,40
1000c6c4:	1cbffe04 	addi	r18,r3,-8
1000c6c8:	20c9c83a 	sub	r4,r4,r3
1000c6cc:	8ca2983a 	sll	r17,r17,r18
1000c6d0:	3108d83a 	srl	r4,r6,r4
1000c6d4:	34a4983a 	sll	r18,r6,r18
1000c6d8:	2462b03a 	or	r17,r4,r17
1000c6dc:	00bf0344 	movi	r2,-1011
1000c6e0:	10c7c83a 	sub	r3,r2,r3
1000c6e4:	000f883a 	mov	r7,zero
1000c6e8:	003f8c06 	br	1000c51c <__alt_data_end+0xf800c51c>
1000c6ec:	008000c4 	movi	r2,3
1000c6f0:	e0816d26 	beq	fp,r2,1000cca8 <__muldf3+0x854>
1000c6f4:	00800044 	movi	r2,1
1000c6f8:	e081321e 	bne	fp,r2,1000cbc4 <__muldf3+0x770>
1000c6fc:	48a6703a 	and	r19,r9,r2
1000c700:	0009883a 	mov	r4,zero
1000c704:	0021883a 	mov	r16,zero
1000c708:	002f883a 	mov	r23,zero
1000c70c:	003fab06 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000c710:	0023883a 	mov	r17,zero
1000c714:	0025883a 	mov	r18,zero
1000c718:	01c00044 	movi	r7,1
1000c71c:	003f7f06 	br	1000c51c <__alt_data_end+0xf800c51c>
1000c720:	01c000c4 	movi	r7,3
1000c724:	003f7d06 	br	1000c51c <__alt_data_end+0xf800c51c>
1000c728:	01400104 	movi	r5,4
1000c72c:	0021883a 	mov	r16,zero
1000c730:	002f883a 	mov	r23,zero
1000c734:	07000044 	movi	fp,1
1000c738:	003f6606 	br	1000c4d4 <__alt_data_end+0xf800c4d4>
1000c73c:	01400304 	movi	r5,12
1000c740:	070000c4 	movi	fp,3
1000c744:	003f6306 	br	1000c4d4 <__alt_data_end+0xf800c4d4>
1000c748:	04000434 	movhi	r16,16
1000c74c:	0027883a 	mov	r19,zero
1000c750:	843fffc4 	addi	r16,r16,-1
1000c754:	05ffffc4 	movi	r23,-1
1000c758:	0101ffc4 	movi	r4,2047
1000c75c:	003f9706 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000c760:	8821883a 	mov	r16,r17
1000c764:	902f883a 	mov	r23,r18
1000c768:	5013883a 	mov	r9,r10
1000c76c:	3839883a 	mov	fp,r7
1000c770:	003f8c06 	br	1000c5a4 <__alt_data_end+0xf800c5a4>
1000c774:	8821883a 	mov	r16,r17
1000c778:	902f883a 	mov	r23,r18
1000c77c:	3013883a 	mov	r9,r6
1000c780:	3839883a 	mov	fp,r7
1000c784:	003f8706 	br	1000c5a4 <__alt_data_end+0xf800c5a4>
1000c788:	b82ad43a 	srli	r21,r23,16
1000c78c:	9038d43a 	srli	fp,r18,16
1000c790:	bdffffcc 	andi	r23,r23,65535
1000c794:	94bfffcc 	andi	r18,r18,65535
1000c798:	9009883a 	mov	r4,r18
1000c79c:	b80b883a 	mov	r5,r23
1000c7a0:	d8c00515 	stw	r3,20(sp)
1000c7a4:	d9800715 	stw	r6,28(sp)
1000c7a8:	da000615 	stw	r8,24(sp)
1000c7ac:	00019c40 	call	100019c4 <__mulsi3>
1000c7b0:	9009883a 	mov	r4,r18
1000c7b4:	a80b883a 	mov	r5,r21
1000c7b8:	1029883a 	mov	r20,r2
1000c7bc:	00019c40 	call	100019c4 <__mulsi3>
1000c7c0:	e009883a 	mov	r4,fp
1000c7c4:	a80b883a 	mov	r5,r21
1000c7c8:	102d883a 	mov	r22,r2
1000c7cc:	00019c40 	call	100019c4 <__mulsi3>
1000c7d0:	e009883a 	mov	r4,fp
1000c7d4:	b80b883a 	mov	r5,r23
1000c7d8:	1027883a 	mov	r19,r2
1000c7dc:	00019c40 	call	100019c4 <__mulsi3>
1000c7e0:	a008d43a 	srli	r4,r20,16
1000c7e4:	b085883a 	add	r2,r22,r2
1000c7e8:	d8c00517 	ldw	r3,20(sp)
1000c7ec:	110f883a 	add	r7,r2,r4
1000c7f0:	d9800717 	ldw	r6,28(sp)
1000c7f4:	da000617 	ldw	r8,24(sp)
1000c7f8:	3d80022e 	bgeu	r7,r22,1000c804 <__muldf3+0x3b0>
1000c7fc:	00800074 	movhi	r2,1
1000c800:	98a7883a 	add	r19,r19,r2
1000c804:	3804943a 	slli	r2,r7,16
1000c808:	380ed43a 	srli	r7,r7,16
1000c80c:	882cd43a 	srli	r22,r17,16
1000c810:	a53fffcc 	andi	r20,r20,65535
1000c814:	8c7fffcc 	andi	r17,r17,65535
1000c818:	1529883a 	add	r20,r2,r20
1000c81c:	8809883a 	mov	r4,r17
1000c820:	b80b883a 	mov	r5,r23
1000c824:	d8c00515 	stw	r3,20(sp)
1000c828:	d9800715 	stw	r6,28(sp)
1000c82c:	da000615 	stw	r8,24(sp)
1000c830:	d9c00015 	stw	r7,0(sp)
1000c834:	dd000115 	stw	r20,4(sp)
1000c838:	00019c40 	call	100019c4 <__mulsi3>
1000c83c:	a80b883a 	mov	r5,r21
1000c840:	8809883a 	mov	r4,r17
1000c844:	d8800415 	stw	r2,16(sp)
1000c848:	00019c40 	call	100019c4 <__mulsi3>
1000c84c:	a80b883a 	mov	r5,r21
1000c850:	b009883a 	mov	r4,r22
1000c854:	1029883a 	mov	r20,r2
1000c858:	00019c40 	call	100019c4 <__mulsi3>
1000c85c:	b009883a 	mov	r4,r22
1000c860:	b80b883a 	mov	r5,r23
1000c864:	102b883a 	mov	r21,r2
1000c868:	00019c40 	call	100019c4 <__mulsi3>
1000c86c:	da400417 	ldw	r9,16(sp)
1000c870:	a085883a 	add	r2,r20,r2
1000c874:	d8c00517 	ldw	r3,20(sp)
1000c878:	4808d43a 	srli	r4,r9,16
1000c87c:	d9800717 	ldw	r6,28(sp)
1000c880:	da000617 	ldw	r8,24(sp)
1000c884:	1109883a 	add	r4,r2,r4
1000c888:	2500022e 	bgeu	r4,r20,1000c894 <__muldf3+0x440>
1000c88c:	00800074 	movhi	r2,1
1000c890:	a8ab883a 	add	r21,r21,r2
1000c894:	200e943a 	slli	r7,r4,16
1000c898:	2004d43a 	srli	r2,r4,16
1000c89c:	802ed43a 	srli	r23,r16,16
1000c8a0:	843fffcc 	andi	r16,r16,65535
1000c8a4:	4d3fffcc 	andi	r20,r9,65535
1000c8a8:	9009883a 	mov	r4,r18
1000c8ac:	800b883a 	mov	r5,r16
1000c8b0:	3d29883a 	add	r20,r7,r20
1000c8b4:	d8c00515 	stw	r3,20(sp)
1000c8b8:	d9800715 	stw	r6,28(sp)
1000c8bc:	da000615 	stw	r8,24(sp)
1000c8c0:	a8ab883a 	add	r21,r21,r2
1000c8c4:	00019c40 	call	100019c4 <__mulsi3>
1000c8c8:	9009883a 	mov	r4,r18
1000c8cc:	b80b883a 	mov	r5,r23
1000c8d0:	d8800315 	stw	r2,12(sp)
1000c8d4:	00019c40 	call	100019c4 <__mulsi3>
1000c8d8:	e009883a 	mov	r4,fp
1000c8dc:	b80b883a 	mov	r5,r23
1000c8e0:	1025883a 	mov	r18,r2
1000c8e4:	00019c40 	call	100019c4 <__mulsi3>
1000c8e8:	e009883a 	mov	r4,fp
1000c8ec:	800b883a 	mov	r5,r16
1000c8f0:	d8800215 	stw	r2,8(sp)
1000c8f4:	00019c40 	call	100019c4 <__mulsi3>
1000c8f8:	da800317 	ldw	r10,12(sp)
1000c8fc:	d9400017 	ldw	r5,0(sp)
1000c900:	9085883a 	add	r2,r18,r2
1000c904:	5008d43a 	srli	r4,r10,16
1000c908:	a153883a 	add	r9,r20,r5
1000c90c:	d8c00517 	ldw	r3,20(sp)
1000c910:	1109883a 	add	r4,r2,r4
1000c914:	d9800717 	ldw	r6,28(sp)
1000c918:	da000617 	ldw	r8,24(sp)
1000c91c:	dac00217 	ldw	r11,8(sp)
1000c920:	2480022e 	bgeu	r4,r18,1000c92c <__muldf3+0x4d8>
1000c924:	00800074 	movhi	r2,1
1000c928:	5897883a 	add	r11,r11,r2
1000c92c:	200e943a 	slli	r7,r4,16
1000c930:	2038d43a 	srli	fp,r4,16
1000c934:	52bfffcc 	andi	r10,r10,65535
1000c938:	3a8f883a 	add	r7,r7,r10
1000c93c:	8809883a 	mov	r4,r17
1000c940:	800b883a 	mov	r5,r16
1000c944:	d8c00515 	stw	r3,20(sp)
1000c948:	d9800715 	stw	r6,28(sp)
1000c94c:	d9c00215 	stw	r7,8(sp)
1000c950:	da000615 	stw	r8,24(sp)
1000c954:	da400415 	stw	r9,16(sp)
1000c958:	5f39883a 	add	fp,r11,fp
1000c95c:	00019c40 	call	100019c4 <__mulsi3>
1000c960:	8809883a 	mov	r4,r17
1000c964:	b80b883a 	mov	r5,r23
1000c968:	1025883a 	mov	r18,r2
1000c96c:	00019c40 	call	100019c4 <__mulsi3>
1000c970:	b009883a 	mov	r4,r22
1000c974:	b80b883a 	mov	r5,r23
1000c978:	d8800315 	stw	r2,12(sp)
1000c97c:	00019c40 	call	100019c4 <__mulsi3>
1000c980:	b009883a 	mov	r4,r22
1000c984:	800b883a 	mov	r5,r16
1000c988:	1023883a 	mov	r17,r2
1000c98c:	00019c40 	call	100019c4 <__mulsi3>
1000c990:	da800317 	ldw	r10,12(sp)
1000c994:	9008d43a 	srli	r4,r18,16
1000c998:	d8c00517 	ldw	r3,20(sp)
1000c99c:	5085883a 	add	r2,r10,r2
1000c9a0:	1109883a 	add	r4,r2,r4
1000c9a4:	d9800717 	ldw	r6,28(sp)
1000c9a8:	d9c00217 	ldw	r7,8(sp)
1000c9ac:	da000617 	ldw	r8,24(sp)
1000c9b0:	da400417 	ldw	r9,16(sp)
1000c9b4:	2280022e 	bgeu	r4,r10,1000c9c0 <__muldf3+0x56c>
1000c9b8:	00800074 	movhi	r2,1
1000c9bc:	88a3883a 	add	r17,r17,r2
1000c9c0:	2004943a 	slli	r2,r4,16
1000c9c4:	94bfffcc 	andi	r18,r18,65535
1000c9c8:	4ce7883a 	add	r19,r9,r19
1000c9cc:	14a5883a 	add	r18,r2,r18
1000c9d0:	9d29803a 	cmpltu	r20,r19,r20
1000c9d4:	9565883a 	add	r18,r18,r21
1000c9d8:	9505883a 	add	r2,r18,r20
1000c9dc:	99e7883a 	add	r19,r19,r7
1000c9e0:	99cf803a 	cmpltu	r7,r19,r7
1000c9e4:	e08b883a 	add	r5,fp,r2
1000c9e8:	2008d43a 	srli	r4,r4,16
1000c9ec:	29ef883a 	add	r23,r5,r7
1000c9f0:	1529803a 	cmpltu	r20,r2,r20
1000c9f4:	956b803a 	cmpltu	r21,r18,r21
1000c9f8:	b9cf803a 	cmpltu	r7,r23,r7
1000c9fc:	a564b03a 	or	r18,r20,r21
1000ca00:	2f39803a 	cmpltu	fp,r5,fp
1000ca04:	9125883a 	add	r18,r18,r4
1000ca08:	3f38b03a 	or	fp,r7,fp
1000ca0c:	9725883a 	add	r18,r18,fp
1000ca10:	9804927a 	slli	r2,r19,9
1000ca14:	9463883a 	add	r17,r18,r17
1000ca18:	d9000117 	ldw	r4,4(sp)
1000ca1c:	b820d5fa 	srli	r16,r23,23
1000ca20:	8822927a 	slli	r17,r17,9
1000ca24:	9826d5fa 	srli	r19,r19,23
1000ca28:	1104b03a 	or	r2,r2,r4
1000ca2c:	b82e927a 	slli	r23,r23,9
1000ca30:	1004c03a 	cmpne	r2,r2,zero
1000ca34:	8c20b03a 	or	r16,r17,r16
1000ca38:	14e6b03a 	or	r19,r2,r19
1000ca3c:	8080402c 	andhi	r2,r16,256
1000ca40:	9deeb03a 	or	r23,r19,r23
1000ca44:	10000726 	beq	r2,zero,1000ca64 <__muldf3+0x610>
1000ca48:	b804d07a 	srli	r2,r23,1
1000ca4c:	800697fa 	slli	r3,r16,31
1000ca50:	bdc0004c 	andi	r23,r23,1
1000ca54:	8020d07a 	srli	r16,r16,1
1000ca58:	b8aeb03a 	or	r23,r23,r2
1000ca5c:	b8eeb03a 	or	r23,r23,r3
1000ca60:	4007883a 	mov	r3,r8
1000ca64:	1900ffc4 	addi	r4,r3,1023
1000ca68:	01004d0e 	bge	zero,r4,1000cba0 <__muldf3+0x74c>
1000ca6c:	b88001cc 	andi	r2,r23,7
1000ca70:	10000726 	beq	r2,zero,1000ca90 <__muldf3+0x63c>
1000ca74:	b94003cc 	andi	r5,r23,15
1000ca78:	00800104 	movi	r2,4
1000ca7c:	28800426 	beq	r5,r2,1000ca90 <__muldf3+0x63c>
1000ca80:	b885883a 	add	r2,r23,r2
1000ca84:	15ef803a 	cmpltu	r23,r2,r23
1000ca88:	85e1883a 	add	r16,r16,r23
1000ca8c:	102f883a 	mov	r23,r2
1000ca90:	8080402c 	andhi	r2,r16,256
1000ca94:	10000426 	beq	r2,zero,1000caa8 <__muldf3+0x654>
1000ca98:	00bfc034 	movhi	r2,65280
1000ca9c:	10bfffc4 	addi	r2,r2,-1
1000caa0:	19010004 	addi	r4,r3,1024
1000caa4:	80a0703a 	and	r16,r16,r2
1000caa8:	0081ff84 	movi	r2,2046
1000caac:	1100340e 	bge	r2,r4,1000cb80 <__muldf3+0x72c>
1000cab0:	34c0004c 	andi	r19,r6,1
1000cab4:	0101ffc4 	movi	r4,2047
1000cab8:	0021883a 	mov	r16,zero
1000cabc:	002f883a 	mov	r23,zero
1000cac0:	003ebe06 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000cac4:	8080022c 	andhi	r2,r16,8
1000cac8:	10000926 	beq	r2,zero,1000caf0 <__muldf3+0x69c>
1000cacc:	8880022c 	andhi	r2,r17,8
1000cad0:	1000071e 	bne	r2,zero,1000caf0 <__muldf3+0x69c>
1000cad4:	00800434 	movhi	r2,16
1000cad8:	8c000234 	orhi	r16,r17,8
1000cadc:	10bfffc4 	addi	r2,r2,-1
1000cae0:	b027883a 	mov	r19,r22
1000cae4:	80a0703a 	and	r16,r16,r2
1000cae8:	902f883a 	mov	r23,r18
1000caec:	003f1a06 	br	1000c758 <__alt_data_end+0xf800c758>
1000caf0:	00800434 	movhi	r2,16
1000caf4:	84000234 	orhi	r16,r16,8
1000caf8:	10bfffc4 	addi	r2,r2,-1
1000cafc:	80a0703a 	and	r16,r16,r2
1000cb00:	003f1506 	br	1000c758 <__alt_data_end+0xf800c758>
1000cb04:	3009883a 	mov	r4,r6
1000cb08:	d9400215 	stw	r5,8(sp)
1000cb0c:	d9800715 	stw	r6,28(sp)
1000cb10:	da400415 	stw	r9,16(sp)
1000cb14:	da800315 	stw	r10,12(sp)
1000cb18:	00018340 	call	10001834 <__clzsi2>
1000cb1c:	10c00804 	addi	r3,r2,32
1000cb20:	010009c4 	movi	r4,39
1000cb24:	d9400217 	ldw	r5,8(sp)
1000cb28:	d9800717 	ldw	r6,28(sp)
1000cb2c:	da400417 	ldw	r9,16(sp)
1000cb30:	da800317 	ldw	r10,12(sp)
1000cb34:	20fee20e 	bge	r4,r3,1000c6c0 <__alt_data_end+0xf800c6c0>
1000cb38:	147ffe04 	addi	r17,r2,-8
1000cb3c:	9462983a 	sll	r17,r18,r17
1000cb40:	0025883a 	mov	r18,zero
1000cb44:	003ee506 	br	1000c6dc <__alt_data_end+0xf800c6dc>
1000cb48:	d9800715 	stw	r6,28(sp)
1000cb4c:	d9c00215 	stw	r7,8(sp)
1000cb50:	da400415 	stw	r9,16(sp)
1000cb54:	00018340 	call	10001834 <__clzsi2>
1000cb58:	10c00804 	addi	r3,r2,32
1000cb5c:	010009c4 	movi	r4,39
1000cb60:	d9800717 	ldw	r6,28(sp)
1000cb64:	d9c00217 	ldw	r7,8(sp)
1000cb68:	da400417 	ldw	r9,16(sp)
1000cb6c:	20feb40e 	bge	r4,r3,1000c640 <__alt_data_end+0xf800c640>
1000cb70:	143ffe04 	addi	r16,r2,-8
1000cb74:	9420983a 	sll	r16,r18,r16
1000cb78:	002f883a 	mov	r23,zero
1000cb7c:	003eb706 	br	1000c65c <__alt_data_end+0xf800c65c>
1000cb80:	8004977a 	slli	r2,r16,29
1000cb84:	b82ed0fa 	srli	r23,r23,3
1000cb88:	8020927a 	slli	r16,r16,9
1000cb8c:	2101ffcc 	andi	r4,r4,2047
1000cb90:	15eeb03a 	or	r23,r2,r23
1000cb94:	8020d33a 	srli	r16,r16,12
1000cb98:	34c0004c 	andi	r19,r6,1
1000cb9c:	003e8706 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000cba0:	00bf0084 	movi	r2,-1022
1000cba4:	10c5c83a 	sub	r2,r2,r3
1000cba8:	01000e04 	movi	r4,56
1000cbac:	2080080e 	bge	r4,r2,1000cbd0 <__muldf3+0x77c>
1000cbb0:	34c0004c 	andi	r19,r6,1
1000cbb4:	0009883a 	mov	r4,zero
1000cbb8:	0021883a 	mov	r16,zero
1000cbbc:	002f883a 	mov	r23,zero
1000cbc0:	003e7e06 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000cbc4:	4007883a 	mov	r3,r8
1000cbc8:	480d883a 	mov	r6,r9
1000cbcc:	003fa506 	br	1000ca64 <__alt_data_end+0xf800ca64>
1000cbd0:	010007c4 	movi	r4,31
1000cbd4:	20801816 	blt	r4,r2,1000cc38 <__muldf3+0x7e4>
1000cbd8:	18c10784 	addi	r3,r3,1054
1000cbdc:	80c8983a 	sll	r4,r16,r3
1000cbe0:	b88ad83a 	srl	r5,r23,r2
1000cbe4:	b8c6983a 	sll	r3,r23,r3
1000cbe8:	80a0d83a 	srl	r16,r16,r2
1000cbec:	2908b03a 	or	r4,r5,r4
1000cbf0:	1804c03a 	cmpne	r2,r3,zero
1000cbf4:	2088b03a 	or	r4,r4,r2
1000cbf8:	208001cc 	andi	r2,r4,7
1000cbfc:	10000726 	beq	r2,zero,1000cc1c <__muldf3+0x7c8>
1000cc00:	20c003cc 	andi	r3,r4,15
1000cc04:	00800104 	movi	r2,4
1000cc08:	18800426 	beq	r3,r2,1000cc1c <__muldf3+0x7c8>
1000cc0c:	20c00104 	addi	r3,r4,4
1000cc10:	1905803a 	cmpltu	r2,r3,r4
1000cc14:	80a1883a 	add	r16,r16,r2
1000cc18:	1809883a 	mov	r4,r3
1000cc1c:	8080202c 	andhi	r2,r16,128
1000cc20:	10001b26 	beq	r2,zero,1000cc90 <__muldf3+0x83c>
1000cc24:	34c0004c 	andi	r19,r6,1
1000cc28:	01000044 	movi	r4,1
1000cc2c:	0021883a 	mov	r16,zero
1000cc30:	002f883a 	mov	r23,zero
1000cc34:	003e6106 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000cc38:	013ef884 	movi	r4,-1054
1000cc3c:	20c9c83a 	sub	r4,r4,r3
1000cc40:	01400804 	movi	r5,32
1000cc44:	8108d83a 	srl	r4,r16,r4
1000cc48:	11401526 	beq	r2,r5,1000cca0 <__muldf3+0x84c>
1000cc4c:	18c10f84 	addi	r3,r3,1086
1000cc50:	80e0983a 	sll	r16,r16,r3
1000cc54:	85eeb03a 	or	r23,r16,r23
1000cc58:	b804c03a 	cmpne	r2,r23,zero
1000cc5c:	1108b03a 	or	r4,r2,r4
1000cc60:	20c001cc 	andi	r3,r4,7
1000cc64:	1800061e 	bne	r3,zero,1000cc80 <__muldf3+0x82c>
1000cc68:	0021883a 	mov	r16,zero
1000cc6c:	202ed0fa 	srli	r23,r4,3
1000cc70:	34c0004c 	andi	r19,r6,1
1000cc74:	0009883a 	mov	r4,zero
1000cc78:	b8eeb03a 	or	r23,r23,r3
1000cc7c:	003e4f06 	br	1000c5bc <__alt_data_end+0xf800c5bc>
1000cc80:	20c003cc 	andi	r3,r4,15
1000cc84:	00800104 	movi	r2,4
1000cc88:	0021883a 	mov	r16,zero
1000cc8c:	18bfdf1e 	bne	r3,r2,1000cc0c <__alt_data_end+0xf800cc0c>
1000cc90:	8004927a 	slli	r2,r16,9
1000cc94:	8006977a 	slli	r3,r16,29
1000cc98:	1020d33a 	srli	r16,r2,12
1000cc9c:	003ff306 	br	1000cc6c <__alt_data_end+0xf800cc6c>
1000cca0:	0021883a 	mov	r16,zero
1000cca4:	003feb06 	br	1000cc54 <__alt_data_end+0xf800cc54>
1000cca8:	00800434 	movhi	r2,16
1000ccac:	84000234 	orhi	r16,r16,8
1000ccb0:	10bfffc4 	addi	r2,r2,-1
1000ccb4:	4cc0004c 	andi	r19,r9,1
1000ccb8:	80a0703a 	and	r16,r16,r2
1000ccbc:	003ea606 	br	1000c758 <__alt_data_end+0xf800c758>

1000ccc0 <__floatsidf>:
1000ccc0:	defffd04 	addi	sp,sp,-12
1000ccc4:	dc400115 	stw	r17,4(sp)
1000ccc8:	dfc00215 	stw	ra,8(sp)
1000cccc:	dc000015 	stw	r16,0(sp)
1000ccd0:	2023883a 	mov	r17,r4
1000ccd4:	20001426 	beq	r4,zero,1000cd28 <__floatsidf+0x68>
1000ccd8:	2020d7fa 	srli	r16,r4,31
1000ccdc:	80000126 	beq	r16,zero,1000cce4 <__floatsidf+0x24>
1000cce0:	0123c83a 	sub	r17,zero,r4
1000cce4:	8809883a 	mov	r4,r17
1000cce8:	00018340 	call	10001834 <__clzsi2>
1000ccec:	01410784 	movi	r5,1054
1000ccf0:	00c00284 	movi	r3,10
1000ccf4:	288bc83a 	sub	r5,r5,r2
1000ccf8:	18801c16 	blt	r3,r2,1000cd6c <__floatsidf+0xac>
1000ccfc:	00c002c4 	movi	r3,11
1000cd00:	1887c83a 	sub	r3,r3,r2
1000cd04:	88c8d83a 	srl	r4,r17,r3
1000cd08:	00c00434 	movhi	r3,16
1000cd0c:	18ffffc4 	addi	r3,r3,-1
1000cd10:	10800544 	addi	r2,r2,21
1000cd14:	20c8703a 	and	r4,r4,r3
1000cd18:	8884983a 	sll	r2,r17,r2
1000cd1c:	28c1ffcc 	andi	r3,r5,2047
1000cd20:	800d883a 	mov	r6,r16
1000cd24:	00000406 	br	1000cd38 <__floatsidf+0x78>
1000cd28:	000d883a 	mov	r6,zero
1000cd2c:	0007883a 	mov	r3,zero
1000cd30:	0009883a 	mov	r4,zero
1000cd34:	0005883a 	mov	r2,zero
1000cd38:	180a953a 	slli	r5,r3,20
1000cd3c:	31803fcc 	andi	r6,r6,255
1000cd40:	00c00434 	movhi	r3,16
1000cd44:	300c97fa 	slli	r6,r6,31
1000cd48:	18ffffc4 	addi	r3,r3,-1
1000cd4c:	20c6703a 	and	r3,r4,r3
1000cd50:	1946b03a 	or	r3,r3,r5
1000cd54:	1986b03a 	or	r3,r3,r6
1000cd58:	dfc00217 	ldw	ra,8(sp)
1000cd5c:	dc400117 	ldw	r17,4(sp)
1000cd60:	dc000017 	ldw	r16,0(sp)
1000cd64:	dec00304 	addi	sp,sp,12
1000cd68:	f800283a 	ret
1000cd6c:	10fffd44 	addi	r3,r2,-11
1000cd70:	88c8983a 	sll	r4,r17,r3
1000cd74:	00800434 	movhi	r2,16
1000cd78:	10bfffc4 	addi	r2,r2,-1
1000cd7c:	2088703a 	and	r4,r4,r2
1000cd80:	28c1ffcc 	andi	r3,r5,2047
1000cd84:	800d883a 	mov	r6,r16
1000cd88:	0005883a 	mov	r2,zero
1000cd8c:	003fea06 	br	1000cd38 <__alt_data_end+0xf800cd38>

1000cd90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000cd90:	defffe04 	addi	sp,sp,-8
1000cd94:	dfc00115 	stw	ra,4(sp)
1000cd98:	df000015 	stw	fp,0(sp)
1000cd9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000cda0:	00840074 	movhi	r2,4097
1000cda4:	10851304 	addi	r2,r2,5196
1000cda8:	10800017 	ldw	r2,0(r2)
1000cdac:	10000526 	beq	r2,zero,1000cdc4 <alt_get_errno+0x34>
1000cdb0:	00840074 	movhi	r2,4097
1000cdb4:	10851304 	addi	r2,r2,5196
1000cdb8:	10800017 	ldw	r2,0(r2)
1000cdbc:	103ee83a 	callr	r2
1000cdc0:	00000206 	br	1000cdcc <alt_get_errno+0x3c>
1000cdc4:	00840074 	movhi	r2,4097
1000cdc8:	108bd904 	addi	r2,r2,12132
}
1000cdcc:	e037883a 	mov	sp,fp
1000cdd0:	dfc00117 	ldw	ra,4(sp)
1000cdd4:	df000017 	ldw	fp,0(sp)
1000cdd8:	dec00204 	addi	sp,sp,8
1000cddc:	f800283a 	ret

1000cde0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1000cde0:	defffb04 	addi	sp,sp,-20
1000cde4:	dfc00415 	stw	ra,16(sp)
1000cde8:	df000315 	stw	fp,12(sp)
1000cdec:	df000304 	addi	fp,sp,12
1000cdf0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1000cdf4:	e0bfff17 	ldw	r2,-4(fp)
1000cdf8:	10000816 	blt	r2,zero,1000ce1c <close+0x3c>
1000cdfc:	e13fff17 	ldw	r4,-4(fp)
1000ce00:	01400304 	movi	r5,12
1000ce04:	00019c40 	call	100019c4 <__mulsi3>
1000ce08:	1007883a 	mov	r3,r2
1000ce0c:	00840074 	movhi	r2,4097
1000ce10:	10809004 	addi	r2,r2,576
1000ce14:	1885883a 	add	r2,r3,r2
1000ce18:	00000106 	br	1000ce20 <close+0x40>
1000ce1c:	0005883a 	mov	r2,zero
1000ce20:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1000ce24:	e0bffd17 	ldw	r2,-12(fp)
1000ce28:	10001926 	beq	r2,zero,1000ce90 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1000ce2c:	e0bffd17 	ldw	r2,-12(fp)
1000ce30:	10800017 	ldw	r2,0(r2)
1000ce34:	10800417 	ldw	r2,16(r2)
1000ce38:	10000626 	beq	r2,zero,1000ce54 <close+0x74>
1000ce3c:	e0bffd17 	ldw	r2,-12(fp)
1000ce40:	10800017 	ldw	r2,0(r2)
1000ce44:	10800417 	ldw	r2,16(r2)
1000ce48:	e13ffd17 	ldw	r4,-12(fp)
1000ce4c:	103ee83a 	callr	r2
1000ce50:	00000106 	br	1000ce58 <close+0x78>
1000ce54:	0005883a 	mov	r2,zero
1000ce58:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1000ce5c:	e13fff17 	ldw	r4,-4(fp)
1000ce60:	000d5040 	call	1000d504 <alt_release_fd>
    if (rval < 0)
1000ce64:	e0bffe17 	ldw	r2,-8(fp)
1000ce68:	1000070e 	bge	r2,zero,1000ce88 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1000ce6c:	000cd900 	call	1000cd90 <alt_get_errno>
1000ce70:	1007883a 	mov	r3,r2
1000ce74:	e0bffe17 	ldw	r2,-8(fp)
1000ce78:	0085c83a 	sub	r2,zero,r2
1000ce7c:	18800015 	stw	r2,0(r3)
      return -1;
1000ce80:	00bfffc4 	movi	r2,-1
1000ce84:	00000706 	br	1000cea4 <close+0xc4>
    }
    return 0;
1000ce88:	0005883a 	mov	r2,zero
1000ce8c:	00000506 	br	1000cea4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000ce90:	000cd900 	call	1000cd90 <alt_get_errno>
1000ce94:	1007883a 	mov	r3,r2
1000ce98:	00801444 	movi	r2,81
1000ce9c:	18800015 	stw	r2,0(r3)
    return -1;
1000cea0:	00bfffc4 	movi	r2,-1
  }
}
1000cea4:	e037883a 	mov	sp,fp
1000cea8:	dfc00117 	ldw	ra,4(sp)
1000ceac:	df000017 	ldw	fp,0(sp)
1000ceb0:	dec00204 	addi	sp,sp,8
1000ceb4:	f800283a 	ret

1000ceb8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1000ceb8:	defffc04 	addi	sp,sp,-16
1000cebc:	df000315 	stw	fp,12(sp)
1000cec0:	df000304 	addi	fp,sp,12
1000cec4:	e13ffd15 	stw	r4,-12(fp)
1000cec8:	e17ffe15 	stw	r5,-8(fp)
1000cecc:	e1bfff15 	stw	r6,-4(fp)
  return len;
1000ced0:	e0bfff17 	ldw	r2,-4(fp)
}
1000ced4:	e037883a 	mov	sp,fp
1000ced8:	df000017 	ldw	fp,0(sp)
1000cedc:	dec00104 	addi	sp,sp,4
1000cee0:	f800283a 	ret

1000cee4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000cee4:	defffe04 	addi	sp,sp,-8
1000cee8:	dfc00115 	stw	ra,4(sp)
1000ceec:	df000015 	stw	fp,0(sp)
1000cef0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000cef4:	00840074 	movhi	r2,4097
1000cef8:	10851304 	addi	r2,r2,5196
1000cefc:	10800017 	ldw	r2,0(r2)
1000cf00:	10000526 	beq	r2,zero,1000cf18 <alt_get_errno+0x34>
1000cf04:	00840074 	movhi	r2,4097
1000cf08:	10851304 	addi	r2,r2,5196
1000cf0c:	10800017 	ldw	r2,0(r2)
1000cf10:	103ee83a 	callr	r2
1000cf14:	00000206 	br	1000cf20 <alt_get_errno+0x3c>
1000cf18:	00840074 	movhi	r2,4097
1000cf1c:	108bd904 	addi	r2,r2,12132
}
1000cf20:	e037883a 	mov	sp,fp
1000cf24:	dfc00117 	ldw	ra,4(sp)
1000cf28:	df000017 	ldw	fp,0(sp)
1000cf2c:	dec00204 	addi	sp,sp,8
1000cf30:	f800283a 	ret

1000cf34 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1000cf34:	defffb04 	addi	sp,sp,-20
1000cf38:	dfc00415 	stw	ra,16(sp)
1000cf3c:	df000315 	stw	fp,12(sp)
1000cf40:	df000304 	addi	fp,sp,12
1000cf44:	e13ffe15 	stw	r4,-8(fp)
1000cf48:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000cf4c:	e0bffe17 	ldw	r2,-8(fp)
1000cf50:	10000816 	blt	r2,zero,1000cf74 <fstat+0x40>
1000cf54:	e13ffe17 	ldw	r4,-8(fp)
1000cf58:	01400304 	movi	r5,12
1000cf5c:	00019c40 	call	100019c4 <__mulsi3>
1000cf60:	1007883a 	mov	r3,r2
1000cf64:	00840074 	movhi	r2,4097
1000cf68:	10809004 	addi	r2,r2,576
1000cf6c:	1885883a 	add	r2,r3,r2
1000cf70:	00000106 	br	1000cf78 <fstat+0x44>
1000cf74:	0005883a 	mov	r2,zero
1000cf78:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1000cf7c:	e0bffd17 	ldw	r2,-12(fp)
1000cf80:	10001026 	beq	r2,zero,1000cfc4 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1000cf84:	e0bffd17 	ldw	r2,-12(fp)
1000cf88:	10800017 	ldw	r2,0(r2)
1000cf8c:	10800817 	ldw	r2,32(r2)
1000cf90:	10000726 	beq	r2,zero,1000cfb0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1000cf94:	e0bffd17 	ldw	r2,-12(fp)
1000cf98:	10800017 	ldw	r2,0(r2)
1000cf9c:	10800817 	ldw	r2,32(r2)
1000cfa0:	e13ffd17 	ldw	r4,-12(fp)
1000cfa4:	e17fff17 	ldw	r5,-4(fp)
1000cfa8:	103ee83a 	callr	r2
1000cfac:	00000a06 	br	1000cfd8 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1000cfb0:	e0bfff17 	ldw	r2,-4(fp)
1000cfb4:	00c80004 	movi	r3,8192
1000cfb8:	10c00115 	stw	r3,4(r2)
      return 0;
1000cfbc:	0005883a 	mov	r2,zero
1000cfc0:	00000506 	br	1000cfd8 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000cfc4:	000cee40 	call	1000cee4 <alt_get_errno>
1000cfc8:	1007883a 	mov	r3,r2
1000cfcc:	00801444 	movi	r2,81
1000cfd0:	18800015 	stw	r2,0(r3)
    return -1;
1000cfd4:	00bfffc4 	movi	r2,-1
  }
}
1000cfd8:	e037883a 	mov	sp,fp
1000cfdc:	dfc00117 	ldw	ra,4(sp)
1000cfe0:	df000017 	ldw	fp,0(sp)
1000cfe4:	dec00204 	addi	sp,sp,8
1000cfe8:	f800283a 	ret

1000cfec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000cfec:	defffe04 	addi	sp,sp,-8
1000cff0:	dfc00115 	stw	ra,4(sp)
1000cff4:	df000015 	stw	fp,0(sp)
1000cff8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000cffc:	00840074 	movhi	r2,4097
1000d000:	10851304 	addi	r2,r2,5196
1000d004:	10800017 	ldw	r2,0(r2)
1000d008:	10000526 	beq	r2,zero,1000d020 <alt_get_errno+0x34>
1000d00c:	00840074 	movhi	r2,4097
1000d010:	10851304 	addi	r2,r2,5196
1000d014:	10800017 	ldw	r2,0(r2)
1000d018:	103ee83a 	callr	r2
1000d01c:	00000206 	br	1000d028 <alt_get_errno+0x3c>
1000d020:	00840074 	movhi	r2,4097
1000d024:	108bd904 	addi	r2,r2,12132
}
1000d028:	e037883a 	mov	sp,fp
1000d02c:	dfc00117 	ldw	ra,4(sp)
1000d030:	df000017 	ldw	fp,0(sp)
1000d034:	dec00204 	addi	sp,sp,8
1000d038:	f800283a 	ret

1000d03c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1000d03c:	deffed04 	addi	sp,sp,-76
1000d040:	dfc01215 	stw	ra,72(sp)
1000d044:	df001115 	stw	fp,68(sp)
1000d048:	df001104 	addi	fp,sp,68
1000d04c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d050:	e0bfff17 	ldw	r2,-4(fp)
1000d054:	10000816 	blt	r2,zero,1000d078 <isatty+0x3c>
1000d058:	e13fff17 	ldw	r4,-4(fp)
1000d05c:	01400304 	movi	r5,12
1000d060:	00019c40 	call	100019c4 <__mulsi3>
1000d064:	1007883a 	mov	r3,r2
1000d068:	00840074 	movhi	r2,4097
1000d06c:	10809004 	addi	r2,r2,576
1000d070:	1885883a 	add	r2,r3,r2
1000d074:	00000106 	br	1000d07c <isatty+0x40>
1000d078:	0005883a 	mov	r2,zero
1000d07c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1000d080:	e0bfef17 	ldw	r2,-68(fp)
1000d084:	10000e26 	beq	r2,zero,1000d0c0 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1000d088:	e0bfef17 	ldw	r2,-68(fp)
1000d08c:	10800017 	ldw	r2,0(r2)
1000d090:	10800817 	ldw	r2,32(r2)
1000d094:	1000021e 	bne	r2,zero,1000d0a0 <isatty+0x64>
    {
      return 1;
1000d098:	00800044 	movi	r2,1
1000d09c:	00000d06 	br	1000d0d4 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1000d0a0:	e0bff004 	addi	r2,fp,-64
1000d0a4:	e13fff17 	ldw	r4,-4(fp)
1000d0a8:	100b883a 	mov	r5,r2
1000d0ac:	000cf340 	call	1000cf34 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1000d0b0:	e0bff117 	ldw	r2,-60(fp)
1000d0b4:	10880020 	cmpeqi	r2,r2,8192
1000d0b8:	10803fcc 	andi	r2,r2,255
1000d0bc:	00000506 	br	1000d0d4 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000d0c0:	000cfec0 	call	1000cfec <alt_get_errno>
1000d0c4:	1007883a 	mov	r3,r2
1000d0c8:	00801444 	movi	r2,81
1000d0cc:	18800015 	stw	r2,0(r3)
    return 0;
1000d0d0:	0005883a 	mov	r2,zero
  }
}
1000d0d4:	e037883a 	mov	sp,fp
1000d0d8:	dfc00117 	ldw	ra,4(sp)
1000d0dc:	df000017 	ldw	fp,0(sp)
1000d0e0:	dec00204 	addi	sp,sp,8
1000d0e4:	f800283a 	ret

1000d0e8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1000d0e8:	defffc04 	addi	sp,sp,-16
1000d0ec:	df000315 	stw	fp,12(sp)
1000d0f0:	df000304 	addi	fp,sp,12
1000d0f4:	e13ffd15 	stw	r4,-12(fp)
1000d0f8:	e17ffe15 	stw	r5,-8(fp)
1000d0fc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1000d100:	e0fffe17 	ldw	r3,-8(fp)
1000d104:	e0bffd17 	ldw	r2,-12(fp)
1000d108:	18800c26 	beq	r3,r2,1000d13c <alt_load_section+0x54>
  {
    while( to != end )
1000d10c:	00000806 	br	1000d130 <alt_load_section+0x48>
    {
      *to++ = *from++;
1000d110:	e0bffe17 	ldw	r2,-8(fp)
1000d114:	10c00104 	addi	r3,r2,4
1000d118:	e0fffe15 	stw	r3,-8(fp)
1000d11c:	e0fffd17 	ldw	r3,-12(fp)
1000d120:	19000104 	addi	r4,r3,4
1000d124:	e13ffd15 	stw	r4,-12(fp)
1000d128:	18c00017 	ldw	r3,0(r3)
1000d12c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1000d130:	e0fffe17 	ldw	r3,-8(fp)
1000d134:	e0bfff17 	ldw	r2,-4(fp)
1000d138:	18bff51e 	bne	r3,r2,1000d110 <__alt_data_end+0xf800d110>
    {
      *to++ = *from++;
    }
  }
}
1000d13c:	e037883a 	mov	sp,fp
1000d140:	df000017 	ldw	fp,0(sp)
1000d144:	dec00104 	addi	sp,sp,4
1000d148:	f800283a 	ret

1000d14c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1000d14c:	defffe04 	addi	sp,sp,-8
1000d150:	dfc00115 	stw	ra,4(sp)
1000d154:	df000015 	stw	fp,0(sp)
1000d158:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1000d15c:	01040074 	movhi	r4,4097
1000d160:	21051804 	addi	r4,r4,5216
1000d164:	01440074 	movhi	r5,4097
1000d168:	297e5d04 	addi	r5,r5,-1676
1000d16c:	01840074 	movhi	r6,4097
1000d170:	31851804 	addi	r6,r6,5216
1000d174:	000d0e80 	call	1000d0e8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1000d178:	01040034 	movhi	r4,4096
1000d17c:	21000804 	addi	r4,r4,32
1000d180:	01440034 	movhi	r5,4096
1000d184:	29400804 	addi	r5,r5,32
1000d188:	01840034 	movhi	r6,4096
1000d18c:	31808b04 	addi	r6,r6,556
1000d190:	000d0e80 	call	1000d0e8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1000d194:	01040074 	movhi	r4,4097
1000d198:	213d7004 	addi	r4,r4,-2624
1000d19c:	01440074 	movhi	r5,4097
1000d1a0:	297d7004 	addi	r5,r5,-2624
1000d1a4:	01840074 	movhi	r6,4097
1000d1a8:	31be5d04 	addi	r6,r6,-1676
1000d1ac:	000d0e80 	call	1000d0e8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1000d1b0:	000e49c0 	call	1000e49c <alt_dcache_flush_all>
  alt_icache_flush_all();
1000d1b4:	000e6640 	call	1000e664 <alt_icache_flush_all>
}
1000d1b8:	e037883a 	mov	sp,fp
1000d1bc:	dfc00117 	ldw	ra,4(sp)
1000d1c0:	df000017 	ldw	fp,0(sp)
1000d1c4:	dec00204 	addi	sp,sp,8
1000d1c8:	f800283a 	ret

1000d1cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d1cc:	defffe04 	addi	sp,sp,-8
1000d1d0:	dfc00115 	stw	ra,4(sp)
1000d1d4:	df000015 	stw	fp,0(sp)
1000d1d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d1dc:	00840074 	movhi	r2,4097
1000d1e0:	10851304 	addi	r2,r2,5196
1000d1e4:	10800017 	ldw	r2,0(r2)
1000d1e8:	10000526 	beq	r2,zero,1000d200 <alt_get_errno+0x34>
1000d1ec:	00840074 	movhi	r2,4097
1000d1f0:	10851304 	addi	r2,r2,5196
1000d1f4:	10800017 	ldw	r2,0(r2)
1000d1f8:	103ee83a 	callr	r2
1000d1fc:	00000206 	br	1000d208 <alt_get_errno+0x3c>
1000d200:	00840074 	movhi	r2,4097
1000d204:	108bd904 	addi	r2,r2,12132
}
1000d208:	e037883a 	mov	sp,fp
1000d20c:	dfc00117 	ldw	ra,4(sp)
1000d210:	df000017 	ldw	fp,0(sp)
1000d214:	dec00204 	addi	sp,sp,8
1000d218:	f800283a 	ret

1000d21c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1000d21c:	defff904 	addi	sp,sp,-28
1000d220:	dfc00615 	stw	ra,24(sp)
1000d224:	df000515 	stw	fp,20(sp)
1000d228:	df000504 	addi	fp,sp,20
1000d22c:	e13ffd15 	stw	r4,-12(fp)
1000d230:	e17ffe15 	stw	r5,-8(fp)
1000d234:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1000d238:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d23c:	e0bffd17 	ldw	r2,-12(fp)
1000d240:	10000816 	blt	r2,zero,1000d264 <lseek+0x48>
1000d244:	e13ffd17 	ldw	r4,-12(fp)
1000d248:	01400304 	movi	r5,12
1000d24c:	00019c40 	call	100019c4 <__mulsi3>
1000d250:	1007883a 	mov	r3,r2
1000d254:	00840074 	movhi	r2,4097
1000d258:	10809004 	addi	r2,r2,576
1000d25c:	1885883a 	add	r2,r3,r2
1000d260:	00000106 	br	1000d268 <lseek+0x4c>
1000d264:	0005883a 	mov	r2,zero
1000d268:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1000d26c:	e0bffc17 	ldw	r2,-16(fp)
1000d270:	10001026 	beq	r2,zero,1000d2b4 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1000d274:	e0bffc17 	ldw	r2,-16(fp)
1000d278:	10800017 	ldw	r2,0(r2)
1000d27c:	10800717 	ldw	r2,28(r2)
1000d280:	10000926 	beq	r2,zero,1000d2a8 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1000d284:	e0bffc17 	ldw	r2,-16(fp)
1000d288:	10800017 	ldw	r2,0(r2)
1000d28c:	10800717 	ldw	r2,28(r2)
1000d290:	e13ffc17 	ldw	r4,-16(fp)
1000d294:	e17ffe17 	ldw	r5,-8(fp)
1000d298:	e1bfff17 	ldw	r6,-4(fp)
1000d29c:	103ee83a 	callr	r2
1000d2a0:	e0bffb15 	stw	r2,-20(fp)
1000d2a4:	00000506 	br	1000d2bc <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1000d2a8:	00bfde84 	movi	r2,-134
1000d2ac:	e0bffb15 	stw	r2,-20(fp)
1000d2b0:	00000206 	br	1000d2bc <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1000d2b4:	00bfebc4 	movi	r2,-81
1000d2b8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1000d2bc:	e0bffb17 	ldw	r2,-20(fp)
1000d2c0:	1000070e 	bge	r2,zero,1000d2e0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1000d2c4:	000d1cc0 	call	1000d1cc <alt_get_errno>
1000d2c8:	1007883a 	mov	r3,r2
1000d2cc:	e0bffb17 	ldw	r2,-20(fp)
1000d2d0:	0085c83a 	sub	r2,zero,r2
1000d2d4:	18800015 	stw	r2,0(r3)
    rc = -1;
1000d2d8:	00bfffc4 	movi	r2,-1
1000d2dc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1000d2e0:	e0bffb17 	ldw	r2,-20(fp)
}
1000d2e4:	e037883a 	mov	sp,fp
1000d2e8:	dfc00117 	ldw	ra,4(sp)
1000d2ec:	df000017 	ldw	fp,0(sp)
1000d2f0:	dec00204 	addi	sp,sp,8
1000d2f4:	f800283a 	ret

1000d2f8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1000d2f8:	defffd04 	addi	sp,sp,-12
1000d2fc:	dfc00215 	stw	ra,8(sp)
1000d300:	df000115 	stw	fp,4(sp)
1000d304:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1000d308:	0009883a 	mov	r4,zero
1000d30c:	000d8940 	call	1000d894 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1000d310:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1000d314:	000d8c80 	call	1000d8c8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1000d318:	01040074 	movhi	r4,4097
1000d31c:	213e5304 	addi	r4,r4,-1716
1000d320:	01440074 	movhi	r5,4097
1000d324:	297e5304 	addi	r5,r5,-1716
1000d328:	01840074 	movhi	r6,4097
1000d32c:	31be5304 	addi	r6,r6,-1716
1000d330:	000ea300 	call	1000ea30 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1000d334:	000e5ac0 	call	1000e5ac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1000d338:	01040074 	movhi	r4,4097
1000d33c:	21398204 	addi	r4,r4,-6648
1000d340:	000f21c0 	call	1000f21c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1000d344:	d126d217 	ldw	r4,-25784(gp)
1000d348:	d0e6d317 	ldw	r3,-25780(gp)
1000d34c:	d0a6d417 	ldw	r2,-25776(gp)
1000d350:	180b883a 	mov	r5,r3
1000d354:	100d883a 	mov	r6,r2
1000d358:	00002680 	call	10000268 <main>
1000d35c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1000d360:	01000044 	movi	r4,1
1000d364:	000cde00 	call	1000cde0 <close>
  exit (result);
1000d368:	e13fff17 	ldw	r4,-4(fp)
1000d36c:	000f2300 	call	1000f230 <exit>

1000d370 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1000d370:	defffe04 	addi	sp,sp,-8
1000d374:	df000115 	stw	fp,4(sp)
1000d378:	df000104 	addi	fp,sp,4
1000d37c:	e13fff15 	stw	r4,-4(fp)
}
1000d380:	e037883a 	mov	sp,fp
1000d384:	df000017 	ldw	fp,0(sp)
1000d388:	dec00104 	addi	sp,sp,4
1000d38c:	f800283a 	ret

1000d390 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1000d390:	defffe04 	addi	sp,sp,-8
1000d394:	df000115 	stw	fp,4(sp)
1000d398:	df000104 	addi	fp,sp,4
1000d39c:	e13fff15 	stw	r4,-4(fp)
}
1000d3a0:	e037883a 	mov	sp,fp
1000d3a4:	df000017 	ldw	fp,0(sp)
1000d3a8:	dec00104 	addi	sp,sp,4
1000d3ac:	f800283a 	ret

1000d3b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d3b0:	defffe04 	addi	sp,sp,-8
1000d3b4:	dfc00115 	stw	ra,4(sp)
1000d3b8:	df000015 	stw	fp,0(sp)
1000d3bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d3c0:	00840074 	movhi	r2,4097
1000d3c4:	10851304 	addi	r2,r2,5196
1000d3c8:	10800017 	ldw	r2,0(r2)
1000d3cc:	10000526 	beq	r2,zero,1000d3e4 <alt_get_errno+0x34>
1000d3d0:	00840074 	movhi	r2,4097
1000d3d4:	10851304 	addi	r2,r2,5196
1000d3d8:	10800017 	ldw	r2,0(r2)
1000d3dc:	103ee83a 	callr	r2
1000d3e0:	00000206 	br	1000d3ec <alt_get_errno+0x3c>
1000d3e4:	00840074 	movhi	r2,4097
1000d3e8:	108bd904 	addi	r2,r2,12132
}
1000d3ec:	e037883a 	mov	sp,fp
1000d3f0:	dfc00117 	ldw	ra,4(sp)
1000d3f4:	df000017 	ldw	fp,0(sp)
1000d3f8:	dec00204 	addi	sp,sp,8
1000d3fc:	f800283a 	ret

1000d400 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1000d400:	defff904 	addi	sp,sp,-28
1000d404:	dfc00615 	stw	ra,24(sp)
1000d408:	df000515 	stw	fp,20(sp)
1000d40c:	df000504 	addi	fp,sp,20
1000d410:	e13ffd15 	stw	r4,-12(fp)
1000d414:	e17ffe15 	stw	r5,-8(fp)
1000d418:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d41c:	e0bffd17 	ldw	r2,-12(fp)
1000d420:	10000816 	blt	r2,zero,1000d444 <read+0x44>
1000d424:	e13ffd17 	ldw	r4,-12(fp)
1000d428:	01400304 	movi	r5,12
1000d42c:	00019c40 	call	100019c4 <__mulsi3>
1000d430:	1007883a 	mov	r3,r2
1000d434:	00840074 	movhi	r2,4097
1000d438:	10809004 	addi	r2,r2,576
1000d43c:	1885883a 	add	r2,r3,r2
1000d440:	00000106 	br	1000d448 <read+0x48>
1000d444:	0005883a 	mov	r2,zero
1000d448:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000d44c:	e0bffb17 	ldw	r2,-20(fp)
1000d450:	10002226 	beq	r2,zero,1000d4dc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000d454:	e0bffb17 	ldw	r2,-20(fp)
1000d458:	10800217 	ldw	r2,8(r2)
1000d45c:	108000cc 	andi	r2,r2,3
1000d460:	10800060 	cmpeqi	r2,r2,1
1000d464:	1000181e 	bne	r2,zero,1000d4c8 <read+0xc8>
        (fd->dev->read))
1000d468:	e0bffb17 	ldw	r2,-20(fp)
1000d46c:	10800017 	ldw	r2,0(r2)
1000d470:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000d474:	10001426 	beq	r2,zero,1000d4c8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1000d478:	e0bffb17 	ldw	r2,-20(fp)
1000d47c:	10800017 	ldw	r2,0(r2)
1000d480:	10800517 	ldw	r2,20(r2)
1000d484:	e0ffff17 	ldw	r3,-4(fp)
1000d488:	e13ffb17 	ldw	r4,-20(fp)
1000d48c:	e17ffe17 	ldw	r5,-8(fp)
1000d490:	180d883a 	mov	r6,r3
1000d494:	103ee83a 	callr	r2
1000d498:	e0bffc15 	stw	r2,-16(fp)
1000d49c:	e0bffc17 	ldw	r2,-16(fp)
1000d4a0:	1000070e 	bge	r2,zero,1000d4c0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1000d4a4:	000d3b00 	call	1000d3b0 <alt_get_errno>
1000d4a8:	1007883a 	mov	r3,r2
1000d4ac:	e0bffc17 	ldw	r2,-16(fp)
1000d4b0:	0085c83a 	sub	r2,zero,r2
1000d4b4:	18800015 	stw	r2,0(r3)
          return -1;
1000d4b8:	00bfffc4 	movi	r2,-1
1000d4bc:	00000c06 	br	1000d4f0 <read+0xf0>
        }
        return rval;
1000d4c0:	e0bffc17 	ldw	r2,-16(fp)
1000d4c4:	00000a06 	br	1000d4f0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1000d4c8:	000d3b00 	call	1000d3b0 <alt_get_errno>
1000d4cc:	1007883a 	mov	r3,r2
1000d4d0:	00800344 	movi	r2,13
1000d4d4:	18800015 	stw	r2,0(r3)
1000d4d8:	00000406 	br	1000d4ec <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1000d4dc:	000d3b00 	call	1000d3b0 <alt_get_errno>
1000d4e0:	1007883a 	mov	r3,r2
1000d4e4:	00801444 	movi	r2,81
1000d4e8:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000d4ec:	00bfffc4 	movi	r2,-1
}
1000d4f0:	e037883a 	mov	sp,fp
1000d4f4:	dfc00117 	ldw	ra,4(sp)
1000d4f8:	df000017 	ldw	fp,0(sp)
1000d4fc:	dec00204 	addi	sp,sp,8
1000d500:	f800283a 	ret

1000d504 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1000d504:	defffc04 	addi	sp,sp,-16
1000d508:	dfc00315 	stw	ra,12(sp)
1000d50c:	df000215 	stw	fp,8(sp)
1000d510:	dc000115 	stw	r16,4(sp)
1000d514:	df000204 	addi	fp,sp,8
1000d518:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1000d51c:	e0bffe17 	ldw	r2,-8(fp)
1000d520:	108000d0 	cmplti	r2,r2,3
1000d524:	1000111e 	bne	r2,zero,1000d56c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1000d528:	04040074 	movhi	r16,4097
1000d52c:	84009004 	addi	r16,r16,576
1000d530:	e0bffe17 	ldw	r2,-8(fp)
1000d534:	1009883a 	mov	r4,r2
1000d538:	01400304 	movi	r5,12
1000d53c:	00019c40 	call	100019c4 <__mulsi3>
1000d540:	8085883a 	add	r2,r16,r2
1000d544:	10800204 	addi	r2,r2,8
1000d548:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1000d54c:	04040074 	movhi	r16,4097
1000d550:	84009004 	addi	r16,r16,576
1000d554:	e0bffe17 	ldw	r2,-8(fp)
1000d558:	1009883a 	mov	r4,r2
1000d55c:	01400304 	movi	r5,12
1000d560:	00019c40 	call	100019c4 <__mulsi3>
1000d564:	8085883a 	add	r2,r16,r2
1000d568:	10000015 	stw	zero,0(r2)
  }
}
1000d56c:	e6ffff04 	addi	sp,fp,-4
1000d570:	dfc00217 	ldw	ra,8(sp)
1000d574:	df000117 	ldw	fp,4(sp)
1000d578:	dc000017 	ldw	r16,0(sp)
1000d57c:	dec00304 	addi	sp,sp,12
1000d580:	f800283a 	ret

1000d584 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1000d584:	defff904 	addi	sp,sp,-28
1000d588:	df000615 	stw	fp,24(sp)
1000d58c:	df000604 	addi	fp,sp,24
1000d590:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000d594:	0005303a 	rdctl	r2,status
1000d598:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000d59c:	e0fffc17 	ldw	r3,-16(fp)
1000d5a0:	00bfff84 	movi	r2,-2
1000d5a4:	1884703a 	and	r2,r3,r2
1000d5a8:	1001703a 	wrctl	status,r2
  
  return context;
1000d5ac:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1000d5b0:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1000d5b4:	d0a00c17 	ldw	r2,-32720(gp)
1000d5b8:	10c000c4 	addi	r3,r2,3
1000d5bc:	00bfff04 	movi	r2,-4
1000d5c0:	1884703a 	and	r2,r3,r2
1000d5c4:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1000d5c8:	d0e00c17 	ldw	r3,-32720(gp)
1000d5cc:	e0bfff17 	ldw	r2,-4(fp)
1000d5d0:	1887883a 	add	r3,r3,r2
1000d5d4:	00860034 	movhi	r2,6144
1000d5d8:	10800004 	addi	r2,r2,0
1000d5dc:	10c0062e 	bgeu	r2,r3,1000d5f8 <sbrk+0x74>
1000d5e0:	e0bffa17 	ldw	r2,-24(fp)
1000d5e4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000d5e8:	e0bffd17 	ldw	r2,-12(fp)
1000d5ec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1000d5f0:	00bfffc4 	movi	r2,-1
1000d5f4:	00000b06 	br	1000d624 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1000d5f8:	d0a00c17 	ldw	r2,-32720(gp)
1000d5fc:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
1000d600:	d0e00c17 	ldw	r3,-32720(gp)
1000d604:	e0bfff17 	ldw	r2,-4(fp)
1000d608:	1885883a 	add	r2,r3,r2
1000d60c:	d0a00c15 	stw	r2,-32720(gp)
1000d610:	e0bffa17 	ldw	r2,-24(fp)
1000d614:	e0bffe15 	stw	r2,-8(fp)
1000d618:	e0bffe17 	ldw	r2,-8(fp)
1000d61c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1000d620:	e0bffb17 	ldw	r2,-20(fp)
} 
1000d624:	e037883a 	mov	sp,fp
1000d628:	df000017 	ldw	fp,0(sp)
1000d62c:	dec00104 	addi	sp,sp,4
1000d630:	f800283a 	ret

1000d634 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d634:	defffe04 	addi	sp,sp,-8
1000d638:	dfc00115 	stw	ra,4(sp)
1000d63c:	df000015 	stw	fp,0(sp)
1000d640:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d644:	00840074 	movhi	r2,4097
1000d648:	10851304 	addi	r2,r2,5196
1000d64c:	10800017 	ldw	r2,0(r2)
1000d650:	10000526 	beq	r2,zero,1000d668 <alt_get_errno+0x34>
1000d654:	00840074 	movhi	r2,4097
1000d658:	10851304 	addi	r2,r2,5196
1000d65c:	10800017 	ldw	r2,0(r2)
1000d660:	103ee83a 	callr	r2
1000d664:	00000206 	br	1000d670 <alt_get_errno+0x3c>
1000d668:	00840074 	movhi	r2,4097
1000d66c:	108bd904 	addi	r2,r2,12132
}
1000d670:	e037883a 	mov	sp,fp
1000d674:	dfc00117 	ldw	ra,4(sp)
1000d678:	df000017 	ldw	fp,0(sp)
1000d67c:	dec00204 	addi	sp,sp,8
1000d680:	f800283a 	ret

1000d684 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
1000d684:	defffc04 	addi	sp,sp,-16
1000d688:	dfc00315 	stw	ra,12(sp)
1000d68c:	df000215 	stw	fp,8(sp)
1000d690:	df000204 	addi	fp,sp,8
1000d694:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1000d698:	00840074 	movhi	r2,4097
1000d69c:	108bdf04 	addi	r2,r2,12156
1000d6a0:	10800017 	ldw	r2,0(r2)
  clock_t ticks = alt_nticks(); 
1000d6a4:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1000d6a8:	00840074 	movhi	r2,4097
1000d6ac:	108bde04 	addi	r2,r2,12152
1000d6b0:	10800017 	ldw	r2,0(r2)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
1000d6b4:	1000061e 	bne	r2,zero,1000d6d0 <times+0x4c>
  {
    ALT_ERRNO = ENOSYS;
1000d6b8:	000d6340 	call	1000d634 <alt_get_errno>
1000d6bc:	1007883a 	mov	r3,r2
1000d6c0:	00801604 	movi	r2,88
1000d6c4:	18800015 	stw	r2,0(r3)
    return 0;
1000d6c8:	0005883a 	mov	r2,zero
1000d6cc:	00000a06 	br	1000d6f8 <times+0x74>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
1000d6d0:	e0bfff17 	ldw	r2,-4(fp)
1000d6d4:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
1000d6d8:	e0bfff17 	ldw	r2,-4(fp)
1000d6dc:	e0fffe17 	ldw	r3,-8(fp)
1000d6e0:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
1000d6e4:	e0bfff17 	ldw	r2,-4(fp)
1000d6e8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
1000d6ec:	e0bfff17 	ldw	r2,-4(fp)
1000d6f0:	10000315 	stw	zero,12(r2)

  return ticks;
1000d6f4:	e0bffe17 	ldw	r2,-8(fp)
}
1000d6f8:	e037883a 	mov	sp,fp
1000d6fc:	dfc00117 	ldw	ra,4(sp)
1000d700:	df000017 	ldw	fp,0(sp)
1000d704:	dec00204 	addi	sp,sp,8
1000d708:	f800283a 	ret

1000d70c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d70c:	defffe04 	addi	sp,sp,-8
1000d710:	dfc00115 	stw	ra,4(sp)
1000d714:	df000015 	stw	fp,0(sp)
1000d718:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d71c:	00840074 	movhi	r2,4097
1000d720:	10851304 	addi	r2,r2,5196
1000d724:	10800017 	ldw	r2,0(r2)
1000d728:	10000526 	beq	r2,zero,1000d740 <alt_get_errno+0x34>
1000d72c:	00840074 	movhi	r2,4097
1000d730:	10851304 	addi	r2,r2,5196
1000d734:	10800017 	ldw	r2,0(r2)
1000d738:	103ee83a 	callr	r2
1000d73c:	00000206 	br	1000d748 <alt_get_errno+0x3c>
1000d740:	00840074 	movhi	r2,4097
1000d744:	108bd904 	addi	r2,r2,12132
}
1000d748:	e037883a 	mov	sp,fp
1000d74c:	dfc00117 	ldw	ra,4(sp)
1000d750:	df000017 	ldw	fp,0(sp)
1000d754:	dec00204 	addi	sp,sp,8
1000d758:	f800283a 	ret

1000d75c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1000d75c:	defff904 	addi	sp,sp,-28
1000d760:	dfc00615 	stw	ra,24(sp)
1000d764:	df000515 	stw	fp,20(sp)
1000d768:	df000504 	addi	fp,sp,20
1000d76c:	e13ffd15 	stw	r4,-12(fp)
1000d770:	e17ffe15 	stw	r5,-8(fp)
1000d774:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d778:	e0bffd17 	ldw	r2,-12(fp)
1000d77c:	10000816 	blt	r2,zero,1000d7a0 <write+0x44>
1000d780:	e13ffd17 	ldw	r4,-12(fp)
1000d784:	01400304 	movi	r5,12
1000d788:	00019c40 	call	100019c4 <__mulsi3>
1000d78c:	1007883a 	mov	r3,r2
1000d790:	00840074 	movhi	r2,4097
1000d794:	10809004 	addi	r2,r2,576
1000d798:	1885883a 	add	r2,r3,r2
1000d79c:	00000106 	br	1000d7a4 <write+0x48>
1000d7a0:	0005883a 	mov	r2,zero
1000d7a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000d7a8:	e0bffb17 	ldw	r2,-20(fp)
1000d7ac:	10002126 	beq	r2,zero,1000d834 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1000d7b0:	e0bffb17 	ldw	r2,-20(fp)
1000d7b4:	10800217 	ldw	r2,8(r2)
1000d7b8:	108000cc 	andi	r2,r2,3
1000d7bc:	10001826 	beq	r2,zero,1000d820 <write+0xc4>
1000d7c0:	e0bffb17 	ldw	r2,-20(fp)
1000d7c4:	10800017 	ldw	r2,0(r2)
1000d7c8:	10800617 	ldw	r2,24(r2)
1000d7cc:	10001426 	beq	r2,zero,1000d820 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1000d7d0:	e0bffb17 	ldw	r2,-20(fp)
1000d7d4:	10800017 	ldw	r2,0(r2)
1000d7d8:	10800617 	ldw	r2,24(r2)
1000d7dc:	e0ffff17 	ldw	r3,-4(fp)
1000d7e0:	e13ffb17 	ldw	r4,-20(fp)
1000d7e4:	e17ffe17 	ldw	r5,-8(fp)
1000d7e8:	180d883a 	mov	r6,r3
1000d7ec:	103ee83a 	callr	r2
1000d7f0:	e0bffc15 	stw	r2,-16(fp)
1000d7f4:	e0bffc17 	ldw	r2,-16(fp)
1000d7f8:	1000070e 	bge	r2,zero,1000d818 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1000d7fc:	000d70c0 	call	1000d70c <alt_get_errno>
1000d800:	1007883a 	mov	r3,r2
1000d804:	e0bffc17 	ldw	r2,-16(fp)
1000d808:	0085c83a 	sub	r2,zero,r2
1000d80c:	18800015 	stw	r2,0(r3)
        return -1;
1000d810:	00bfffc4 	movi	r2,-1
1000d814:	00000c06 	br	1000d848 <write+0xec>
      }
      return rval;
1000d818:	e0bffc17 	ldw	r2,-16(fp)
1000d81c:	00000a06 	br	1000d848 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1000d820:	000d70c0 	call	1000d70c <alt_get_errno>
1000d824:	1007883a 	mov	r3,r2
1000d828:	00800344 	movi	r2,13
1000d82c:	18800015 	stw	r2,0(r3)
1000d830:	00000406 	br	1000d844 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1000d834:	000d70c0 	call	1000d70c <alt_get_errno>
1000d838:	1007883a 	mov	r3,r2
1000d83c:	00801444 	movi	r2,81
1000d840:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000d844:	00bfffc4 	movi	r2,-1
}
1000d848:	e037883a 	mov	sp,fp
1000d84c:	dfc00117 	ldw	ra,4(sp)
1000d850:	df000017 	ldw	fp,0(sp)
1000d854:	dec00204 	addi	sp,sp,8
1000d858:	f800283a 	ret

1000d85c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1000d85c:	defffd04 	addi	sp,sp,-12
1000d860:	dfc00215 	stw	ra,8(sp)
1000d864:	df000115 	stw	fp,4(sp)
1000d868:	df000104 	addi	fp,sp,4
1000d86c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1000d870:	e13fff17 	ldw	r4,-4(fp)
1000d874:	01440074 	movhi	r5,4097
1000d878:	29451004 	addi	r5,r5,5184
1000d87c:	000e5080 	call	1000e508 <alt_dev_llist_insert>
}
1000d880:	e037883a 	mov	sp,fp
1000d884:	dfc00117 	ldw	ra,4(sp)
1000d888:	df000017 	ldw	fp,0(sp)
1000d88c:	dec00204 	addi	sp,sp,8
1000d890:	f800283a 	ret

1000d894 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1000d894:	defffd04 	addi	sp,sp,-12
1000d898:	dfc00215 	stw	ra,8(sp)
1000d89c:	df000115 	stw	fp,4(sp)
1000d8a0:	df000104 	addi	fp,sp,4
1000d8a4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
1000d8a8:	000eee80 	call	1000eee8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1000d8ac:	00800044 	movi	r2,1
1000d8b0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1000d8b4:	e037883a 	mov	sp,fp
1000d8b8:	dfc00117 	ldw	ra,4(sp)
1000d8bc:	df000017 	ldw	fp,0(sp)
1000d8c0:	dec00204 	addi	sp,sp,8
1000d8c4:	f800283a 	ret

1000d8c8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1000d8c8:	defffe04 	addi	sp,sp,-8
1000d8cc:	dfc00115 	stw	ra,4(sp)
1000d8d0:	df000015 	stw	fp,0(sp)
1000d8d4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1000d8d8:	01040074 	movhi	r4,4097
1000d8dc:	2100fa04 	addi	r4,r4,1000
1000d8e0:	000b883a 	mov	r5,zero
1000d8e4:	01800144 	movi	r6,5
1000d8e8:	000da740 	call	1000da74 <altera_avalon_jtag_uart_init>
1000d8ec:	01040074 	movhi	r4,4097
1000d8f0:	2100f004 	addi	r4,r4,960
1000d8f4:	000d85c0 	call	1000d85c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1000d8f8:	0001883a 	nop
}
1000d8fc:	e037883a 	mov	sp,fp
1000d900:	dfc00117 	ldw	ra,4(sp)
1000d904:	df000017 	ldw	fp,0(sp)
1000d908:	dec00204 	addi	sp,sp,8
1000d90c:	f800283a 	ret

1000d910 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1000d910:	defffa04 	addi	sp,sp,-24
1000d914:	dfc00515 	stw	ra,20(sp)
1000d918:	df000415 	stw	fp,16(sp)
1000d91c:	df000404 	addi	fp,sp,16
1000d920:	e13ffd15 	stw	r4,-12(fp)
1000d924:	e17ffe15 	stw	r5,-8(fp)
1000d928:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000d92c:	e0bffd17 	ldw	r2,-12(fp)
1000d930:	10800017 	ldw	r2,0(r2)
1000d934:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1000d938:	e0bffc17 	ldw	r2,-16(fp)
1000d93c:	10c00a04 	addi	r3,r2,40
1000d940:	e0bffd17 	ldw	r2,-12(fp)
1000d944:	10800217 	ldw	r2,8(r2)
1000d948:	1809883a 	mov	r4,r3
1000d94c:	e17ffe17 	ldw	r5,-8(fp)
1000d950:	e1bfff17 	ldw	r6,-4(fp)
1000d954:	100f883a 	mov	r7,r2
1000d958:	000df380 	call	1000df38 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1000d95c:	e037883a 	mov	sp,fp
1000d960:	dfc00117 	ldw	ra,4(sp)
1000d964:	df000017 	ldw	fp,0(sp)
1000d968:	dec00204 	addi	sp,sp,8
1000d96c:	f800283a 	ret

1000d970 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1000d970:	defffa04 	addi	sp,sp,-24
1000d974:	dfc00515 	stw	ra,20(sp)
1000d978:	df000415 	stw	fp,16(sp)
1000d97c:	df000404 	addi	fp,sp,16
1000d980:	e13ffd15 	stw	r4,-12(fp)
1000d984:	e17ffe15 	stw	r5,-8(fp)
1000d988:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000d98c:	e0bffd17 	ldw	r2,-12(fp)
1000d990:	10800017 	ldw	r2,0(r2)
1000d994:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1000d998:	e0bffc17 	ldw	r2,-16(fp)
1000d99c:	10c00a04 	addi	r3,r2,40
1000d9a0:	e0bffd17 	ldw	r2,-12(fp)
1000d9a4:	10800217 	ldw	r2,8(r2)
1000d9a8:	1809883a 	mov	r4,r3
1000d9ac:	e17ffe17 	ldw	r5,-8(fp)
1000d9b0:	e1bfff17 	ldw	r6,-4(fp)
1000d9b4:	100f883a 	mov	r7,r2
1000d9b8:	000e1440 	call	1000e144 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1000d9bc:	e037883a 	mov	sp,fp
1000d9c0:	dfc00117 	ldw	ra,4(sp)
1000d9c4:	df000017 	ldw	fp,0(sp)
1000d9c8:	dec00204 	addi	sp,sp,8
1000d9cc:	f800283a 	ret

1000d9d0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1000d9d0:	defffc04 	addi	sp,sp,-16
1000d9d4:	dfc00315 	stw	ra,12(sp)
1000d9d8:	df000215 	stw	fp,8(sp)
1000d9dc:	df000204 	addi	fp,sp,8
1000d9e0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000d9e4:	e0bfff17 	ldw	r2,-4(fp)
1000d9e8:	10800017 	ldw	r2,0(r2)
1000d9ec:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1000d9f0:	e0bffe17 	ldw	r2,-8(fp)
1000d9f4:	10c00a04 	addi	r3,r2,40
1000d9f8:	e0bfff17 	ldw	r2,-4(fp)
1000d9fc:	10800217 	ldw	r2,8(r2)
1000da00:	1809883a 	mov	r4,r3
1000da04:	100b883a 	mov	r5,r2
1000da08:	000dde40 	call	1000dde4 <altera_avalon_jtag_uart_close>
}
1000da0c:	e037883a 	mov	sp,fp
1000da10:	dfc00117 	ldw	ra,4(sp)
1000da14:	df000017 	ldw	fp,0(sp)
1000da18:	dec00204 	addi	sp,sp,8
1000da1c:	f800283a 	ret

1000da20 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1000da20:	defffa04 	addi	sp,sp,-24
1000da24:	dfc00515 	stw	ra,20(sp)
1000da28:	df000415 	stw	fp,16(sp)
1000da2c:	df000404 	addi	fp,sp,16
1000da30:	e13ffd15 	stw	r4,-12(fp)
1000da34:	e17ffe15 	stw	r5,-8(fp)
1000da38:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1000da3c:	e0bffd17 	ldw	r2,-12(fp)
1000da40:	10800017 	ldw	r2,0(r2)
1000da44:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1000da48:	e0bffc17 	ldw	r2,-16(fp)
1000da4c:	10800a04 	addi	r2,r2,40
1000da50:	1009883a 	mov	r4,r2
1000da54:	e17ffe17 	ldw	r5,-8(fp)
1000da58:	e1bfff17 	ldw	r6,-4(fp)
1000da5c:	000de4c0 	call	1000de4c <altera_avalon_jtag_uart_ioctl>
}
1000da60:	e037883a 	mov	sp,fp
1000da64:	dfc00117 	ldw	ra,4(sp)
1000da68:	df000017 	ldw	fp,0(sp)
1000da6c:	dec00204 	addi	sp,sp,8
1000da70:	f800283a 	ret

1000da74 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1000da74:	defffa04 	addi	sp,sp,-24
1000da78:	dfc00515 	stw	ra,20(sp)
1000da7c:	df000415 	stw	fp,16(sp)
1000da80:	df000404 	addi	fp,sp,16
1000da84:	e13ffd15 	stw	r4,-12(fp)
1000da88:	e17ffe15 	stw	r5,-8(fp)
1000da8c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000da90:	e0bffd17 	ldw	r2,-12(fp)
1000da94:	00c00044 	movi	r3,1
1000da98:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1000da9c:	e0bffd17 	ldw	r2,-12(fp)
1000daa0:	10800017 	ldw	r2,0(r2)
1000daa4:	10800104 	addi	r2,r2,4
1000daa8:	1007883a 	mov	r3,r2
1000daac:	e0bffd17 	ldw	r2,-12(fp)
1000dab0:	10800817 	ldw	r2,32(r2)
1000dab4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1000dab8:	e0fffe17 	ldw	r3,-8(fp)
1000dabc:	e0bfff17 	ldw	r2,-4(fp)
1000dac0:	d8000015 	stw	zero,0(sp)
1000dac4:	1809883a 	mov	r4,r3
1000dac8:	100b883a 	mov	r5,r2
1000dacc:	01840074 	movhi	r6,4097
1000dad0:	31b6ce04 	addi	r6,r6,-9416
1000dad4:	e1fffd17 	ldw	r7,-12(fp)
1000dad8:	000e6800 	call	1000e680 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1000dadc:	e0bffd17 	ldw	r2,-12(fp)
1000dae0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1000dae4:	e0bffd17 	ldw	r2,-12(fp)
1000dae8:	10c00204 	addi	r3,r2,8
1000daec:	00840074 	movhi	r2,4097
1000daf0:	108bde04 	addi	r2,r2,12152
1000daf4:	10800017 	ldw	r2,0(r2)
1000daf8:	1809883a 	mov	r4,r3
1000dafc:	100b883a 	mov	r5,r2
1000db00:	01840074 	movhi	r6,4097
1000db04:	31b74f04 	addi	r6,r6,-8900
1000db08:	e1fffd17 	ldw	r7,-12(fp)
1000db0c:	000e35c0 	call	1000e35c <alt_alarm_start>
1000db10:	1000040e 	bge	r2,zero,1000db24 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1000db14:	e0fffd17 	ldw	r3,-12(fp)
1000db18:	00a00034 	movhi	r2,32768
1000db1c:	10bfffc4 	addi	r2,r2,-1
1000db20:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1000db24:	e037883a 	mov	sp,fp
1000db28:	dfc00117 	ldw	ra,4(sp)
1000db2c:	df000017 	ldw	fp,0(sp)
1000db30:	dec00204 	addi	sp,sp,8
1000db34:	f800283a 	ret

1000db38 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1000db38:	defff804 	addi	sp,sp,-32
1000db3c:	df000715 	stw	fp,28(sp)
1000db40:	df000704 	addi	fp,sp,28
1000db44:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1000db48:	e0bfff17 	ldw	r2,-4(fp)
1000db4c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1000db50:	e0bffb17 	ldw	r2,-20(fp)
1000db54:	10800017 	ldw	r2,0(r2)
1000db58:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000db5c:	e0bffc17 	ldw	r2,-16(fp)
1000db60:	10800104 	addi	r2,r2,4
1000db64:	10800037 	ldwio	r2,0(r2)
1000db68:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1000db6c:	e0bffd17 	ldw	r2,-12(fp)
1000db70:	1080c00c 	andi	r2,r2,768
1000db74:	1000011e 	bne	r2,zero,1000db7c <altera_avalon_jtag_uart_irq+0x44>
      break;
1000db78:	00006c06 	br	1000dd2c <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1000db7c:	e0bffd17 	ldw	r2,-12(fp)
1000db80:	1080400c 	andi	r2,r2,256
1000db84:	10003426 	beq	r2,zero,1000dc58 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1000db88:	00800074 	movhi	r2,1
1000db8c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000db90:	e0bffb17 	ldw	r2,-20(fp)
1000db94:	10800a17 	ldw	r2,40(r2)
1000db98:	10800044 	addi	r2,r2,1
1000db9c:	1081ffcc 	andi	r2,r2,2047
1000dba0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1000dba4:	e0bffb17 	ldw	r2,-20(fp)
1000dba8:	10c00b17 	ldw	r3,44(r2)
1000dbac:	e0bffe17 	ldw	r2,-8(fp)
1000dbb0:	1880011e 	bne	r3,r2,1000dbb8 <altera_avalon_jtag_uart_irq+0x80>
          break;
1000dbb4:	00001606 	br	1000dc10 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1000dbb8:	e0bffc17 	ldw	r2,-16(fp)
1000dbbc:	10800037 	ldwio	r2,0(r2)
1000dbc0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1000dbc4:	e0bff917 	ldw	r2,-28(fp)
1000dbc8:	10a0000c 	andi	r2,r2,32768
1000dbcc:	1000011e 	bne	r2,zero,1000dbd4 <altera_avalon_jtag_uart_irq+0x9c>
          break;
1000dbd0:	00000f06 	br	1000dc10 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1000dbd4:	e0bffb17 	ldw	r2,-20(fp)
1000dbd8:	10800a17 	ldw	r2,40(r2)
1000dbdc:	e0fff917 	ldw	r3,-28(fp)
1000dbe0:	1809883a 	mov	r4,r3
1000dbe4:	e0fffb17 	ldw	r3,-20(fp)
1000dbe8:	1885883a 	add	r2,r3,r2
1000dbec:	10800e04 	addi	r2,r2,56
1000dbf0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000dbf4:	e0bffb17 	ldw	r2,-20(fp)
1000dbf8:	10800a17 	ldw	r2,40(r2)
1000dbfc:	10800044 	addi	r2,r2,1
1000dc00:	10c1ffcc 	andi	r3,r2,2047
1000dc04:	e0bffb17 	ldw	r2,-20(fp)
1000dc08:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1000dc0c:	003fe006 	br	1000db90 <__alt_data_end+0xf800db90>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1000dc10:	e0bff917 	ldw	r2,-28(fp)
1000dc14:	10bfffec 	andhi	r2,r2,65535
1000dc18:	10000f26 	beq	r2,zero,1000dc58 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000dc1c:	e0bffb17 	ldw	r2,-20(fp)
1000dc20:	10c00817 	ldw	r3,32(r2)
1000dc24:	00bfff84 	movi	r2,-2
1000dc28:	1886703a 	and	r3,r3,r2
1000dc2c:	e0bffb17 	ldw	r2,-20(fp)
1000dc30:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1000dc34:	e0bffc17 	ldw	r2,-16(fp)
1000dc38:	10800104 	addi	r2,r2,4
1000dc3c:	1007883a 	mov	r3,r2
1000dc40:	e0bffb17 	ldw	r2,-20(fp)
1000dc44:	10800817 	ldw	r2,32(r2)
1000dc48:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000dc4c:	e0bffc17 	ldw	r2,-16(fp)
1000dc50:	10800104 	addi	r2,r2,4
1000dc54:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1000dc58:	e0bffd17 	ldw	r2,-12(fp)
1000dc5c:	1080800c 	andi	r2,r2,512
1000dc60:	10003126 	beq	r2,zero,1000dd28 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1000dc64:	e0bffd17 	ldw	r2,-12(fp)
1000dc68:	1004d43a 	srli	r2,r2,16
1000dc6c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1000dc70:	00001406 	br	1000dcc4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1000dc74:	e0bffc17 	ldw	r2,-16(fp)
1000dc78:	e0fffb17 	ldw	r3,-20(fp)
1000dc7c:	18c00d17 	ldw	r3,52(r3)
1000dc80:	e13ffb17 	ldw	r4,-20(fp)
1000dc84:	20c7883a 	add	r3,r4,r3
1000dc88:	18c20e04 	addi	r3,r3,2104
1000dc8c:	18c00003 	ldbu	r3,0(r3)
1000dc90:	18c03fcc 	andi	r3,r3,255
1000dc94:	18c0201c 	xori	r3,r3,128
1000dc98:	18ffe004 	addi	r3,r3,-128
1000dc9c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000dca0:	e0bffb17 	ldw	r2,-20(fp)
1000dca4:	10800d17 	ldw	r2,52(r2)
1000dca8:	10800044 	addi	r2,r2,1
1000dcac:	10c1ffcc 	andi	r3,r2,2047
1000dcb0:	e0bffb17 	ldw	r2,-20(fp)
1000dcb4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1000dcb8:	e0bffa17 	ldw	r2,-24(fp)
1000dcbc:	10bfffc4 	addi	r2,r2,-1
1000dcc0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1000dcc4:	e0bffa17 	ldw	r2,-24(fp)
1000dcc8:	10000526 	beq	r2,zero,1000dce0 <altera_avalon_jtag_uart_irq+0x1a8>
1000dccc:	e0bffb17 	ldw	r2,-20(fp)
1000dcd0:	10c00d17 	ldw	r3,52(r2)
1000dcd4:	e0bffb17 	ldw	r2,-20(fp)
1000dcd8:	10800c17 	ldw	r2,48(r2)
1000dcdc:	18bfe51e 	bne	r3,r2,1000dc74 <__alt_data_end+0xf800dc74>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1000dce0:	e0bffa17 	ldw	r2,-24(fp)
1000dce4:	10001026 	beq	r2,zero,1000dd28 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1000dce8:	e0bffb17 	ldw	r2,-20(fp)
1000dcec:	10c00817 	ldw	r3,32(r2)
1000dcf0:	00bfff44 	movi	r2,-3
1000dcf4:	1886703a 	and	r3,r3,r2
1000dcf8:	e0bffb17 	ldw	r2,-20(fp)
1000dcfc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000dd00:	e0bffb17 	ldw	r2,-20(fp)
1000dd04:	10800017 	ldw	r2,0(r2)
1000dd08:	10800104 	addi	r2,r2,4
1000dd0c:	1007883a 	mov	r3,r2
1000dd10:	e0bffb17 	ldw	r2,-20(fp)
1000dd14:	10800817 	ldw	r2,32(r2)
1000dd18:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000dd1c:	e0bffc17 	ldw	r2,-16(fp)
1000dd20:	10800104 	addi	r2,r2,4
1000dd24:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1000dd28:	003f8c06 	br	1000db5c <__alt_data_end+0xf800db5c>
}
1000dd2c:	e037883a 	mov	sp,fp
1000dd30:	df000017 	ldw	fp,0(sp)
1000dd34:	dec00104 	addi	sp,sp,4
1000dd38:	f800283a 	ret

1000dd3c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1000dd3c:	defff804 	addi	sp,sp,-32
1000dd40:	df000715 	stw	fp,28(sp)
1000dd44:	df000704 	addi	fp,sp,28
1000dd48:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1000dd4c:	e0bffb17 	ldw	r2,-20(fp)
1000dd50:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1000dd54:	e0bff917 	ldw	r2,-28(fp)
1000dd58:	10800017 	ldw	r2,0(r2)
1000dd5c:	10800104 	addi	r2,r2,4
1000dd60:	10800037 	ldwio	r2,0(r2)
1000dd64:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1000dd68:	e0bffa17 	ldw	r2,-24(fp)
1000dd6c:	1081000c 	andi	r2,r2,1024
1000dd70:	10000b26 	beq	r2,zero,1000dda0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1000dd74:	e0bff917 	ldw	r2,-28(fp)
1000dd78:	10800017 	ldw	r2,0(r2)
1000dd7c:	10800104 	addi	r2,r2,4
1000dd80:	1007883a 	mov	r3,r2
1000dd84:	e0bff917 	ldw	r2,-28(fp)
1000dd88:	10800817 	ldw	r2,32(r2)
1000dd8c:	10810014 	ori	r2,r2,1024
1000dd90:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1000dd94:	e0bff917 	ldw	r2,-28(fp)
1000dd98:	10000915 	stw	zero,36(r2)
1000dd9c:	00000a06 	br	1000ddc8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1000dda0:	e0bff917 	ldw	r2,-28(fp)
1000dda4:	10c00917 	ldw	r3,36(r2)
1000dda8:	00a00034 	movhi	r2,32768
1000ddac:	10bfff04 	addi	r2,r2,-4
1000ddb0:	10c00536 	bltu	r2,r3,1000ddc8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1000ddb4:	e0bff917 	ldw	r2,-28(fp)
1000ddb8:	10800917 	ldw	r2,36(r2)
1000ddbc:	10c00044 	addi	r3,r2,1
1000ddc0:	e0bff917 	ldw	r2,-28(fp)
1000ddc4:	10c00915 	stw	r3,36(r2)
1000ddc8:	00840074 	movhi	r2,4097
1000ddcc:	108bde04 	addi	r2,r2,12152
1000ddd0:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1000ddd4:	e037883a 	mov	sp,fp
1000ddd8:	df000017 	ldw	fp,0(sp)
1000dddc:	dec00104 	addi	sp,sp,4
1000dde0:	f800283a 	ret

1000dde4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1000dde4:	defffd04 	addi	sp,sp,-12
1000dde8:	df000215 	stw	fp,8(sp)
1000ddec:	df000204 	addi	fp,sp,8
1000ddf0:	e13ffe15 	stw	r4,-8(fp)
1000ddf4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1000ddf8:	00000506 	br	1000de10 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1000ddfc:	e0bfff17 	ldw	r2,-4(fp)
1000de00:	1090000c 	andi	r2,r2,16384
1000de04:	10000226 	beq	r2,zero,1000de10 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1000de08:	00bffd44 	movi	r2,-11
1000de0c:	00000b06 	br	1000de3c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1000de10:	e0bffe17 	ldw	r2,-8(fp)
1000de14:	10c00d17 	ldw	r3,52(r2)
1000de18:	e0bffe17 	ldw	r2,-8(fp)
1000de1c:	10800c17 	ldw	r2,48(r2)
1000de20:	18800526 	beq	r3,r2,1000de38 <altera_avalon_jtag_uart_close+0x54>
1000de24:	e0bffe17 	ldw	r2,-8(fp)
1000de28:	10c00917 	ldw	r3,36(r2)
1000de2c:	e0bffe17 	ldw	r2,-8(fp)
1000de30:	10800117 	ldw	r2,4(r2)
1000de34:	18bff136 	bltu	r3,r2,1000ddfc <__alt_data_end+0xf800ddfc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1000de38:	0005883a 	mov	r2,zero
}
1000de3c:	e037883a 	mov	sp,fp
1000de40:	df000017 	ldw	fp,0(sp)
1000de44:	dec00104 	addi	sp,sp,4
1000de48:	f800283a 	ret

1000de4c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1000de4c:	defffa04 	addi	sp,sp,-24
1000de50:	df000515 	stw	fp,20(sp)
1000de54:	df000504 	addi	fp,sp,20
1000de58:	e13ffd15 	stw	r4,-12(fp)
1000de5c:	e17ffe15 	stw	r5,-8(fp)
1000de60:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1000de64:	00bff9c4 	movi	r2,-25
1000de68:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1000de6c:	e0bffe17 	ldw	r2,-8(fp)
1000de70:	10da8060 	cmpeqi	r3,r2,27137
1000de74:	1800031e 	bne	r3,zero,1000de84 <altera_avalon_jtag_uart_ioctl+0x38>
1000de78:	109a80a0 	cmpeqi	r2,r2,27138
1000de7c:	1000191e 	bne	r2,zero,1000dee4 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
1000de80:	00002806 	br	1000df24 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1000de84:	e0bffd17 	ldw	r2,-12(fp)
1000de88:	10c00117 	ldw	r3,4(r2)
1000de8c:	00a00034 	movhi	r2,32768
1000de90:	10bfffc4 	addi	r2,r2,-1
1000de94:	18801226 	beq	r3,r2,1000dee0 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
1000de98:	e0bfff17 	ldw	r2,-4(fp)
1000de9c:	10800017 	ldw	r2,0(r2)
1000dea0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1000dea4:	e0bffc17 	ldw	r2,-16(fp)
1000dea8:	10800090 	cmplti	r2,r2,2
1000deac:	1000061e 	bne	r2,zero,1000dec8 <altera_avalon_jtag_uart_ioctl+0x7c>
1000deb0:	e0fffc17 	ldw	r3,-16(fp)
1000deb4:	00a00034 	movhi	r2,32768
1000deb8:	10bfffc4 	addi	r2,r2,-1
1000debc:	18800226 	beq	r3,r2,1000dec8 <altera_avalon_jtag_uart_ioctl+0x7c>
1000dec0:	e0bffc17 	ldw	r2,-16(fp)
1000dec4:	00000206 	br	1000ded0 <altera_avalon_jtag_uart_ioctl+0x84>
1000dec8:	00a00034 	movhi	r2,32768
1000decc:	10bfff84 	addi	r2,r2,-2
1000ded0:	e0fffd17 	ldw	r3,-12(fp)
1000ded4:	18800115 	stw	r2,4(r3)
      rc = 0;
1000ded8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1000dedc:	00001106 	br	1000df24 <altera_avalon_jtag_uart_ioctl+0xd8>
1000dee0:	00001006 	br	1000df24 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1000dee4:	e0bffd17 	ldw	r2,-12(fp)
1000dee8:	10c00117 	ldw	r3,4(r2)
1000deec:	00a00034 	movhi	r2,32768
1000def0:	10bfffc4 	addi	r2,r2,-1
1000def4:	18800a26 	beq	r3,r2,1000df20 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1000def8:	e0bffd17 	ldw	r2,-12(fp)
1000defc:	10c00917 	ldw	r3,36(r2)
1000df00:	e0bffd17 	ldw	r2,-12(fp)
1000df04:	10800117 	ldw	r2,4(r2)
1000df08:	1885803a 	cmpltu	r2,r3,r2
1000df0c:	10c03fcc 	andi	r3,r2,255
1000df10:	e0bfff17 	ldw	r2,-4(fp)
1000df14:	10c00015 	stw	r3,0(r2)
      rc = 0;
1000df18:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1000df1c:	00000006 	br	1000df20 <altera_avalon_jtag_uart_ioctl+0xd4>
1000df20:	0001883a 	nop

  default:
    break;
  }

  return rc;
1000df24:	e0bffb17 	ldw	r2,-20(fp)
}
1000df28:	e037883a 	mov	sp,fp
1000df2c:	df000017 	ldw	fp,0(sp)
1000df30:	dec00104 	addi	sp,sp,4
1000df34:	f800283a 	ret

1000df38 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1000df38:	defff304 	addi	sp,sp,-52
1000df3c:	dfc00c15 	stw	ra,48(sp)
1000df40:	df000b15 	stw	fp,44(sp)
1000df44:	df000b04 	addi	fp,sp,44
1000df48:	e13ffc15 	stw	r4,-16(fp)
1000df4c:	e17ffd15 	stw	r5,-12(fp)
1000df50:	e1bffe15 	stw	r6,-8(fp)
1000df54:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1000df58:	e0bffd17 	ldw	r2,-12(fp)
1000df5c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1000df60:	00004906 	br	1000e088 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1000df64:	e0bffc17 	ldw	r2,-16(fp)
1000df68:	10800a17 	ldw	r2,40(r2)
1000df6c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1000df70:	e0bffc17 	ldw	r2,-16(fp)
1000df74:	10800b17 	ldw	r2,44(r2)
1000df78:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1000df7c:	e0fff717 	ldw	r3,-36(fp)
1000df80:	e0bff817 	ldw	r2,-32(fp)
1000df84:	18800536 	bltu	r3,r2,1000df9c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1000df88:	e0fff717 	ldw	r3,-36(fp)
1000df8c:	e0bff817 	ldw	r2,-32(fp)
1000df90:	1885c83a 	sub	r2,r3,r2
1000df94:	e0bff615 	stw	r2,-40(fp)
1000df98:	00000406 	br	1000dfac <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1000df9c:	00c20004 	movi	r3,2048
1000dfa0:	e0bff817 	ldw	r2,-32(fp)
1000dfa4:	1885c83a 	sub	r2,r3,r2
1000dfa8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1000dfac:	e0bff617 	ldw	r2,-40(fp)
1000dfb0:	1000011e 	bne	r2,zero,1000dfb8 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
1000dfb4:	00001d06 	br	1000e02c <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
1000dfb8:	e0fffe17 	ldw	r3,-8(fp)
1000dfbc:	e0bff617 	ldw	r2,-40(fp)
1000dfc0:	1880022e 	bgeu	r3,r2,1000dfcc <altera_avalon_jtag_uart_read+0x94>
        n = space;
1000dfc4:	e0bffe17 	ldw	r2,-8(fp)
1000dfc8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1000dfcc:	e0bff817 	ldw	r2,-32(fp)
1000dfd0:	10800e04 	addi	r2,r2,56
1000dfd4:	e0fffc17 	ldw	r3,-16(fp)
1000dfd8:	1885883a 	add	r2,r3,r2
1000dfdc:	e13ff517 	ldw	r4,-44(fp)
1000dfe0:	100b883a 	mov	r5,r2
1000dfe4:	e1bff617 	ldw	r6,-40(fp)
1000dfe8:	00073080 	call	10007308 <memcpy>
      ptr   += n;
1000dfec:	e0fff517 	ldw	r3,-44(fp)
1000dff0:	e0bff617 	ldw	r2,-40(fp)
1000dff4:	1885883a 	add	r2,r3,r2
1000dff8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1000dffc:	e0fffe17 	ldw	r3,-8(fp)
1000e000:	e0bff617 	ldw	r2,-40(fp)
1000e004:	1885c83a 	sub	r2,r3,r2
1000e008:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e00c:	e0fff817 	ldw	r3,-32(fp)
1000e010:	e0bff617 	ldw	r2,-40(fp)
1000e014:	1885883a 	add	r2,r3,r2
1000e018:	10c1ffcc 	andi	r3,r2,2047
1000e01c:	e0bffc17 	ldw	r2,-16(fp)
1000e020:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1000e024:	e0bffe17 	ldw	r2,-8(fp)
1000e028:	00bfce16 	blt	zero,r2,1000df64 <__alt_data_end+0xf800df64>

    /* If we read any data then return it */
    if (ptr != buffer)
1000e02c:	e0fff517 	ldw	r3,-44(fp)
1000e030:	e0bffd17 	ldw	r2,-12(fp)
1000e034:	18800126 	beq	r3,r2,1000e03c <altera_avalon_jtag_uart_read+0x104>
      break;
1000e038:	00001506 	br	1000e090 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1000e03c:	e0bfff17 	ldw	r2,-4(fp)
1000e040:	1090000c 	andi	r2,r2,16384
1000e044:	10000126 	beq	r2,zero,1000e04c <altera_avalon_jtag_uart_read+0x114>
      break;
1000e048:	00001106 	br	1000e090 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1000e04c:	0001883a 	nop
1000e050:	e0bffc17 	ldw	r2,-16(fp)
1000e054:	10c00a17 	ldw	r3,40(r2)
1000e058:	e0bff717 	ldw	r2,-36(fp)
1000e05c:	1880051e 	bne	r3,r2,1000e074 <altera_avalon_jtag_uart_read+0x13c>
1000e060:	e0bffc17 	ldw	r2,-16(fp)
1000e064:	10c00917 	ldw	r3,36(r2)
1000e068:	e0bffc17 	ldw	r2,-16(fp)
1000e06c:	10800117 	ldw	r2,4(r2)
1000e070:	18bff736 	bltu	r3,r2,1000e050 <__alt_data_end+0xf800e050>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1000e074:	e0bffc17 	ldw	r2,-16(fp)
1000e078:	10c00a17 	ldw	r3,40(r2)
1000e07c:	e0bff717 	ldw	r2,-36(fp)
1000e080:	1880011e 	bne	r3,r2,1000e088 <altera_avalon_jtag_uart_read+0x150>
      break;
1000e084:	00000206 	br	1000e090 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1000e088:	e0bffe17 	ldw	r2,-8(fp)
1000e08c:	00bfb516 	blt	zero,r2,1000df64 <__alt_data_end+0xf800df64>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1000e090:	e0fff517 	ldw	r3,-44(fp)
1000e094:	e0bffd17 	ldw	r2,-12(fp)
1000e098:	18801826 	beq	r3,r2,1000e0fc <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e09c:	0005303a 	rdctl	r2,status
1000e0a0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e0a4:	e0fffa17 	ldw	r3,-24(fp)
1000e0a8:	00bfff84 	movi	r2,-2
1000e0ac:	1884703a 	and	r2,r3,r2
1000e0b0:	1001703a 	wrctl	status,r2
  
  return context;
1000e0b4:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1000e0b8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000e0bc:	e0bffc17 	ldw	r2,-16(fp)
1000e0c0:	10800817 	ldw	r2,32(r2)
1000e0c4:	10c00054 	ori	r3,r2,1
1000e0c8:	e0bffc17 	ldw	r2,-16(fp)
1000e0cc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000e0d0:	e0bffc17 	ldw	r2,-16(fp)
1000e0d4:	10800017 	ldw	r2,0(r2)
1000e0d8:	10800104 	addi	r2,r2,4
1000e0dc:	1007883a 	mov	r3,r2
1000e0e0:	e0bffc17 	ldw	r2,-16(fp)
1000e0e4:	10800817 	ldw	r2,32(r2)
1000e0e8:	18800035 	stwio	r2,0(r3)
1000e0ec:	e0bff917 	ldw	r2,-28(fp)
1000e0f0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e0f4:	e0bffb17 	ldw	r2,-20(fp)
1000e0f8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1000e0fc:	e0fff517 	ldw	r3,-44(fp)
1000e100:	e0bffd17 	ldw	r2,-12(fp)
1000e104:	18800426 	beq	r3,r2,1000e118 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
1000e108:	e0fff517 	ldw	r3,-44(fp)
1000e10c:	e0bffd17 	ldw	r2,-12(fp)
1000e110:	1885c83a 	sub	r2,r3,r2
1000e114:	00000606 	br	1000e130 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
1000e118:	e0bfff17 	ldw	r2,-4(fp)
1000e11c:	1090000c 	andi	r2,r2,16384
1000e120:	10000226 	beq	r2,zero,1000e12c <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
1000e124:	00bffd44 	movi	r2,-11
1000e128:	00000106 	br	1000e130 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
1000e12c:	00bffec4 	movi	r2,-5
}
1000e130:	e037883a 	mov	sp,fp
1000e134:	dfc00117 	ldw	ra,4(sp)
1000e138:	df000017 	ldw	fp,0(sp)
1000e13c:	dec00204 	addi	sp,sp,8
1000e140:	f800283a 	ret

1000e144 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1000e144:	defff304 	addi	sp,sp,-52
1000e148:	dfc00c15 	stw	ra,48(sp)
1000e14c:	df000b15 	stw	fp,44(sp)
1000e150:	df000b04 	addi	fp,sp,44
1000e154:	e13ffc15 	stw	r4,-16(fp)
1000e158:	e17ffd15 	stw	r5,-12(fp)
1000e15c:	e1bffe15 	stw	r6,-8(fp)
1000e160:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1000e164:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1000e168:	e0bffd17 	ldw	r2,-12(fp)
1000e16c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1000e170:	00003806 	br	1000e254 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1000e174:	e0bffc17 	ldw	r2,-16(fp)
1000e178:	10800c17 	ldw	r2,48(r2)
1000e17c:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
1000e180:	e0bffc17 	ldw	r2,-16(fp)
1000e184:	10800d17 	ldw	r2,52(r2)
1000e188:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1000e18c:	e0fff817 	ldw	r3,-32(fp)
1000e190:	e0bff517 	ldw	r2,-44(fp)
1000e194:	1880062e 	bgeu	r3,r2,1000e1b0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1000e198:	e0fff517 	ldw	r3,-44(fp)
1000e19c:	e0bff817 	ldw	r2,-32(fp)
1000e1a0:	1885c83a 	sub	r2,r3,r2
1000e1a4:	10bfffc4 	addi	r2,r2,-1
1000e1a8:	e0bff615 	stw	r2,-40(fp)
1000e1ac:	00000b06 	br	1000e1dc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1000e1b0:	e0bff517 	ldw	r2,-44(fp)
1000e1b4:	10000526 	beq	r2,zero,1000e1cc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1000e1b8:	00c20004 	movi	r3,2048
1000e1bc:	e0bff817 	ldw	r2,-32(fp)
1000e1c0:	1885c83a 	sub	r2,r3,r2
1000e1c4:	e0bff615 	stw	r2,-40(fp)
1000e1c8:	00000406 	br	1000e1dc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1000e1cc:	00c1ffc4 	movi	r3,2047
1000e1d0:	e0bff817 	ldw	r2,-32(fp)
1000e1d4:	1885c83a 	sub	r2,r3,r2
1000e1d8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1000e1dc:	e0bff617 	ldw	r2,-40(fp)
1000e1e0:	1000011e 	bne	r2,zero,1000e1e8 <altera_avalon_jtag_uart_write+0xa4>
        break;
1000e1e4:	00001d06 	br	1000e25c <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
1000e1e8:	e0fffe17 	ldw	r3,-8(fp)
1000e1ec:	e0bff617 	ldw	r2,-40(fp)
1000e1f0:	1880022e 	bgeu	r3,r2,1000e1fc <altera_avalon_jtag_uart_write+0xb8>
        n = count;
1000e1f4:	e0bffe17 	ldw	r2,-8(fp)
1000e1f8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1000e1fc:	e0bff817 	ldw	r2,-32(fp)
1000e200:	10820e04 	addi	r2,r2,2104
1000e204:	e0fffc17 	ldw	r3,-16(fp)
1000e208:	1885883a 	add	r2,r3,r2
1000e20c:	1009883a 	mov	r4,r2
1000e210:	e17ffd17 	ldw	r5,-12(fp)
1000e214:	e1bff617 	ldw	r6,-40(fp)
1000e218:	00073080 	call	10007308 <memcpy>
      ptr   += n;
1000e21c:	e0fffd17 	ldw	r3,-12(fp)
1000e220:	e0bff617 	ldw	r2,-40(fp)
1000e224:	1885883a 	add	r2,r3,r2
1000e228:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1000e22c:	e0fffe17 	ldw	r3,-8(fp)
1000e230:	e0bff617 	ldw	r2,-40(fp)
1000e234:	1885c83a 	sub	r2,r3,r2
1000e238:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e23c:	e0fff817 	ldw	r3,-32(fp)
1000e240:	e0bff617 	ldw	r2,-40(fp)
1000e244:	1885883a 	add	r2,r3,r2
1000e248:	10c1ffcc 	andi	r3,r2,2047
1000e24c:	e0bffc17 	ldw	r2,-16(fp)
1000e250:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1000e254:	e0bffe17 	ldw	r2,-8(fp)
1000e258:	00bfc616 	blt	zero,r2,1000e174 <__alt_data_end+0xf800e174>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e25c:	0005303a 	rdctl	r2,status
1000e260:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e264:	e0fffa17 	ldw	r3,-24(fp)
1000e268:	00bfff84 	movi	r2,-2
1000e26c:	1884703a 	and	r2,r3,r2
1000e270:	1001703a 	wrctl	status,r2
  
  return context;
1000e274:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1000e278:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1000e27c:	e0bffc17 	ldw	r2,-16(fp)
1000e280:	10800817 	ldw	r2,32(r2)
1000e284:	10c00094 	ori	r3,r2,2
1000e288:	e0bffc17 	ldw	r2,-16(fp)
1000e28c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000e290:	e0bffc17 	ldw	r2,-16(fp)
1000e294:	10800017 	ldw	r2,0(r2)
1000e298:	10800104 	addi	r2,r2,4
1000e29c:	1007883a 	mov	r3,r2
1000e2a0:	e0bffc17 	ldw	r2,-16(fp)
1000e2a4:	10800817 	ldw	r2,32(r2)
1000e2a8:	18800035 	stwio	r2,0(r3)
1000e2ac:	e0bff917 	ldw	r2,-28(fp)
1000e2b0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e2b4:	e0bffb17 	ldw	r2,-20(fp)
1000e2b8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1000e2bc:	e0bffe17 	ldw	r2,-8(fp)
1000e2c0:	0080120e 	bge	zero,r2,1000e30c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
1000e2c4:	e0bfff17 	ldw	r2,-4(fp)
1000e2c8:	1090000c 	andi	r2,r2,16384
1000e2cc:	10000126 	beq	r2,zero,1000e2d4 <altera_avalon_jtag_uart_write+0x190>
        break;
1000e2d0:	00001006 	br	1000e314 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1000e2d4:	0001883a 	nop
1000e2d8:	e0bffc17 	ldw	r2,-16(fp)
1000e2dc:	10c00d17 	ldw	r3,52(r2)
1000e2e0:	e0bff517 	ldw	r2,-44(fp)
1000e2e4:	1880051e 	bne	r3,r2,1000e2fc <altera_avalon_jtag_uart_write+0x1b8>
1000e2e8:	e0bffc17 	ldw	r2,-16(fp)
1000e2ec:	10c00917 	ldw	r3,36(r2)
1000e2f0:	e0bffc17 	ldw	r2,-16(fp)
1000e2f4:	10800117 	ldw	r2,4(r2)
1000e2f8:	18bff736 	bltu	r3,r2,1000e2d8 <__alt_data_end+0xf800e2d8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1000e2fc:	e0bffc17 	ldw	r2,-16(fp)
1000e300:	10800917 	ldw	r2,36(r2)
1000e304:	10000126 	beq	r2,zero,1000e30c <altera_avalon_jtag_uart_write+0x1c8>
         break;
1000e308:	00000206 	br	1000e314 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
1000e30c:	e0bffe17 	ldw	r2,-8(fp)
1000e310:	00bf9716 	blt	zero,r2,1000e170 <__alt_data_end+0xf800e170>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1000e314:	e0fffd17 	ldw	r3,-12(fp)
1000e318:	e0bff717 	ldw	r2,-36(fp)
1000e31c:	18800426 	beq	r3,r2,1000e330 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
1000e320:	e0fffd17 	ldw	r3,-12(fp)
1000e324:	e0bff717 	ldw	r2,-36(fp)
1000e328:	1885c83a 	sub	r2,r3,r2
1000e32c:	00000606 	br	1000e348 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
1000e330:	e0bfff17 	ldw	r2,-4(fp)
1000e334:	1090000c 	andi	r2,r2,16384
1000e338:	10000226 	beq	r2,zero,1000e344 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
1000e33c:	00bffd44 	movi	r2,-11
1000e340:	00000106 	br	1000e348 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1000e344:	00bffec4 	movi	r2,-5
}
1000e348:	e037883a 	mov	sp,fp
1000e34c:	dfc00117 	ldw	ra,4(sp)
1000e350:	df000017 	ldw	fp,0(sp)
1000e354:	dec00204 	addi	sp,sp,8
1000e358:	f800283a 	ret

1000e35c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1000e35c:	defff504 	addi	sp,sp,-44
1000e360:	df000a15 	stw	fp,40(sp)
1000e364:	df000a04 	addi	fp,sp,40
1000e368:	e13ffc15 	stw	r4,-16(fp)
1000e36c:	e17ffd15 	stw	r5,-12(fp)
1000e370:	e1bffe15 	stw	r6,-8(fp)
1000e374:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1000e378:	e03ff615 	stw	zero,-40(fp)
1000e37c:	00840074 	movhi	r2,4097
1000e380:	108bde04 	addi	r2,r2,12152
1000e384:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
1000e388:	10003f26 	beq	r2,zero,1000e488 <alt_alarm_start+0x12c>
  {
    if (alarm)
1000e38c:	e0bffc17 	ldw	r2,-16(fp)
1000e390:	10003b26 	beq	r2,zero,1000e480 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
1000e394:	e0bffc17 	ldw	r2,-16(fp)
1000e398:	e0fffe17 	ldw	r3,-8(fp)
1000e39c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1000e3a0:	e0bffc17 	ldw	r2,-16(fp)
1000e3a4:	e0ffff17 	ldw	r3,-4(fp)
1000e3a8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e3ac:	0005303a 	rdctl	r2,status
1000e3b0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e3b4:	e0fff817 	ldw	r3,-32(fp)
1000e3b8:	00bfff84 	movi	r2,-2
1000e3bc:	1884703a 	and	r2,r3,r2
1000e3c0:	1001703a 	wrctl	status,r2
  
  return context;
1000e3c4:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
1000e3c8:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1000e3cc:	00840074 	movhi	r2,4097
1000e3d0:	108bdf04 	addi	r2,r2,12156
1000e3d4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
1000e3d8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1000e3dc:	e0fffd17 	ldw	r3,-12(fp)
1000e3e0:	e0bff617 	ldw	r2,-40(fp)
1000e3e4:	1885883a 	add	r2,r3,r2
1000e3e8:	10c00044 	addi	r3,r2,1
1000e3ec:	e0bffc17 	ldw	r2,-16(fp)
1000e3f0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1000e3f4:	e0bffc17 	ldw	r2,-16(fp)
1000e3f8:	10c00217 	ldw	r3,8(r2)
1000e3fc:	e0bff617 	ldw	r2,-40(fp)
1000e400:	1880042e 	bgeu	r3,r2,1000e414 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
1000e404:	e0bffc17 	ldw	r2,-16(fp)
1000e408:	00c00044 	movi	r3,1
1000e40c:	10c00405 	stb	r3,16(r2)
1000e410:	00000206 	br	1000e41c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
1000e414:	e0bffc17 	ldw	r2,-16(fp)
1000e418:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1000e41c:	e0fffc17 	ldw	r3,-16(fp)
1000e420:	00840074 	movhi	r2,4097
1000e424:	10851604 	addi	r2,r2,5208
1000e428:	e0bff915 	stw	r2,-28(fp)
1000e42c:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1000e430:	e0bffa17 	ldw	r2,-24(fp)
1000e434:	e0fff917 	ldw	r3,-28(fp)
1000e438:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1000e43c:	e0bff917 	ldw	r2,-28(fp)
1000e440:	10c00017 	ldw	r3,0(r2)
1000e444:	e0bffa17 	ldw	r2,-24(fp)
1000e448:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1000e44c:	e0bff917 	ldw	r2,-28(fp)
1000e450:	10800017 	ldw	r2,0(r2)
1000e454:	e0fffa17 	ldw	r3,-24(fp)
1000e458:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1000e45c:	e0bff917 	ldw	r2,-28(fp)
1000e460:	e0fffa17 	ldw	r3,-24(fp)
1000e464:	10c00015 	stw	r3,0(r2)
1000e468:	e0bff717 	ldw	r2,-36(fp)
1000e46c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e470:	e0bffb17 	ldw	r2,-20(fp)
1000e474:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1000e478:	0005883a 	mov	r2,zero
1000e47c:	00000306 	br	1000e48c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
1000e480:	00bffa84 	movi	r2,-22
1000e484:	00000106 	br	1000e48c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
1000e488:	00bfde84 	movi	r2,-134
  }
}
1000e48c:	e037883a 	mov	sp,fp
1000e490:	df000017 	ldw	fp,0(sp)
1000e494:	dec00104 	addi	sp,sp,4
1000e498:	f800283a 	ret

1000e49c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1000e49c:	deffff04 	addi	sp,sp,-4
1000e4a0:	df000015 	stw	fp,0(sp)
1000e4a4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1000e4a8:	e037883a 	mov	sp,fp
1000e4ac:	df000017 	ldw	fp,0(sp)
1000e4b0:	dec00104 	addi	sp,sp,4
1000e4b4:	f800283a 	ret

1000e4b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000e4b8:	defffe04 	addi	sp,sp,-8
1000e4bc:	dfc00115 	stw	ra,4(sp)
1000e4c0:	df000015 	stw	fp,0(sp)
1000e4c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000e4c8:	00840074 	movhi	r2,4097
1000e4cc:	10851304 	addi	r2,r2,5196
1000e4d0:	10800017 	ldw	r2,0(r2)
1000e4d4:	10000526 	beq	r2,zero,1000e4ec <alt_get_errno+0x34>
1000e4d8:	00840074 	movhi	r2,4097
1000e4dc:	10851304 	addi	r2,r2,5196
1000e4e0:	10800017 	ldw	r2,0(r2)
1000e4e4:	103ee83a 	callr	r2
1000e4e8:	00000206 	br	1000e4f4 <alt_get_errno+0x3c>
1000e4ec:	00840074 	movhi	r2,4097
1000e4f0:	108bd904 	addi	r2,r2,12132
}
1000e4f4:	e037883a 	mov	sp,fp
1000e4f8:	dfc00117 	ldw	ra,4(sp)
1000e4fc:	df000017 	ldw	fp,0(sp)
1000e500:	dec00204 	addi	sp,sp,8
1000e504:	f800283a 	ret

1000e508 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1000e508:	defffa04 	addi	sp,sp,-24
1000e50c:	dfc00515 	stw	ra,20(sp)
1000e510:	df000415 	stw	fp,16(sp)
1000e514:	df000404 	addi	fp,sp,16
1000e518:	e13ffe15 	stw	r4,-8(fp)
1000e51c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1000e520:	e0bffe17 	ldw	r2,-8(fp)
1000e524:	10000326 	beq	r2,zero,1000e534 <alt_dev_llist_insert+0x2c>
1000e528:	e0bffe17 	ldw	r2,-8(fp)
1000e52c:	10800217 	ldw	r2,8(r2)
1000e530:	1000061e 	bne	r2,zero,1000e54c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1000e534:	000e4b80 	call	1000e4b8 <alt_get_errno>
1000e538:	1007883a 	mov	r3,r2
1000e53c:	00800584 	movi	r2,22
1000e540:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1000e544:	00bffa84 	movi	r2,-22
1000e548:	00001306 	br	1000e598 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1000e54c:	e0bffe17 	ldw	r2,-8(fp)
1000e550:	e0ffff17 	ldw	r3,-4(fp)
1000e554:	e0fffc15 	stw	r3,-16(fp)
1000e558:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1000e55c:	e0bffd17 	ldw	r2,-12(fp)
1000e560:	e0fffc17 	ldw	r3,-16(fp)
1000e564:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1000e568:	e0bffc17 	ldw	r2,-16(fp)
1000e56c:	10c00017 	ldw	r3,0(r2)
1000e570:	e0bffd17 	ldw	r2,-12(fp)
1000e574:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1000e578:	e0bffc17 	ldw	r2,-16(fp)
1000e57c:	10800017 	ldw	r2,0(r2)
1000e580:	e0fffd17 	ldw	r3,-12(fp)
1000e584:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1000e588:	e0bffc17 	ldw	r2,-16(fp)
1000e58c:	e0fffd17 	ldw	r3,-12(fp)
1000e590:	10c00015 	stw	r3,0(r2)

  return 0;  
1000e594:	0005883a 	mov	r2,zero
}
1000e598:	e037883a 	mov	sp,fp
1000e59c:	dfc00117 	ldw	ra,4(sp)
1000e5a0:	df000017 	ldw	fp,0(sp)
1000e5a4:	dec00204 	addi	sp,sp,8
1000e5a8:	f800283a 	ret

1000e5ac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1000e5ac:	defffd04 	addi	sp,sp,-12
1000e5b0:	dfc00215 	stw	ra,8(sp)
1000e5b4:	df000115 	stw	fp,4(sp)
1000e5b8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000e5bc:	00840074 	movhi	r2,4097
1000e5c0:	10bd6f04 	addi	r2,r2,-2628
1000e5c4:	e0bfff15 	stw	r2,-4(fp)
1000e5c8:	00000606 	br	1000e5e4 <_do_ctors+0x38>
        (*ctor) (); 
1000e5cc:	e0bfff17 	ldw	r2,-4(fp)
1000e5d0:	10800017 	ldw	r2,0(r2)
1000e5d4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000e5d8:	e0bfff17 	ldw	r2,-4(fp)
1000e5dc:	10bfff04 	addi	r2,r2,-4
1000e5e0:	e0bfff15 	stw	r2,-4(fp)
1000e5e4:	e0ffff17 	ldw	r3,-4(fp)
1000e5e8:	00840074 	movhi	r2,4097
1000e5ec:	10bd7004 	addi	r2,r2,-2624
1000e5f0:	18bff62e 	bgeu	r3,r2,1000e5cc <__alt_data_end+0xf800e5cc>
        (*ctor) (); 
}
1000e5f4:	e037883a 	mov	sp,fp
1000e5f8:	dfc00117 	ldw	ra,4(sp)
1000e5fc:	df000017 	ldw	fp,0(sp)
1000e600:	dec00204 	addi	sp,sp,8
1000e604:	f800283a 	ret

1000e608 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1000e608:	defffd04 	addi	sp,sp,-12
1000e60c:	dfc00215 	stw	ra,8(sp)
1000e610:	df000115 	stw	fp,4(sp)
1000e614:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000e618:	00840074 	movhi	r2,4097
1000e61c:	10bd6f04 	addi	r2,r2,-2628
1000e620:	e0bfff15 	stw	r2,-4(fp)
1000e624:	00000606 	br	1000e640 <_do_dtors+0x38>
        (*dtor) (); 
1000e628:	e0bfff17 	ldw	r2,-4(fp)
1000e62c:	10800017 	ldw	r2,0(r2)
1000e630:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000e634:	e0bfff17 	ldw	r2,-4(fp)
1000e638:	10bfff04 	addi	r2,r2,-4
1000e63c:	e0bfff15 	stw	r2,-4(fp)
1000e640:	e0ffff17 	ldw	r3,-4(fp)
1000e644:	00840074 	movhi	r2,4097
1000e648:	10bd7004 	addi	r2,r2,-2624
1000e64c:	18bff62e 	bgeu	r3,r2,1000e628 <__alt_data_end+0xf800e628>
        (*dtor) (); 
}
1000e650:	e037883a 	mov	sp,fp
1000e654:	dfc00117 	ldw	ra,4(sp)
1000e658:	df000017 	ldw	fp,0(sp)
1000e65c:	dec00204 	addi	sp,sp,8
1000e660:	f800283a 	ret

1000e664 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1000e664:	deffff04 	addi	sp,sp,-4
1000e668:	df000015 	stw	fp,0(sp)
1000e66c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1000e670:	e037883a 	mov	sp,fp
1000e674:	df000017 	ldw	fp,0(sp)
1000e678:	dec00104 	addi	sp,sp,4
1000e67c:	f800283a 	ret

1000e680 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1000e680:	defff904 	addi	sp,sp,-28
1000e684:	dfc00615 	stw	ra,24(sp)
1000e688:	df000515 	stw	fp,20(sp)
1000e68c:	df000504 	addi	fp,sp,20
1000e690:	e13ffc15 	stw	r4,-16(fp)
1000e694:	e17ffd15 	stw	r5,-12(fp)
1000e698:	e1bffe15 	stw	r6,-8(fp)
1000e69c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1000e6a0:	e0800217 	ldw	r2,8(fp)
1000e6a4:	d8800015 	stw	r2,0(sp)
1000e6a8:	e13ffc17 	ldw	r4,-16(fp)
1000e6ac:	e17ffd17 	ldw	r5,-12(fp)
1000e6b0:	e1bffe17 	ldw	r6,-8(fp)
1000e6b4:	e1ffff17 	ldw	r7,-4(fp)
1000e6b8:	000e8600 	call	1000e860 <alt_iic_isr_register>
}  
1000e6bc:	e037883a 	mov	sp,fp
1000e6c0:	dfc00117 	ldw	ra,4(sp)
1000e6c4:	df000017 	ldw	fp,0(sp)
1000e6c8:	dec00204 	addi	sp,sp,8
1000e6cc:	f800283a 	ret

1000e6d0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1000e6d0:	defff904 	addi	sp,sp,-28
1000e6d4:	df000615 	stw	fp,24(sp)
1000e6d8:	df000604 	addi	fp,sp,24
1000e6dc:	e13ffe15 	stw	r4,-8(fp)
1000e6e0:	e17fff15 	stw	r5,-4(fp)
1000e6e4:	e0bfff17 	ldw	r2,-4(fp)
1000e6e8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e6ec:	0005303a 	rdctl	r2,status
1000e6f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e6f4:	e0fffb17 	ldw	r3,-20(fp)
1000e6f8:	00bfff84 	movi	r2,-2
1000e6fc:	1884703a 	and	r2,r3,r2
1000e700:	1001703a 	wrctl	status,r2
  
  return context;
1000e704:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1000e708:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1000e70c:	e0bffa17 	ldw	r2,-24(fp)
1000e710:	00c00044 	movi	r3,1
1000e714:	1884983a 	sll	r2,r3,r2
1000e718:	1007883a 	mov	r3,r2
1000e71c:	00840074 	movhi	r2,4097
1000e720:	108bdd04 	addi	r2,r2,12148
1000e724:	10800017 	ldw	r2,0(r2)
1000e728:	1886b03a 	or	r3,r3,r2
1000e72c:	00840074 	movhi	r2,4097
1000e730:	108bdd04 	addi	r2,r2,12148
1000e734:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1000e738:	00840074 	movhi	r2,4097
1000e73c:	108bdd04 	addi	r2,r2,12148
1000e740:	10800017 	ldw	r2,0(r2)
1000e744:	100170fa 	wrctl	ienable,r2
1000e748:	e0bffc17 	ldw	r2,-16(fp)
1000e74c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e750:	e0bffd17 	ldw	r2,-12(fp)
1000e754:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1000e758:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1000e75c:	0001883a 	nop
}
1000e760:	e037883a 	mov	sp,fp
1000e764:	df000017 	ldw	fp,0(sp)
1000e768:	dec00104 	addi	sp,sp,4
1000e76c:	f800283a 	ret

1000e770 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1000e770:	defff904 	addi	sp,sp,-28
1000e774:	df000615 	stw	fp,24(sp)
1000e778:	df000604 	addi	fp,sp,24
1000e77c:	e13ffe15 	stw	r4,-8(fp)
1000e780:	e17fff15 	stw	r5,-4(fp)
1000e784:	e0bfff17 	ldw	r2,-4(fp)
1000e788:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e78c:	0005303a 	rdctl	r2,status
1000e790:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e794:	e0fffb17 	ldw	r3,-20(fp)
1000e798:	00bfff84 	movi	r2,-2
1000e79c:	1884703a 	and	r2,r3,r2
1000e7a0:	1001703a 	wrctl	status,r2
  
  return context;
1000e7a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1000e7a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1000e7ac:	e0bffa17 	ldw	r2,-24(fp)
1000e7b0:	00c00044 	movi	r3,1
1000e7b4:	1884983a 	sll	r2,r3,r2
1000e7b8:	0084303a 	nor	r2,zero,r2
1000e7bc:	1007883a 	mov	r3,r2
1000e7c0:	00840074 	movhi	r2,4097
1000e7c4:	108bdd04 	addi	r2,r2,12148
1000e7c8:	10800017 	ldw	r2,0(r2)
1000e7cc:	1886703a 	and	r3,r3,r2
1000e7d0:	00840074 	movhi	r2,4097
1000e7d4:	108bdd04 	addi	r2,r2,12148
1000e7d8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1000e7dc:	00840074 	movhi	r2,4097
1000e7e0:	108bdd04 	addi	r2,r2,12148
1000e7e4:	10800017 	ldw	r2,0(r2)
1000e7e8:	100170fa 	wrctl	ienable,r2
1000e7ec:	e0bffc17 	ldw	r2,-16(fp)
1000e7f0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e7f4:	e0bffd17 	ldw	r2,-12(fp)
1000e7f8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1000e7fc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1000e800:	0001883a 	nop
}
1000e804:	e037883a 	mov	sp,fp
1000e808:	df000017 	ldw	fp,0(sp)
1000e80c:	dec00104 	addi	sp,sp,4
1000e810:	f800283a 	ret

1000e814 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1000e814:	defffc04 	addi	sp,sp,-16
1000e818:	df000315 	stw	fp,12(sp)
1000e81c:	df000304 	addi	fp,sp,12
1000e820:	e13ffe15 	stw	r4,-8(fp)
1000e824:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1000e828:	000530fa 	rdctl	r2,ienable
1000e82c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1000e830:	e0bfff17 	ldw	r2,-4(fp)
1000e834:	00c00044 	movi	r3,1
1000e838:	1884983a 	sll	r2,r3,r2
1000e83c:	1007883a 	mov	r3,r2
1000e840:	e0bffd17 	ldw	r2,-12(fp)
1000e844:	1884703a 	and	r2,r3,r2
1000e848:	1004c03a 	cmpne	r2,r2,zero
1000e84c:	10803fcc 	andi	r2,r2,255
}
1000e850:	e037883a 	mov	sp,fp
1000e854:	df000017 	ldw	fp,0(sp)
1000e858:	dec00104 	addi	sp,sp,4
1000e85c:	f800283a 	ret

1000e860 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1000e860:	defff504 	addi	sp,sp,-44
1000e864:	dfc00a15 	stw	ra,40(sp)
1000e868:	df000915 	stw	fp,36(sp)
1000e86c:	df000904 	addi	fp,sp,36
1000e870:	e13ffc15 	stw	r4,-16(fp)
1000e874:	e17ffd15 	stw	r5,-12(fp)
1000e878:	e1bffe15 	stw	r6,-8(fp)
1000e87c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1000e880:	00bffa84 	movi	r2,-22
1000e884:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1000e888:	e0bffd17 	ldw	r2,-12(fp)
1000e88c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1000e890:	e0bff817 	ldw	r2,-32(fp)
1000e894:	10800808 	cmpgei	r2,r2,32
1000e898:	1000271e 	bne	r2,zero,1000e938 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e89c:	0005303a 	rdctl	r2,status
1000e8a0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e8a4:	e0fffa17 	ldw	r3,-24(fp)
1000e8a8:	00bfff84 	movi	r2,-2
1000e8ac:	1884703a 	and	r2,r3,r2
1000e8b0:	1001703a 	wrctl	status,r2
  
  return context;
1000e8b4:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1000e8b8:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
1000e8bc:	00840074 	movhi	r2,4097
1000e8c0:	108beb04 	addi	r2,r2,12204
1000e8c4:	e0fff817 	ldw	r3,-32(fp)
1000e8c8:	180690fa 	slli	r3,r3,3
1000e8cc:	10c5883a 	add	r2,r2,r3
1000e8d0:	e0fffe17 	ldw	r3,-8(fp)
1000e8d4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1000e8d8:	00840074 	movhi	r2,4097
1000e8dc:	108beb04 	addi	r2,r2,12204
1000e8e0:	e0fff817 	ldw	r3,-32(fp)
1000e8e4:	180690fa 	slli	r3,r3,3
1000e8e8:	10c5883a 	add	r2,r2,r3
1000e8ec:	10800104 	addi	r2,r2,4
1000e8f0:	e0ffff17 	ldw	r3,-4(fp)
1000e8f4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1000e8f8:	e0bffe17 	ldw	r2,-8(fp)
1000e8fc:	10000526 	beq	r2,zero,1000e914 <alt_iic_isr_register+0xb4>
1000e900:	e0bff817 	ldw	r2,-32(fp)
1000e904:	e13ffc17 	ldw	r4,-16(fp)
1000e908:	100b883a 	mov	r5,r2
1000e90c:	000e6d00 	call	1000e6d0 <alt_ic_irq_enable>
1000e910:	00000406 	br	1000e924 <alt_iic_isr_register+0xc4>
1000e914:	e0bff817 	ldw	r2,-32(fp)
1000e918:	e13ffc17 	ldw	r4,-16(fp)
1000e91c:	100b883a 	mov	r5,r2
1000e920:	000e7700 	call	1000e770 <alt_ic_irq_disable>
1000e924:	e0bff715 	stw	r2,-36(fp)
1000e928:	e0bff917 	ldw	r2,-28(fp)
1000e92c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e930:	e0bffb17 	ldw	r2,-20(fp)
1000e934:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1000e938:	e0bff717 	ldw	r2,-36(fp)
}
1000e93c:	e037883a 	mov	sp,fp
1000e940:	dfc00117 	ldw	ra,4(sp)
1000e944:	df000017 	ldw	fp,0(sp)
1000e948:	dec00204 	addi	sp,sp,8
1000e94c:	f800283a 	ret

1000e950 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1000e950:	defff804 	addi	sp,sp,-32
1000e954:	dfc00715 	stw	ra,28(sp)
1000e958:	df000615 	stw	fp,24(sp)
1000e95c:	dc000515 	stw	r16,20(sp)
1000e960:	df000604 	addi	fp,sp,24
1000e964:	e13ffb15 	stw	r4,-20(fp)
1000e968:	e17ffc15 	stw	r5,-16(fp)
1000e96c:	e1bffd15 	stw	r6,-12(fp)
1000e970:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1000e974:	e13ffc17 	ldw	r4,-16(fp)
1000e978:	e17ffd17 	ldw	r5,-12(fp)
1000e97c:	e1bffe17 	ldw	r6,-8(fp)
1000e980:	000ebec0 	call	1000ebec <open>
1000e984:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1000e988:	e0bffa17 	ldw	r2,-24(fp)
1000e98c:	10002216 	blt	r2,zero,1000ea18 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1000e990:	04040074 	movhi	r16,4097
1000e994:	84009004 	addi	r16,r16,576
1000e998:	e0bffa17 	ldw	r2,-24(fp)
1000e99c:	1009883a 	mov	r4,r2
1000e9a0:	01400304 	movi	r5,12
1000e9a4:	00019c40 	call	100019c4 <__mulsi3>
1000e9a8:	8085883a 	add	r2,r16,r2
1000e9ac:	10c00017 	ldw	r3,0(r2)
1000e9b0:	e0bffb17 	ldw	r2,-20(fp)
1000e9b4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1000e9b8:	04040074 	movhi	r16,4097
1000e9bc:	84009004 	addi	r16,r16,576
1000e9c0:	e0bffa17 	ldw	r2,-24(fp)
1000e9c4:	1009883a 	mov	r4,r2
1000e9c8:	01400304 	movi	r5,12
1000e9cc:	00019c40 	call	100019c4 <__mulsi3>
1000e9d0:	8085883a 	add	r2,r16,r2
1000e9d4:	10800104 	addi	r2,r2,4
1000e9d8:	10c00017 	ldw	r3,0(r2)
1000e9dc:	e0bffb17 	ldw	r2,-20(fp)
1000e9e0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1000e9e4:	04040074 	movhi	r16,4097
1000e9e8:	84009004 	addi	r16,r16,576
1000e9ec:	e0bffa17 	ldw	r2,-24(fp)
1000e9f0:	1009883a 	mov	r4,r2
1000e9f4:	01400304 	movi	r5,12
1000e9f8:	00019c40 	call	100019c4 <__mulsi3>
1000e9fc:	8085883a 	add	r2,r16,r2
1000ea00:	10800204 	addi	r2,r2,8
1000ea04:	10c00017 	ldw	r3,0(r2)
1000ea08:	e0bffb17 	ldw	r2,-20(fp)
1000ea0c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1000ea10:	e13ffa17 	ldw	r4,-24(fp)
1000ea14:	000d5040 	call	1000d504 <alt_release_fd>
  }
} 
1000ea18:	e6ffff04 	addi	sp,fp,-4
1000ea1c:	dfc00217 	ldw	ra,8(sp)
1000ea20:	df000117 	ldw	fp,4(sp)
1000ea24:	dc000017 	ldw	r16,0(sp)
1000ea28:	dec00304 	addi	sp,sp,12
1000ea2c:	f800283a 	ret

1000ea30 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1000ea30:	defffb04 	addi	sp,sp,-20
1000ea34:	dfc00415 	stw	ra,16(sp)
1000ea38:	df000315 	stw	fp,12(sp)
1000ea3c:	df000304 	addi	fp,sp,12
1000ea40:	e13ffd15 	stw	r4,-12(fp)
1000ea44:	e17ffe15 	stw	r5,-8(fp)
1000ea48:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1000ea4c:	01040074 	movhi	r4,4097
1000ea50:	21009304 	addi	r4,r4,588
1000ea54:	e17ffd17 	ldw	r5,-12(fp)
1000ea58:	01800044 	movi	r6,1
1000ea5c:	01c07fc4 	movi	r7,511
1000ea60:	000e9500 	call	1000e950 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1000ea64:	01040074 	movhi	r4,4097
1000ea68:	21009004 	addi	r4,r4,576
1000ea6c:	e17ffe17 	ldw	r5,-8(fp)
1000ea70:	000d883a 	mov	r6,zero
1000ea74:	01c07fc4 	movi	r7,511
1000ea78:	000e9500 	call	1000e950 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1000ea7c:	01040074 	movhi	r4,4097
1000ea80:	21009604 	addi	r4,r4,600
1000ea84:	e17fff17 	ldw	r5,-4(fp)
1000ea88:	01800044 	movi	r6,1
1000ea8c:	01c07fc4 	movi	r7,511
1000ea90:	000e9500 	call	1000e950 <alt_open_fd>
}  
1000ea94:	e037883a 	mov	sp,fp
1000ea98:	dfc00117 	ldw	ra,4(sp)
1000ea9c:	df000017 	ldw	fp,0(sp)
1000eaa0:	dec00204 	addi	sp,sp,8
1000eaa4:	f800283a 	ret

1000eaa8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000eaa8:	defffe04 	addi	sp,sp,-8
1000eaac:	dfc00115 	stw	ra,4(sp)
1000eab0:	df000015 	stw	fp,0(sp)
1000eab4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000eab8:	00840074 	movhi	r2,4097
1000eabc:	10851304 	addi	r2,r2,5196
1000eac0:	10800017 	ldw	r2,0(r2)
1000eac4:	10000526 	beq	r2,zero,1000eadc <alt_get_errno+0x34>
1000eac8:	00840074 	movhi	r2,4097
1000eacc:	10851304 	addi	r2,r2,5196
1000ead0:	10800017 	ldw	r2,0(r2)
1000ead4:	103ee83a 	callr	r2
1000ead8:	00000206 	br	1000eae4 <alt_get_errno+0x3c>
1000eadc:	00840074 	movhi	r2,4097
1000eae0:	108bd904 	addi	r2,r2,12132
}
1000eae4:	e037883a 	mov	sp,fp
1000eae8:	dfc00117 	ldw	ra,4(sp)
1000eaec:	df000017 	ldw	fp,0(sp)
1000eaf0:	dec00204 	addi	sp,sp,8
1000eaf4:	f800283a 	ret

1000eaf8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1000eaf8:	defffb04 	addi	sp,sp,-20
1000eafc:	dfc00415 	stw	ra,16(sp)
1000eb00:	df000315 	stw	fp,12(sp)
1000eb04:	dc000215 	stw	r16,8(sp)
1000eb08:	df000304 	addi	fp,sp,12
1000eb0c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1000eb10:	e0bffe17 	ldw	r2,-8(fp)
1000eb14:	10800217 	ldw	r2,8(r2)
1000eb18:	10d00034 	orhi	r3,r2,16384
1000eb1c:	e0bffe17 	ldw	r2,-8(fp)
1000eb20:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1000eb24:	e03ffd15 	stw	zero,-12(fp)
1000eb28:	00002306 	br	1000ebb8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1000eb2c:	04040074 	movhi	r16,4097
1000eb30:	84009004 	addi	r16,r16,576
1000eb34:	e0bffd17 	ldw	r2,-12(fp)
1000eb38:	1009883a 	mov	r4,r2
1000eb3c:	01400304 	movi	r5,12
1000eb40:	00019c40 	call	100019c4 <__mulsi3>
1000eb44:	8085883a 	add	r2,r16,r2
1000eb48:	10c00017 	ldw	r3,0(r2)
1000eb4c:	e0bffe17 	ldw	r2,-8(fp)
1000eb50:	10800017 	ldw	r2,0(r2)
1000eb54:	1880151e 	bne	r3,r2,1000ebac <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1000eb58:	04040074 	movhi	r16,4097
1000eb5c:	84009004 	addi	r16,r16,576
1000eb60:	e0bffd17 	ldw	r2,-12(fp)
1000eb64:	1009883a 	mov	r4,r2
1000eb68:	01400304 	movi	r5,12
1000eb6c:	00019c40 	call	100019c4 <__mulsi3>
1000eb70:	8085883a 	add	r2,r16,r2
1000eb74:	10800204 	addi	r2,r2,8
1000eb78:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1000eb7c:	10000b0e 	bge	r2,zero,1000ebac <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1000eb80:	e13ffd17 	ldw	r4,-12(fp)
1000eb84:	01400304 	movi	r5,12
1000eb88:	00019c40 	call	100019c4 <__mulsi3>
1000eb8c:	1007883a 	mov	r3,r2
1000eb90:	00840074 	movhi	r2,4097
1000eb94:	10809004 	addi	r2,r2,576
1000eb98:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1000eb9c:	e0bffe17 	ldw	r2,-8(fp)
1000eba0:	18800226 	beq	r3,r2,1000ebac <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1000eba4:	00bffcc4 	movi	r2,-13
1000eba8:	00000a06 	br	1000ebd4 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1000ebac:	e0bffd17 	ldw	r2,-12(fp)
1000ebb0:	10800044 	addi	r2,r2,1
1000ebb4:	e0bffd15 	stw	r2,-12(fp)
1000ebb8:	00840074 	movhi	r2,4097
1000ebbc:	10851204 	addi	r2,r2,5192
1000ebc0:	10800017 	ldw	r2,0(r2)
1000ebc4:	1007883a 	mov	r3,r2
1000ebc8:	e0bffd17 	ldw	r2,-12(fp)
1000ebcc:	18bfd72e 	bgeu	r3,r2,1000eb2c <__alt_data_end+0xf800eb2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1000ebd0:	0005883a 	mov	r2,zero
}
1000ebd4:	e6ffff04 	addi	sp,fp,-4
1000ebd8:	dfc00217 	ldw	ra,8(sp)
1000ebdc:	df000117 	ldw	fp,4(sp)
1000ebe0:	dc000017 	ldw	r16,0(sp)
1000ebe4:	dec00304 	addi	sp,sp,12
1000ebe8:	f800283a 	ret

1000ebec <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1000ebec:	defff604 	addi	sp,sp,-40
1000ebf0:	dfc00915 	stw	ra,36(sp)
1000ebf4:	df000815 	stw	fp,32(sp)
1000ebf8:	df000804 	addi	fp,sp,32
1000ebfc:	e13ffd15 	stw	r4,-12(fp)
1000ec00:	e17ffe15 	stw	r5,-8(fp)
1000ec04:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1000ec08:	00bfffc4 	movi	r2,-1
1000ec0c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1000ec10:	00bffb44 	movi	r2,-19
1000ec14:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1000ec18:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1000ec1c:	e13ffd17 	ldw	r4,-12(fp)
1000ec20:	01440074 	movhi	r5,4097
1000ec24:	29451004 	addi	r5,r5,5184
1000ec28:	000ef080 	call	1000ef08 <alt_find_dev>
1000ec2c:	e0bff815 	stw	r2,-32(fp)
1000ec30:	e0bff817 	ldw	r2,-32(fp)
1000ec34:	1000051e 	bne	r2,zero,1000ec4c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1000ec38:	e13ffd17 	ldw	r4,-12(fp)
1000ec3c:	000ef980 	call	1000ef98 <alt_find_file>
1000ec40:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1000ec44:	00800044 	movi	r2,1
1000ec48:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1000ec4c:	e0bff817 	ldw	r2,-32(fp)
1000ec50:	10002b26 	beq	r2,zero,1000ed00 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
1000ec54:	e13ff817 	ldw	r4,-32(fp)
1000ec58:	000f0ac0 	call	1000f0ac <alt_get_fd>
1000ec5c:	e0bff915 	stw	r2,-28(fp)
1000ec60:	e0bff917 	ldw	r2,-28(fp)
1000ec64:	1000030e 	bge	r2,zero,1000ec74 <open+0x88>
    {
      status = index;
1000ec68:	e0bff917 	ldw	r2,-28(fp)
1000ec6c:	e0bffa15 	stw	r2,-24(fp)
1000ec70:	00002506 	br	1000ed08 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
1000ec74:	e13ff917 	ldw	r4,-28(fp)
1000ec78:	01400304 	movi	r5,12
1000ec7c:	00019c40 	call	100019c4 <__mulsi3>
1000ec80:	1007883a 	mov	r3,r2
1000ec84:	00840074 	movhi	r2,4097
1000ec88:	10809004 	addi	r2,r2,576
1000ec8c:	1885883a 	add	r2,r3,r2
1000ec90:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1000ec94:	e0fffe17 	ldw	r3,-8(fp)
1000ec98:	00900034 	movhi	r2,16384
1000ec9c:	10bfffc4 	addi	r2,r2,-1
1000eca0:	1886703a 	and	r3,r3,r2
1000eca4:	e0bffc17 	ldw	r2,-16(fp)
1000eca8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1000ecac:	e0bffb17 	ldw	r2,-20(fp)
1000ecb0:	1000051e 	bne	r2,zero,1000ecc8 <open+0xdc>
1000ecb4:	e13ffc17 	ldw	r4,-16(fp)
1000ecb8:	000eaf80 	call	1000eaf8 <alt_file_locked>
1000ecbc:	e0bffa15 	stw	r2,-24(fp)
1000ecc0:	e0bffa17 	ldw	r2,-24(fp)
1000ecc4:	10001016 	blt	r2,zero,1000ed08 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1000ecc8:	e0bff817 	ldw	r2,-32(fp)
1000eccc:	10800317 	ldw	r2,12(r2)
1000ecd0:	10000826 	beq	r2,zero,1000ecf4 <open+0x108>
1000ecd4:	e0bff817 	ldw	r2,-32(fp)
1000ecd8:	10800317 	ldw	r2,12(r2)
1000ecdc:	e13ffc17 	ldw	r4,-16(fp)
1000ece0:	e17ffd17 	ldw	r5,-12(fp)
1000ece4:	e1bffe17 	ldw	r6,-8(fp)
1000ece8:	e1ffff17 	ldw	r7,-4(fp)
1000ecec:	103ee83a 	callr	r2
1000ecf0:	00000106 	br	1000ecf8 <open+0x10c>
1000ecf4:	0005883a 	mov	r2,zero
1000ecf8:	e0bffa15 	stw	r2,-24(fp)
1000ecfc:	00000206 	br	1000ed08 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
1000ed00:	00bffb44 	movi	r2,-19
1000ed04:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1000ed08:	e0bffa17 	ldw	r2,-24(fp)
1000ed0c:	1000090e 	bge	r2,zero,1000ed34 <open+0x148>
  {
    alt_release_fd (index);  
1000ed10:	e13ff917 	ldw	r4,-28(fp)
1000ed14:	000d5040 	call	1000d504 <alt_release_fd>
    ALT_ERRNO = -status;
1000ed18:	000eaa80 	call	1000eaa8 <alt_get_errno>
1000ed1c:	1007883a 	mov	r3,r2
1000ed20:	e0bffa17 	ldw	r2,-24(fp)
1000ed24:	0085c83a 	sub	r2,zero,r2
1000ed28:	18800015 	stw	r2,0(r3)
    return -1;
1000ed2c:	00bfffc4 	movi	r2,-1
1000ed30:	00000106 	br	1000ed38 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
1000ed34:	e0bff917 	ldw	r2,-28(fp)
}
1000ed38:	e037883a 	mov	sp,fp
1000ed3c:	dfc00117 	ldw	ra,4(sp)
1000ed40:	df000017 	ldw	fp,0(sp)
1000ed44:	dec00204 	addi	sp,sp,8
1000ed48:	f800283a 	ret

1000ed4c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1000ed4c:	defffa04 	addi	sp,sp,-24
1000ed50:	df000515 	stw	fp,20(sp)
1000ed54:	df000504 	addi	fp,sp,20
1000ed58:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000ed5c:	0005303a 	rdctl	r2,status
1000ed60:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000ed64:	e0fffc17 	ldw	r3,-16(fp)
1000ed68:	00bfff84 	movi	r2,-2
1000ed6c:	1884703a 	and	r2,r3,r2
1000ed70:	1001703a 	wrctl	status,r2
  
  return context;
1000ed74:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1000ed78:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1000ed7c:	e0bfff17 	ldw	r2,-4(fp)
1000ed80:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1000ed84:	e0bffd17 	ldw	r2,-12(fp)
1000ed88:	10800017 	ldw	r2,0(r2)
1000ed8c:	e0fffd17 	ldw	r3,-12(fp)
1000ed90:	18c00117 	ldw	r3,4(r3)
1000ed94:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1000ed98:	e0bffd17 	ldw	r2,-12(fp)
1000ed9c:	10800117 	ldw	r2,4(r2)
1000eda0:	e0fffd17 	ldw	r3,-12(fp)
1000eda4:	18c00017 	ldw	r3,0(r3)
1000eda8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1000edac:	e0bffd17 	ldw	r2,-12(fp)
1000edb0:	e0fffd17 	ldw	r3,-12(fp)
1000edb4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1000edb8:	e0bffd17 	ldw	r2,-12(fp)
1000edbc:	e0fffd17 	ldw	r3,-12(fp)
1000edc0:	10c00015 	stw	r3,0(r2)
1000edc4:	e0bffb17 	ldw	r2,-20(fp)
1000edc8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000edcc:	e0bffe17 	ldw	r2,-8(fp)
1000edd0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1000edd4:	e037883a 	mov	sp,fp
1000edd8:	df000017 	ldw	fp,0(sp)
1000eddc:	dec00104 	addi	sp,sp,4
1000ede0:	f800283a 	ret

1000ede4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1000ede4:	defffb04 	addi	sp,sp,-20
1000ede8:	dfc00415 	stw	ra,16(sp)
1000edec:	df000315 	stw	fp,12(sp)
1000edf0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1000edf4:	d0a00e17 	ldw	r2,-32712(gp)
1000edf8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1000edfc:	d0a6d717 	ldw	r2,-25764(gp)
1000ee00:	10800044 	addi	r2,r2,1
1000ee04:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1000ee08:	00002e06 	br	1000eec4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1000ee0c:	e0bffd17 	ldw	r2,-12(fp)
1000ee10:	10800017 	ldw	r2,0(r2)
1000ee14:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1000ee18:	e0bffd17 	ldw	r2,-12(fp)
1000ee1c:	10800403 	ldbu	r2,16(r2)
1000ee20:	10803fcc 	andi	r2,r2,255
1000ee24:	10000426 	beq	r2,zero,1000ee38 <alt_tick+0x54>
1000ee28:	d0a6d717 	ldw	r2,-25764(gp)
1000ee2c:	1000021e 	bne	r2,zero,1000ee38 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1000ee30:	e0bffd17 	ldw	r2,-12(fp)
1000ee34:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1000ee38:	e0bffd17 	ldw	r2,-12(fp)
1000ee3c:	10800217 	ldw	r2,8(r2)
1000ee40:	d0e6d717 	ldw	r3,-25764(gp)
1000ee44:	18801d36 	bltu	r3,r2,1000eebc <alt_tick+0xd8>
1000ee48:	e0bffd17 	ldw	r2,-12(fp)
1000ee4c:	10800403 	ldbu	r2,16(r2)
1000ee50:	10803fcc 	andi	r2,r2,255
1000ee54:	1000191e 	bne	r2,zero,1000eebc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1000ee58:	e0bffd17 	ldw	r2,-12(fp)
1000ee5c:	10800317 	ldw	r2,12(r2)
1000ee60:	e0fffd17 	ldw	r3,-12(fp)
1000ee64:	18c00517 	ldw	r3,20(r3)
1000ee68:	1809883a 	mov	r4,r3
1000ee6c:	103ee83a 	callr	r2
1000ee70:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1000ee74:	e0bfff17 	ldw	r2,-4(fp)
1000ee78:	1000031e 	bne	r2,zero,1000ee88 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1000ee7c:	e13ffd17 	ldw	r4,-12(fp)
1000ee80:	000ed4c0 	call	1000ed4c <alt_alarm_stop>
1000ee84:	00000d06 	br	1000eebc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1000ee88:	e0bffd17 	ldw	r2,-12(fp)
1000ee8c:	10c00217 	ldw	r3,8(r2)
1000ee90:	e0bfff17 	ldw	r2,-4(fp)
1000ee94:	1887883a 	add	r3,r3,r2
1000ee98:	e0bffd17 	ldw	r2,-12(fp)
1000ee9c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1000eea0:	e0bffd17 	ldw	r2,-12(fp)
1000eea4:	10c00217 	ldw	r3,8(r2)
1000eea8:	d0a6d717 	ldw	r2,-25764(gp)
1000eeac:	1880032e 	bgeu	r3,r2,1000eebc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1000eeb0:	e0bffd17 	ldw	r2,-12(fp)
1000eeb4:	00c00044 	movi	r3,1
1000eeb8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1000eebc:	e0bffe17 	ldw	r2,-8(fp)
1000eec0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1000eec4:	e0fffd17 	ldw	r3,-12(fp)
1000eec8:	d0a00e04 	addi	r2,gp,-32712
1000eecc:	18bfcf1e 	bne	r3,r2,1000ee0c <__alt_data_end+0xf800ee0c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1000eed0:	0001883a 	nop
}
1000eed4:	e037883a 	mov	sp,fp
1000eed8:	dfc00117 	ldw	ra,4(sp)
1000eedc:	df000017 	ldw	fp,0(sp)
1000eee0:	dec00204 	addi	sp,sp,8
1000eee4:	f800283a 	ret

1000eee8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1000eee8:	deffff04 	addi	sp,sp,-4
1000eeec:	df000015 	stw	fp,0(sp)
1000eef0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1000eef4:	000170fa 	wrctl	ienable,zero
}
1000eef8:	e037883a 	mov	sp,fp
1000eefc:	df000017 	ldw	fp,0(sp)
1000ef00:	dec00104 	addi	sp,sp,4
1000ef04:	f800283a 	ret

1000ef08 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1000ef08:	defffa04 	addi	sp,sp,-24
1000ef0c:	dfc00515 	stw	ra,20(sp)
1000ef10:	df000415 	stw	fp,16(sp)
1000ef14:	df000404 	addi	fp,sp,16
1000ef18:	e13ffe15 	stw	r4,-8(fp)
1000ef1c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1000ef20:	e0bfff17 	ldw	r2,-4(fp)
1000ef24:	10800017 	ldw	r2,0(r2)
1000ef28:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1000ef2c:	e13ffe17 	ldw	r4,-8(fp)
1000ef30:	0001b6c0 	call	10001b6c <strlen>
1000ef34:	10800044 	addi	r2,r2,1
1000ef38:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1000ef3c:	00000d06 	br	1000ef74 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1000ef40:	e0bffc17 	ldw	r2,-16(fp)
1000ef44:	10c00217 	ldw	r3,8(r2)
1000ef48:	e0bffd17 	ldw	r2,-12(fp)
1000ef4c:	1809883a 	mov	r4,r3
1000ef50:	e17ffe17 	ldw	r5,-8(fp)
1000ef54:	100d883a 	mov	r6,r2
1000ef58:	000f2680 	call	1000f268 <memcmp>
1000ef5c:	1000021e 	bne	r2,zero,1000ef68 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1000ef60:	e0bffc17 	ldw	r2,-16(fp)
1000ef64:	00000706 	br	1000ef84 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1000ef68:	e0bffc17 	ldw	r2,-16(fp)
1000ef6c:	10800017 	ldw	r2,0(r2)
1000ef70:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1000ef74:	e0fffc17 	ldw	r3,-16(fp)
1000ef78:	e0bfff17 	ldw	r2,-4(fp)
1000ef7c:	18bff01e 	bne	r3,r2,1000ef40 <__alt_data_end+0xf800ef40>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1000ef80:	0005883a 	mov	r2,zero
}
1000ef84:	e037883a 	mov	sp,fp
1000ef88:	dfc00117 	ldw	ra,4(sp)
1000ef8c:	df000017 	ldw	fp,0(sp)
1000ef90:	dec00204 	addi	sp,sp,8
1000ef94:	f800283a 	ret

1000ef98 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1000ef98:	defffb04 	addi	sp,sp,-20
1000ef9c:	dfc00415 	stw	ra,16(sp)
1000efa0:	df000315 	stw	fp,12(sp)
1000efa4:	df000304 	addi	fp,sp,12
1000efa8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1000efac:	00840074 	movhi	r2,4097
1000efb0:	10850e04 	addi	r2,r2,5176
1000efb4:	10800017 	ldw	r2,0(r2)
1000efb8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1000efbc:	00003106 	br	1000f084 <alt_find_file+0xec>
  {
    len = strlen(next->name);
1000efc0:	e0bffd17 	ldw	r2,-12(fp)
1000efc4:	10800217 	ldw	r2,8(r2)
1000efc8:	1009883a 	mov	r4,r2
1000efcc:	0001b6c0 	call	10001b6c <strlen>
1000efd0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1000efd4:	e0bffd17 	ldw	r2,-12(fp)
1000efd8:	10c00217 	ldw	r3,8(r2)
1000efdc:	e0bffe17 	ldw	r2,-8(fp)
1000efe0:	10bfffc4 	addi	r2,r2,-1
1000efe4:	1885883a 	add	r2,r3,r2
1000efe8:	10800003 	ldbu	r2,0(r2)
1000efec:	10803fcc 	andi	r2,r2,255
1000eff0:	1080201c 	xori	r2,r2,128
1000eff4:	10bfe004 	addi	r2,r2,-128
1000eff8:	10800bd8 	cmpnei	r2,r2,47
1000effc:	1000031e 	bne	r2,zero,1000f00c <alt_find_file+0x74>
    {
      len -= 1;
1000f000:	e0bffe17 	ldw	r2,-8(fp)
1000f004:	10bfffc4 	addi	r2,r2,-1
1000f008:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1000f00c:	e0bffe17 	ldw	r2,-8(fp)
1000f010:	e0ffff17 	ldw	r3,-4(fp)
1000f014:	1885883a 	add	r2,r3,r2
1000f018:	10800003 	ldbu	r2,0(r2)
1000f01c:	10803fcc 	andi	r2,r2,255
1000f020:	1080201c 	xori	r2,r2,128
1000f024:	10bfe004 	addi	r2,r2,-128
1000f028:	10800be0 	cmpeqi	r2,r2,47
1000f02c:	1000081e 	bne	r2,zero,1000f050 <alt_find_file+0xb8>
1000f030:	e0bffe17 	ldw	r2,-8(fp)
1000f034:	e0ffff17 	ldw	r3,-4(fp)
1000f038:	1885883a 	add	r2,r3,r2
1000f03c:	10800003 	ldbu	r2,0(r2)
1000f040:	10803fcc 	andi	r2,r2,255
1000f044:	1080201c 	xori	r2,r2,128
1000f048:	10bfe004 	addi	r2,r2,-128
1000f04c:	10000a1e 	bne	r2,zero,1000f078 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
1000f050:	e0bffd17 	ldw	r2,-12(fp)
1000f054:	10c00217 	ldw	r3,8(r2)
1000f058:	e0bffe17 	ldw	r2,-8(fp)
1000f05c:	1809883a 	mov	r4,r3
1000f060:	e17fff17 	ldw	r5,-4(fp)
1000f064:	100d883a 	mov	r6,r2
1000f068:	000f2680 	call	1000f268 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1000f06c:	1000021e 	bne	r2,zero,1000f078 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1000f070:	e0bffd17 	ldw	r2,-12(fp)
1000f074:	00000806 	br	1000f098 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
1000f078:	e0bffd17 	ldw	r2,-12(fp)
1000f07c:	10800017 	ldw	r2,0(r2)
1000f080:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1000f084:	e0fffd17 	ldw	r3,-12(fp)
1000f088:	00840074 	movhi	r2,4097
1000f08c:	10850e04 	addi	r2,r2,5176
1000f090:	18bfcb1e 	bne	r3,r2,1000efc0 <__alt_data_end+0xf800efc0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1000f094:	0005883a 	mov	r2,zero
}
1000f098:	e037883a 	mov	sp,fp
1000f09c:	dfc00117 	ldw	ra,4(sp)
1000f0a0:	df000017 	ldw	fp,0(sp)
1000f0a4:	dec00204 	addi	sp,sp,8
1000f0a8:	f800283a 	ret

1000f0ac <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1000f0ac:	defffa04 	addi	sp,sp,-24
1000f0b0:	dfc00515 	stw	ra,20(sp)
1000f0b4:	df000415 	stw	fp,16(sp)
1000f0b8:	dc000315 	stw	r16,12(sp)
1000f0bc:	df000404 	addi	fp,sp,16
1000f0c0:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
1000f0c4:	00bffa04 	movi	r2,-24
1000f0c8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1000f0cc:	e03ffc15 	stw	zero,-16(fp)
1000f0d0:	00002106 	br	1000f158 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
1000f0d4:	04040074 	movhi	r16,4097
1000f0d8:	84009004 	addi	r16,r16,576
1000f0dc:	e0bffc17 	ldw	r2,-16(fp)
1000f0e0:	1009883a 	mov	r4,r2
1000f0e4:	01400304 	movi	r5,12
1000f0e8:	00019c40 	call	100019c4 <__mulsi3>
1000f0ec:	8085883a 	add	r2,r16,r2
1000f0f0:	10800017 	ldw	r2,0(r2)
1000f0f4:	1000151e 	bne	r2,zero,1000f14c <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
1000f0f8:	04040074 	movhi	r16,4097
1000f0fc:	84009004 	addi	r16,r16,576
1000f100:	e0bffc17 	ldw	r2,-16(fp)
1000f104:	1009883a 	mov	r4,r2
1000f108:	01400304 	movi	r5,12
1000f10c:	00019c40 	call	100019c4 <__mulsi3>
1000f110:	8085883a 	add	r2,r16,r2
1000f114:	e0fffe17 	ldw	r3,-8(fp)
1000f118:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1000f11c:	00840074 	movhi	r2,4097
1000f120:	10851204 	addi	r2,r2,5192
1000f124:	10c00017 	ldw	r3,0(r2)
1000f128:	e0bffc17 	ldw	r2,-16(fp)
1000f12c:	1880040e 	bge	r3,r2,1000f140 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
1000f130:	00840074 	movhi	r2,4097
1000f134:	10851204 	addi	r2,r2,5192
1000f138:	e0fffc17 	ldw	r3,-16(fp)
1000f13c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
1000f140:	e0bffc17 	ldw	r2,-16(fp)
1000f144:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
1000f148:	00000606 	br	1000f164 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1000f14c:	e0bffc17 	ldw	r2,-16(fp)
1000f150:	10800044 	addi	r2,r2,1
1000f154:	e0bffc15 	stw	r2,-16(fp)
1000f158:	e0bffc17 	ldw	r2,-16(fp)
1000f15c:	10800810 	cmplti	r2,r2,32
1000f160:	103fdc1e 	bne	r2,zero,1000f0d4 <__alt_data_end+0xf800f0d4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1000f164:	e0bffd17 	ldw	r2,-12(fp)
}
1000f168:	e6ffff04 	addi	sp,fp,-4
1000f16c:	dfc00217 	ldw	ra,8(sp)
1000f170:	df000117 	ldw	fp,4(sp)
1000f174:	dc000017 	ldw	r16,0(sp)
1000f178:	dec00304 	addi	sp,sp,12
1000f17c:	f800283a 	ret

1000f180 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1000f180:	defffe04 	addi	sp,sp,-8
1000f184:	df000115 	stw	fp,4(sp)
1000f188:	df000104 	addi	fp,sp,4
1000f18c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1000f190:	e0bfff17 	ldw	r2,-4(fp)
1000f194:	10bffe84 	addi	r2,r2,-6
1000f198:	10c00428 	cmpgeui	r3,r2,16
1000f19c:	18001a1e 	bne	r3,zero,1000f208 <alt_exception_cause_generated_bad_addr+0x88>
1000f1a0:	100690ba 	slli	r3,r2,2
1000f1a4:	00840074 	movhi	r2,4097
1000f1a8:	10bc6e04 	addi	r2,r2,-3656
1000f1ac:	1885883a 	add	r2,r3,r2
1000f1b0:	10800017 	ldw	r2,0(r2)
1000f1b4:	1000683a 	jmp	r2
1000f1b8:	1000f1f8 	rdprs	zero,r2,967
1000f1bc:	1000f1f8 	rdprs	zero,r2,967
1000f1c0:	1000f208 	cmpgei	zero,r2,968
1000f1c4:	1000f208 	cmpgei	zero,r2,968
1000f1c8:	1000f208 	cmpgei	zero,r2,968
1000f1cc:	1000f1f8 	rdprs	zero,r2,967
1000f1d0:	1000f200 	call	11000f20 <_gp+0xfe7b00>
1000f1d4:	1000f208 	cmpgei	zero,r2,968
1000f1d8:	1000f1f8 	rdprs	zero,r2,967
1000f1dc:	1000f1f8 	rdprs	zero,r2,967
1000f1e0:	1000f208 	cmpgei	zero,r2,968
1000f1e4:	1000f1f8 	rdprs	zero,r2,967
1000f1e8:	1000f200 	call	11000f20 <_gp+0xfe7b00>
1000f1ec:	1000f208 	cmpgei	zero,r2,968
1000f1f0:	1000f208 	cmpgei	zero,r2,968
1000f1f4:	1000f1f8 	rdprs	zero,r2,967
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1000f1f8:	00800044 	movi	r2,1
1000f1fc:	00000306 	br	1000f20c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1000f200:	0005883a 	mov	r2,zero
1000f204:	00000106 	br	1000f20c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1000f208:	0005883a 	mov	r2,zero
  }
}
1000f20c:	e037883a 	mov	sp,fp
1000f210:	df000017 	ldw	fp,0(sp)
1000f214:	dec00104 	addi	sp,sp,4
1000f218:	f800283a 	ret

1000f21c <atexit>:
1000f21c:	200b883a 	mov	r5,r4
1000f220:	000d883a 	mov	r6,zero
1000f224:	0009883a 	mov	r4,zero
1000f228:	000f883a 	mov	r7,zero
1000f22c:	000f2e41 	jmpi	1000f2e4 <__register_exitproc>

1000f230 <exit>:
1000f230:	defffe04 	addi	sp,sp,-8
1000f234:	000b883a 	mov	r5,zero
1000f238:	dc000015 	stw	r16,0(sp)
1000f23c:	dfc00115 	stw	ra,4(sp)
1000f240:	2021883a 	mov	r16,r4
1000f244:	000f3f80 	call	1000f3f8 <__call_exitprocs>
1000f248:	00840074 	movhi	r2,4097
1000f24c:	10850804 	addi	r2,r2,5152
1000f250:	11000017 	ldw	r4,0(r2)
1000f254:	20800f17 	ldw	r2,60(r4)
1000f258:	10000126 	beq	r2,zero,1000f260 <exit+0x30>
1000f25c:	103ee83a 	callr	r2
1000f260:	8009883a 	mov	r4,r16
1000f264:	000f58c0 	call	1000f58c <_exit>

1000f268 <memcmp>:
1000f268:	01c000c4 	movi	r7,3
1000f26c:	3980192e 	bgeu	r7,r6,1000f2d4 <memcmp+0x6c>
1000f270:	2144b03a 	or	r2,r4,r5
1000f274:	11c4703a 	and	r2,r2,r7
1000f278:	10000f26 	beq	r2,zero,1000f2b8 <memcmp+0x50>
1000f27c:	20800003 	ldbu	r2,0(r4)
1000f280:	28c00003 	ldbu	r3,0(r5)
1000f284:	10c0151e 	bne	r2,r3,1000f2dc <memcmp+0x74>
1000f288:	31bfff84 	addi	r6,r6,-2
1000f28c:	01ffffc4 	movi	r7,-1
1000f290:	00000406 	br	1000f2a4 <memcmp+0x3c>
1000f294:	20800003 	ldbu	r2,0(r4)
1000f298:	28c00003 	ldbu	r3,0(r5)
1000f29c:	31bfffc4 	addi	r6,r6,-1
1000f2a0:	10c00e1e 	bne	r2,r3,1000f2dc <memcmp+0x74>
1000f2a4:	21000044 	addi	r4,r4,1
1000f2a8:	29400044 	addi	r5,r5,1
1000f2ac:	31fff91e 	bne	r6,r7,1000f294 <__alt_data_end+0xf800f294>
1000f2b0:	0005883a 	mov	r2,zero
1000f2b4:	f800283a 	ret
1000f2b8:	20c00017 	ldw	r3,0(r4)
1000f2bc:	28800017 	ldw	r2,0(r5)
1000f2c0:	1880041e 	bne	r3,r2,1000f2d4 <memcmp+0x6c>
1000f2c4:	31bfff04 	addi	r6,r6,-4
1000f2c8:	21000104 	addi	r4,r4,4
1000f2cc:	29400104 	addi	r5,r5,4
1000f2d0:	39bff936 	bltu	r7,r6,1000f2b8 <__alt_data_end+0xf800f2b8>
1000f2d4:	303fe91e 	bne	r6,zero,1000f27c <__alt_data_end+0xf800f27c>
1000f2d8:	003ff506 	br	1000f2b0 <__alt_data_end+0xf800f2b0>
1000f2dc:	10c5c83a 	sub	r2,r2,r3
1000f2e0:	f800283a 	ret

1000f2e4 <__register_exitproc>:
1000f2e4:	00840074 	movhi	r2,4097
1000f2e8:	defffa04 	addi	sp,sp,-24
1000f2ec:	10850804 	addi	r2,r2,5152
1000f2f0:	dc000315 	stw	r16,12(sp)
1000f2f4:	14000017 	ldw	r16,0(r2)
1000f2f8:	dc400415 	stw	r17,16(sp)
1000f2fc:	dfc00515 	stw	ra,20(sp)
1000f300:	80805217 	ldw	r2,328(r16)
1000f304:	2023883a 	mov	r17,r4
1000f308:	10003626 	beq	r2,zero,1000f3e4 <__register_exitproc+0x100>
1000f30c:	10c00117 	ldw	r3,4(r2)
1000f310:	010007c4 	movi	r4,31
1000f314:	20c00e16 	blt	r4,r3,1000f350 <__register_exitproc+0x6c>
1000f318:	1a400044 	addi	r9,r3,1
1000f31c:	8800211e 	bne	r17,zero,1000f3a4 <__register_exitproc+0xc0>
1000f320:	18c00084 	addi	r3,r3,2
1000f324:	18c7883a 	add	r3,r3,r3
1000f328:	18c7883a 	add	r3,r3,r3
1000f32c:	12400115 	stw	r9,4(r2)
1000f330:	10c7883a 	add	r3,r2,r3
1000f334:	19400015 	stw	r5,0(r3)
1000f338:	0005883a 	mov	r2,zero
1000f33c:	dfc00517 	ldw	ra,20(sp)
1000f340:	dc400417 	ldw	r17,16(sp)
1000f344:	dc000317 	ldw	r16,12(sp)
1000f348:	dec00604 	addi	sp,sp,24
1000f34c:	f800283a 	ret
1000f350:	00800034 	movhi	r2,0
1000f354:	10800004 	addi	r2,r2,0
1000f358:	10002526 	beq	r2,zero,1000f3f0 <__register_exitproc+0x10c>
1000f35c:	01006404 	movi	r4,400
1000f360:	d9400015 	stw	r5,0(sp)
1000f364:	d9800115 	stw	r6,4(sp)
1000f368:	d9c00215 	stw	r7,8(sp)
1000f36c:	00000000 	call	10000000 <__alt_mem_sdram>
1000f370:	d9400017 	ldw	r5,0(sp)
1000f374:	d9800117 	ldw	r6,4(sp)
1000f378:	d9c00217 	ldw	r7,8(sp)
1000f37c:	10001c26 	beq	r2,zero,1000f3f0 <__register_exitproc+0x10c>
1000f380:	80c05217 	ldw	r3,328(r16)
1000f384:	10000115 	stw	zero,4(r2)
1000f388:	02400044 	movi	r9,1
1000f38c:	10c00015 	stw	r3,0(r2)
1000f390:	80805215 	stw	r2,328(r16)
1000f394:	10006215 	stw	zero,392(r2)
1000f398:	10006315 	stw	zero,396(r2)
1000f39c:	0007883a 	mov	r3,zero
1000f3a0:	883fdf26 	beq	r17,zero,1000f320 <__alt_data_end+0xf800f320>
1000f3a4:	18d1883a 	add	r8,r3,r3
1000f3a8:	4211883a 	add	r8,r8,r8
1000f3ac:	1211883a 	add	r8,r2,r8
1000f3b0:	41802215 	stw	r6,136(r8)
1000f3b4:	01000044 	movi	r4,1
1000f3b8:	11806217 	ldw	r6,392(r2)
1000f3bc:	20c8983a 	sll	r4,r4,r3
1000f3c0:	310cb03a 	or	r6,r6,r4
1000f3c4:	11806215 	stw	r6,392(r2)
1000f3c8:	41c04215 	stw	r7,264(r8)
1000f3cc:	01800084 	movi	r6,2
1000f3d0:	89bfd31e 	bne	r17,r6,1000f320 <__alt_data_end+0xf800f320>
1000f3d4:	11806317 	ldw	r6,396(r2)
1000f3d8:	3108b03a 	or	r4,r6,r4
1000f3dc:	11006315 	stw	r4,396(r2)
1000f3e0:	003fcf06 	br	1000f320 <__alt_data_end+0xf800f320>
1000f3e4:	80805304 	addi	r2,r16,332
1000f3e8:	80805215 	stw	r2,328(r16)
1000f3ec:	003fc706 	br	1000f30c <__alt_data_end+0xf800f30c>
1000f3f0:	00bfffc4 	movi	r2,-1
1000f3f4:	003fd106 	br	1000f33c <__alt_data_end+0xf800f33c>

1000f3f8 <__call_exitprocs>:
1000f3f8:	00840074 	movhi	r2,4097
1000f3fc:	10850804 	addi	r2,r2,5152
1000f400:	10800017 	ldw	r2,0(r2)
1000f404:	defff404 	addi	sp,sp,-48
1000f408:	dd800815 	stw	r22,32(sp)
1000f40c:	d8800015 	stw	r2,0(sp)
1000f410:	10805204 	addi	r2,r2,328
1000f414:	dd000615 	stw	r20,24(sp)
1000f418:	dc800415 	stw	r18,16(sp)
1000f41c:	dfc00b15 	stw	ra,44(sp)
1000f420:	df000a15 	stw	fp,40(sp)
1000f424:	ddc00915 	stw	r23,36(sp)
1000f428:	dd400715 	stw	r21,28(sp)
1000f42c:	dcc00515 	stw	r19,20(sp)
1000f430:	dc400315 	stw	r17,12(sp)
1000f434:	dc000215 	stw	r16,8(sp)
1000f438:	2025883a 	mov	r18,r4
1000f43c:	2829883a 	mov	r20,r5
1000f440:	d8800115 	stw	r2,4(sp)
1000f444:	05bfffc4 	movi	r22,-1
1000f448:	d8800017 	ldw	r2,0(sp)
1000f44c:	14c05217 	ldw	r19,328(r2)
1000f450:	98001d26 	beq	r19,zero,1000f4c8 <__call_exitprocs+0xd0>
1000f454:	dd400117 	ldw	r21,4(sp)
1000f458:	98800117 	ldw	r2,4(r19)
1000f45c:	173fffc4 	addi	fp,r2,-1
1000f460:	e0000d16 	blt	fp,zero,1000f498 <__call_exitprocs+0xa0>
1000f464:	14000044 	addi	r16,r2,1
1000f468:	8421883a 	add	r16,r16,r16
1000f46c:	8421883a 	add	r16,r16,r16
1000f470:	84402004 	addi	r17,r16,128
1000f474:	9c63883a 	add	r17,r19,r17
1000f478:	9c21883a 	add	r16,r19,r16
1000f47c:	a0001e26 	beq	r20,zero,1000f4f8 <__call_exitprocs+0x100>
1000f480:	80804017 	ldw	r2,256(r16)
1000f484:	15001c26 	beq	r2,r20,1000f4f8 <__call_exitprocs+0x100>
1000f488:	e73fffc4 	addi	fp,fp,-1
1000f48c:	843fff04 	addi	r16,r16,-4
1000f490:	8c7fff04 	addi	r17,r17,-4
1000f494:	e5bff91e 	bne	fp,r22,1000f47c <__alt_data_end+0xf800f47c>
1000f498:	00800034 	movhi	r2,0
1000f49c:	10800004 	addi	r2,r2,0
1000f4a0:	10000926 	beq	r2,zero,1000f4c8 <__call_exitprocs+0xd0>
1000f4a4:	98800117 	ldw	r2,4(r19)
1000f4a8:	1000311e 	bne	r2,zero,1000f570 <__call_exitprocs+0x178>
1000f4ac:	98800017 	ldw	r2,0(r19)
1000f4b0:	10003426 	beq	r2,zero,1000f584 <__call_exitprocs+0x18c>
1000f4b4:	9809883a 	mov	r4,r19
1000f4b8:	a8800015 	stw	r2,0(r21)
1000f4bc:	00000000 	call	10000000 <__alt_mem_sdram>
1000f4c0:	acc00017 	ldw	r19,0(r21)
1000f4c4:	983fe41e 	bne	r19,zero,1000f458 <__alt_data_end+0xf800f458>
1000f4c8:	dfc00b17 	ldw	ra,44(sp)
1000f4cc:	df000a17 	ldw	fp,40(sp)
1000f4d0:	ddc00917 	ldw	r23,36(sp)
1000f4d4:	dd800817 	ldw	r22,32(sp)
1000f4d8:	dd400717 	ldw	r21,28(sp)
1000f4dc:	dd000617 	ldw	r20,24(sp)
1000f4e0:	dcc00517 	ldw	r19,20(sp)
1000f4e4:	dc800417 	ldw	r18,16(sp)
1000f4e8:	dc400317 	ldw	r17,12(sp)
1000f4ec:	dc000217 	ldw	r16,8(sp)
1000f4f0:	dec00c04 	addi	sp,sp,48
1000f4f4:	f800283a 	ret
1000f4f8:	98800117 	ldw	r2,4(r19)
1000f4fc:	80c00017 	ldw	r3,0(r16)
1000f500:	10bfffc4 	addi	r2,r2,-1
1000f504:	17001526 	beq	r2,fp,1000f55c <__call_exitprocs+0x164>
1000f508:	80000015 	stw	zero,0(r16)
1000f50c:	183fde26 	beq	r3,zero,1000f488 <__alt_data_end+0xf800f488>
1000f510:	00800044 	movi	r2,1
1000f514:	1708983a 	sll	r4,r2,fp
1000f518:	98806217 	ldw	r2,392(r19)
1000f51c:	9dc00117 	ldw	r23,4(r19)
1000f520:	2084703a 	and	r2,r4,r2
1000f524:	1000061e 	bne	r2,zero,1000f540 <__call_exitprocs+0x148>
1000f528:	183ee83a 	callr	r3
1000f52c:	98800117 	ldw	r2,4(r19)
1000f530:	15ffc51e 	bne	r2,r23,1000f448 <__alt_data_end+0xf800f448>
1000f534:	a8800017 	ldw	r2,0(r21)
1000f538:	14ffd326 	beq	r2,r19,1000f488 <__alt_data_end+0xf800f488>
1000f53c:	003fc206 	br	1000f448 <__alt_data_end+0xf800f448>
1000f540:	98806317 	ldw	r2,396(r19)
1000f544:	2084703a 	and	r2,r4,r2
1000f548:	1000061e 	bne	r2,zero,1000f564 <__call_exitprocs+0x16c>
1000f54c:	89400017 	ldw	r5,0(r17)
1000f550:	9009883a 	mov	r4,r18
1000f554:	183ee83a 	callr	r3
1000f558:	003ff406 	br	1000f52c <__alt_data_end+0xf800f52c>
1000f55c:	9f000115 	stw	fp,4(r19)
1000f560:	003fea06 	br	1000f50c <__alt_data_end+0xf800f50c>
1000f564:	89000017 	ldw	r4,0(r17)
1000f568:	183ee83a 	callr	r3
1000f56c:	003fef06 	br	1000f52c <__alt_data_end+0xf800f52c>
1000f570:	98800017 	ldw	r2,0(r19)
1000f574:	982b883a 	mov	r21,r19
1000f578:	1027883a 	mov	r19,r2
1000f57c:	983fb61e 	bne	r19,zero,1000f458 <__alt_data_end+0xf800f458>
1000f580:	003fd106 	br	1000f4c8 <__alt_data_end+0xf800f4c8>
1000f584:	0005883a 	mov	r2,zero
1000f588:	003ffa06 	br	1000f574 <__alt_data_end+0xf800f574>

1000f58c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1000f58c:	defffd04 	addi	sp,sp,-12
1000f590:	df000215 	stw	fp,8(sp)
1000f594:	df000204 	addi	fp,sp,8
1000f598:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1000f59c:	0001883a 	nop
1000f5a0:	e0bfff17 	ldw	r2,-4(fp)
1000f5a4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1000f5a8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1000f5ac:	10000226 	beq	r2,zero,1000f5b8 <_exit+0x2c>
    ALT_SIM_FAIL();
1000f5b0:	002af070 	cmpltui	zero,zero,43969
1000f5b4:	00000106 	br	1000f5bc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1000f5b8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1000f5bc:	003fff06 	br	1000f5bc <__alt_data_end+0xf800f5bc>
